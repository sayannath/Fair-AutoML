[
    {
        "config_id": 1,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5689655172,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 542,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 100,
            "feature_preprocessor:kernel_pca:gamma": 0.01
        },
        "cost": 0.0,
        "time": 0.9225380420684814,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Default"
        }
    },
    {
        "config_id": 2,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.324746933670123,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 914,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.34205386197266424,
            "feature_preprocessor:select_percentile_classification:percentile": 25.60600084339881,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2095095864169458,
        "time": 1.396315097808838,
        "additional_info": {
            "duration": 1.3761792182922363,
            "num_run": 3,
            "train_loss": 1.1943677627575047,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 3,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5655363184724049,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 808,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.017033095362107065,
            "feature_preprocessor:select_percentile_classification:percentile": 88.0643447095602,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2368932257462486,
        "time": 2.0849430561065674,
        "additional_info": {
            "duration": 2.0598950386047363,
            "num_run": 4,
            "train_loss": 1.1105761915105736,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 4,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2956662789203281,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 210,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 898,
            "feature_preprocessor:kernel_pca:gamma": 0.2869594963777401
        },
        "cost": 0.0,
        "time": 2.475198984146118,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 5,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.837403983949399,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 119,
            "feature_preprocessor:select_percentile_classification:percentile": 13.681965786397837,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2529342757988513,
        "time": 0.5321400165557861,
        "additional_info": {
            "duration": 0.5201430320739746,
            "num_run": 6,
            "train_loss": 1.135346359461229,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 6,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6872851788198453,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 662,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00036467927269600686,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1383,
            "feature_preprocessor:kernel_pca:coef0": 0.6235766780491931,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.003261376587745965
        },
        "cost": 0.0,
        "time": 4.4563610553741455,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 7,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5224057887484783,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 841,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.05351604603571269,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 680,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 664,
            "feature_preprocessor:kernel_pca:gamma": 9.74931726211964e-05
        },
        "cost": 0.0,
        "time": 4.724348783493042,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 8,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7748255824839478,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 197,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.23001320846802145,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 499,
            "feature_preprocessor:kernel_pca:coef0": -0.6357538757279788,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.0007458639226680238
        },
        "cost": 0.0,
        "time": 1.5021259784698486,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 9,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8210789021076332,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 598,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00013274488565659755,
            "feature_preprocessor:select_percentile_classification:percentile": 51.26229577541236,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2412522943820012,
        "time": 1.137024164199829,
        "additional_info": {
            "duration": 1.1196630001068115,
            "num_run": 10,
            "train_loss": 1.156116189183527,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 10,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5062471029202658,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 449,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0004137179799770392,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 959,
            "feature_preprocessor:kernel_pca:coef0": 0.16326625271977124,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.0011112557530674702
        },
        "cost": 0.0,
        "time": 2.286223888397217,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 11,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6905504213120528,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 305,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1420,
            "feature_preprocessor:kernel_pca:coef0": -0.89350143582273
        },
        "cost": 0.0,
        "time": 4.629008054733276,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 12,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2418795148032997,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 775,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.000708831979035679,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1020,
            "feature_preprocessor:kernel_pca:coef0": -0.6666362814962019
        },
        "cost": 0.0,
        "time": 3.395380973815918,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 13,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2774061400538337,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 404,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00020209263122539359,
            "feature_preprocessor:select_percentile_classification:percentile": 36.399411690537505,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2278893182135076,
        "time": 0.80379319190979,
        "additional_info": {
            "duration": 0.7910017967224121,
            "num_run": 14,
            "train_loss": 1.227209227665474,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 14,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6289871299363724,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 354,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9106262459886127,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.03150021470439391,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 958,
            "feature_preprocessor:kernel_pca:coef0": -0.5873681357135208
        },
        "cost": 0.0,
        "time": 2.6922998428344727,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 15,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6538036796461141,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 375,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0010677756884111482,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 41,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.08718002925131771,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2216803288362355,
        "time": 1.2894039154052734,
        "additional_info": {
            "duration": 1.2737619876861572,
            "num_run": 16,
            "train_loss": 1.1455826358358854,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 16,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7599931367229971,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 123,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 47,
            "feature_preprocessor:kernel_pca:coef0": -0.5459973913962579
        },
        "cost": 0.0,
        "time": 1.161350965499878,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 17,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3401793410004923,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 424,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7994103787735269,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.17960537934984275,
            "feature_preprocessor:select_percentile_classification:percentile": 50.96979762644389,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2456401551292366,
        "time": 1.7140562534332275,
        "additional_info": {
            "duration": 1.668917179107666,
            "num_run": 18,
            "train_loss": 1.2135847397789974,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 18,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3885868160689333,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 291,
            "feature_preprocessor:select_rates_classification:alpha": 0.3402221356835587,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.8724300861358643,
        "additional_info": {
            "duration": 1.8596618175506592,
            "num_run": 19,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 19,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2930106645445779,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 106,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006018110853127498,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1214
        },
        "cost": 0.0,
        "time": 4.41112494468689,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 20,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.47765313807150767,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 854,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00011534814051646902,
            "feature_preprocessor:select_rates_classification:alpha": 0.10704954728570272,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 2.1179747581481934,
        "additional_info": {
            "duration": 2.0996639728546143,
            "num_run": 21,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 21,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5114312772644909,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 413,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.020255154925821556,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1251
        },
        "cost": 0.0,
        "time": 3.5971689224243164,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 22,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6567201424049878,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 698,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0023766680359845324,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1797,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.1814686466578859,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2183354018460206,
        "time": 4.237030982971191,
        "additional_info": {
            "duration": 4.213568925857544,
            "num_run": 23,
            "train_loss": 1.1282313897712626,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 23,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.25537061258675453,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 753,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1915
        },
        "cost": 0.0,
        "time": 6.373017311096191,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 24,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43885646528000705,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 517,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1624,
            "feature_preprocessor:kernel_pca:coef0": -0.609709519388673,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 3.72678934824432e-05
        },
        "cost": 0.0,
        "time": 5.771221160888672,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 25,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8055770567508522,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 853,
            "feature_preprocessor:select_rates_classification:alpha": 0.27119901603701657,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2732094218767802,
        "time": 1.4345831871032715,
        "additional_info": {
            "duration": 1.410858154296875,
            "num_run": 26,
            "train_loss": 1.1341410670895467,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 26,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5659753360687497,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 141,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1618
        },
        "cost": 0.0,
        "time": 5.496577978134155,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 27,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2675325077955926,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 327,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1631,
            "feature_preprocessor:kernel_pca:coef0": -0.081310898618141,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.0069982864530313185
        },
        "cost": 0.0,
        "time": 5.822443008422852,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 28,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.44886353034314297,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 694,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1731,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 236
        },
        "cost": 0.0,
        "time": 3.957066059112549,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 29,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7689362489282561,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 798,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8593653576201642,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2549128775252708,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1851,
            "feature_preprocessor:kernel_pca:gamma": 3.91910151027341e-05
        },
        "cost": 0.0,
        "time": 7.201459884643555,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 30,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4346119312377096,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 191,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9658529621214575,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.02138109375385309,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1686
        },
        "cost": 0.0,
        "time": 7.158046245574951,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 31,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.31881864443395663,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 888,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0013887493917388231,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1539,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 139,
            "feature_preprocessor:kernel_pca:gamma": 5.426596188630104
        },
        "cost": 0.0,
        "time": 3.646204948425293,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 32,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4334223249226681,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 989,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 995,
            "feature_preprocessor:kernel_pca:gamma": 5.359592021610357e-05
        },
        "cost": 0.0,
        "time": 2.234339714050293,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 33,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6265681195711053,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 348,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.007155477170651847,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1709,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.019834435918459924,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 4.56854510307312,
        "additional_info": {
            "duration": 4.5543999671936035,
            "num_run": 34,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 34,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5670762680303111,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 823,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.43517254794725574,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9059468116479844,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2699498829560035,
            "feature_preprocessor:select_percentile_classification:percentile": 56.99781838379517,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2510050625454878,
        "time": 1.9765961170196533,
        "additional_info": {
            "duration": 1.9569902420043945,
            "num_run": 35,
            "train_loss": 1.1526553504392858,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 35,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7356973111743506,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 716,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.18791449136703064,
            "feature_preprocessor:select_rates_classification:alpha": 0.24877879988898918,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2526883644993074,
        "time": 1.2748558521270752,
        "additional_info": {
            "duration": 1.2543730735778809,
            "num_run": 36,
            "train_loss": 1.1471529964908131,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 36,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7144375350156369,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 531,
            "feature_preprocessor:select_rates_classification:alpha": 0.37177404761955457,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2117258423357777,
        "time": 1.1494009494781494,
        "additional_info": {
            "duration": 1.1341359615325928,
            "num_run": 37,
            "train_loss": 1.1540972247414198,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 37,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.788547507381312,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 828,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.11645767149570208,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8056164411430623,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.08619155092898903,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1251,
            "feature_preprocessor:kernel_pca:coef0": -0.8977365387752292
        },
        "cost": 0.0,
        "time": 3.8725268840789795,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 38,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4984544791115272,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 995,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.020696371506060338,
            "feature_preprocessor:select_percentile_classification:percentile": 68.965142035893,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.235765559954904,
        "time": 1.2976529598236084,
        "additional_info": {
            "duration": 1.2774968147277832,
            "num_run": 39,
            "train_loss": 1.1756888798412741,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 39,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8005474627393152,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 949,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.008008025415657195,
            "feature_preprocessor:select_rates_classification:alpha": 0.4288691740298151,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2520356595161592,
        "time": 1.3322880268096924,
        "additional_info": {
            "duration": 1.3039731979370117,
            "num_run": 40,
            "train_loss": 1.1156470000242726,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 40,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8732067065812208,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 410,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 179,
            "feature_preprocessor:kernel_pca:coef0": 0.34398379787472066,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.00021264664445481908
        },
        "cost": 0.0,
        "time": 0.8670248985290527,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 41,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6150167408848415,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 176,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8765429174660624,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2207145866901622,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1429,
            "feature_preprocessor:kernel_pca:gamma": 0.09261231715432498
        },
        "cost": 0.0,
        "time": 4.693810939788818,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 42,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6323914781301903,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 728,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.28735087355551964,
            "feature_preprocessor:select_percentile_classification:percentile": 88.86992514345732,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2500977954690418,
        "time": 1.3355109691619873,
        "additional_info": {
            "duration": 1.3178691864013672,
            "num_run": 43,
            "train_loss": 1.154996515019084,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 43,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6714571972129578,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 101,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1578,
            "feature_preprocessor:kernel_pca:gamma": 2.0016411950063246
        },
        "cost": 0.0,
        "time": 5.271821022033691,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 44,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8022399363180797,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 177,
            "feature_preprocessor:select_rates_classification:alpha": 0.026873598118775918,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2345618350671828,
        "time": 1.1415791511535645,
        "additional_info": {
            "duration": 1.1306407451629639,
            "num_run": 45,
            "train_loss": 1.160505538281436,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 45,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6547524918803961,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 765,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1040,
            "feature_preprocessor:kernel_pca:gamma": 0.01950333534824106
        },
        "cost": 0.0,
        "time": 2.8911008834838867,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 46,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4251528954829208,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 199,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0002213595075586545,
            "feature_preprocessor:select_rates_classification:alpha": 0.1350204029672701,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.24851020592873,
        "time": 0.6059520244598389,
        "additional_info": {
            "duration": 0.5948770046234131,
            "num_run": 47,
            "train_loss": 1.1600900421921814,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 47,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6214719449629983,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 527,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01862625371216899,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9440238261889986,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1418879538089693,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1011,
            "feature_preprocessor:kernel_pca:coef0": -0.4108889011765742
        },
        "cost": 0.0,
        "time": 2.892017126083374,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 48,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6502360503177682,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 357,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 16,
            "feature_preprocessor:kernel_pca:coef0": -0.8115530632946577
        },
        "cost": 0.0,
        "time": 0.6836321353912354,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 49,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5382250518667062,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 801,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 525,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.35821597729464194,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.24518112892926,
        "time": 1.549043893814087,
        "additional_info": {
            "duration": 1.529676914215088,
            "num_run": 50,
            "train_loss": 1.1657274063262137,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 50,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8289324856241054,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 671,
            "feature_preprocessor:select_percentile_classification:percentile": 85.47194715363577,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2466082752675853,
        "time": 1.411013126373291,
        "additional_info": {
            "duration": 1.3914978504180908,
            "num_run": 51,
            "train_loss": 1.1292331786760952,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 51,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8010800472314785,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 745,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 104,
            "feature_preprocessor:kernel_pca:gamma": 0.7050324122153916
        },
        "cost": 0.0,
        "time": 0.8034639358520508,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 52,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2814363408572348,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 765,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 788,
            "feature_preprocessor:kernel_pca:coef0": -0.3612147072908336,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.14303961852147234
        },
        "cost": 0.0,
        "time": 2.1730480194091797,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 53,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.22425154387494114,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 565,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7348119252378806,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.14171421709326468,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1044,
            "feature_preprocessor:kernel_pca:coef0": 0.9382946585840068
        },
        "cost": 0.0,
        "time": 3.0482380390167236,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 54,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2340516343253193,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 803,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.17973811986773944,
            "feature_preprocessor:select_percentile_classification:percentile": 75.41918304706023,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.226777024369891,
        "time": 2.22772216796875,
        "additional_info": {
            "duration": 2.2103590965270996,
            "num_run": 55,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 55,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5547191056423433,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 666,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00015011149618087032,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 438,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 56.036466803439325,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2437191659132265,
        "time": 1.3945629596710205,
        "additional_info": {
            "duration": 1.3770861625671387,
            "num_run": 56,
            "train_loss": 1.161376454288207,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 56,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5440654812114005,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 322,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005506450819518969,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1874,
            "feature_preprocessor:kernel_pca:gamma": 3.5092358654153992
        },
        "cost": 0.0,
        "time": 7.116301774978638,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 57,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7056389504450917,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 749,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7719212279039238,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2509162667392321,
            "feature_preprocessor:select_percentile_classification:percentile": 54.197573288822724,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2550301202655878,
        "time": 1.93756103515625,
        "additional_info": {
            "duration": 1.9188339710235596,
            "num_run": 58,
            "train_loss": 1.1517479028501305,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 58,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.873354828297791,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 115,
            "feature_preprocessor:select_rates_classification:alpha": 0.1165956080041931,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.671314001083374,
        "additional_info": {
            "duration": 1.661026954650879,
            "num_run": 59,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 59,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.37688429449588473,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 789,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006008283708597864,
            "feature_preprocessor:select_percentile_classification:percentile": 75.03030475174754,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2524228976561,
        "time": 1.258354902267456,
        "additional_info": {
            "duration": 1.240835189819336,
            "num_run": 60,
            "train_loss": 1.1811592475189725,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 60,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.36845656476560307,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 735,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 330,
            "feature_preprocessor:kernel_pca:coef0": 0.21969545534579504,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0007363607331239803
        },
        "cost": 0.0,
        "time": 1.0792860984802246,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 61,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6537358922555128,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 101,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00033203320402607915,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1597,
            "feature_preprocessor:kernel_pca:coef0": 0.7263648349297307
        },
        "cost": 0.0,
        "time": 6.605989933013916,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 62,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.837702623918904,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 424,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.4878035600720109,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1760,
            "feature_preprocessor:kernel_pca:gamma": 0.0018825113054987633
        },
        "cost": 0.0,
        "time": 6.549316883087158,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 63,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.506587994575434,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 399,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1569,
            "feature_preprocessor:kernel_pca:gamma": 0.03019893965419261
        },
        "cost": 0.0,
        "time": 6.807861089706421,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 64,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.753212653663347,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 166,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0032844335852851656,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1199,
            "feature_preprocessor:kernel_pca:coef0": 0.3896919860757424,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.022608713838546415
        },
        "cost": 0.0,
        "time": 3.6634891033172607,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 65,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3302643505091988,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 467,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.047070151779807244,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 164,
            "feature_preprocessor:kernel_pca:coef0": 0.44087661154245517
        },
        "cost": 0.0,
        "time": 0.8461439609527588,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 66,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6242843440871273,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 340,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9072303905729981,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24815220395231724,
            "feature_preprocessor:select_percentile_classification:percentile": 5.345631128149504,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2359219468523266,
        "time": 1.4802539348602295,
        "additional_info": {
            "duration": 1.46726393699646,
            "num_run": 67,
            "train_loss": 1.1888904967732976,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 67,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8523425955742594,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 218,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.13815325185894275,
            "feature_preprocessor:select_percentile_classification:percentile": 7.087290566273197,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2545187486429443,
        "time": 1.4650778770446777,
        "additional_info": {
            "duration": 1.4524040222167969,
            "num_run": 68,
            "train_loss": 1.1488891120692024,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 68,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3182483664796085,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 384,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1157,
            "feature_preprocessor:kernel_pca:gamma": 1.741827119398212
        },
        "cost": 0.0,
        "time": 4.835874080657959,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 69,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5655336976543338,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 220,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7497074055205896,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.135609296785214,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 955,
            "feature_preprocessor:kernel_pca:gamma": 0.06617477660677037
        },
        "cost": 0.0,
        "time": 7.384326934814453,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 70,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5020190614920982,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 541,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04583191056019878,
            "feature_preprocessor:select_rates_classification:alpha": 0.01860030034524109,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.242333223132627,
        "time": 0.9052591323852539,
        "additional_info": {
            "duration": 0.8895509243011475,
            "num_run": 71,
            "train_loss": 1.1446285264784601,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 71,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3611241066392773,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 731,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 68,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 38.35054366280273,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2266023536027182,
        "time": 1.3659248352050781,
        "additional_info": {
            "duration": 1.3486809730529785,
            "num_run": 72,
            "train_loss": 1.1855301792972104,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 72,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5129820905121498,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 815,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.07887022454349432,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1826,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1839
        },
        "cost": 0.0,
        "time": 14.953463077545166,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 73,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8900785373009288,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 474,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1938,
            "feature_preprocessor:kernel_pca:coef0": 0.5951630999987096
        },
        "cost": 0.0,
        "time": 13.234107971191406,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (0.00058029 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (0.00058029 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 74,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4040756115036114,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 128,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0001947561060697375,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1384,
            "feature_preprocessor:kernel_pca:coef0": -0.08864827186381996,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0004079627490335049
        },
        "cost": 0.0,
        "time": 9.074918746948242,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 75,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7257371234399226,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 963,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.2001676810140953,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 2000,
            "feature_preprocessor:kernel_pca:coef0": -0.1657330216214743
        },
        "cost": 0.0,
        "time": 14.26904296875,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (0.000140504 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (0.000140504 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 76,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6592125193597874,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 426,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0272739345680025,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1492,
            "feature_preprocessor:kernel_pca:coef0": -0.08004571307872688,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.03733681210719744
        },
        "cost": 0.0,
        "time": 9.352880239486694,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 77,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7852223641507325,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 662,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0012945122531672034,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 771,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 6.090626530996793,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2473521965630612,
        "time": 5.098568916320801,
        "additional_info": {
            "duration": 5.081387042999268,
            "num_run": 78,
            "train_loss": 1.158883005676295,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 78,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5656902277976172,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 431,
            "feature_preprocessor:select_percentile_classification:percentile": 78.01085986921342,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2434874618882261,
        "time": 1.6288340091705322,
        "additional_info": {
            "duration": 1.6152300834655762,
            "num_run": 79,
            "train_loss": 1.1634418904429602,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 79,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5931369019167086,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 892,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006163943696473572,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7837448840422039,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.0857092253015727,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 585,
            "feature_preprocessor:kernel_pca:coef0": -0.498881826809634,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.012874593870435058
        },
        "cost": 0.0,
        "time": 6.108835697174072,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 80,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.45991302816995255,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 325,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0010733325413522273,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 476,
            "feature_preprocessor:kernel_pca:gamma": 0.00759441662063776
        },
        "cost": 0.0,
        "time": 6.490403175354004,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 81,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8862975669892024,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 443,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00021059212709212828,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 72,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 995,
            "feature_preprocessor:kernel_pca:gamma": 1.73121855237912
        },
        "cost": 0.0,
        "time": 7.28206467628479,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 82,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4510494462172949,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 338,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03259085380333489,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 671,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1339
        },
        "cost": 0.0,
        "time": 12.033244132995605,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 83,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5729063779129067,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 344,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006937440671578334,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 159,
            "feature_preprocessor:kernel_pca:coef0": -0.16208138106076553,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.009880241033837658
        },
        "cost": 0.0,
        "time": 5.679640054702759,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 84,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8432036569033692,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 509,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0049341937086359354,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1174,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.4060800559040317,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.2269226910009574,
        "time": 4.834462881088257,
        "additional_info": {
            "duration": 4.818904876708984,
            "num_run": 85,
            "train_loss": 1.19572565850971,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 85,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3847251670643065,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 424,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.779513521815416,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23217548237168487,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 425,
            "feature_preprocessor:kernel_pca:coef0": -0.9558220807652205,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0006068478010006879
        },
        "cost": 0.0,
        "time": 6.320303201675415,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 86,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21720361267219626,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 693,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.06320149951618238,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8615673857170816,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.08022088816141144,
            "feature_preprocessor:select_rates_classification:alpha": 0.35268947245405396,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2739555847027382,
        "time": 1.3073720932006836,
        "additional_info": {
            "duration": 1.2902941703796387,
            "num_run": 87,
            "train_loss": 1.1937226618556955,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 87,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6164768320439102,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 151,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0506796194260053,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1122
        },
        "cost": 0.0,
        "time": 7.552256107330322,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 88,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6109170364877767,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 846,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1602,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1222,
            "feature_preprocessor:kernel_pca:coef0": -0.06251422924431838
        },
        "cost": 0.0,
        "time": 11.863477945327759,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 89,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3431534408769339,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 887,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04403028793153333,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7126568984949855,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23801678819986077,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 680
        },
        "cost": 0.0,
        "time": 7.271802186965942,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 90,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.24557939512605817,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 826,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.11613016953634199,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1806,
            "feature_preprocessor:kernel_pca:gamma": 4.450398759592249
        },
        "cost": 0.0,
        "time": 9.670426845550537,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 91,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.40500503126281184,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 996,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.07198140371809728,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 324,
            "feature_preprocessor:kernel_pca:coef0": -0.45729545081074896,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.022104384449512116
        },
        "cost": 0.0,
        "time": 5.3749823570251465,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 92,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.584853452603043,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 714,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0001427288900664586,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1852,
            "feature_preprocessor:kernel_pca:coef0": 0.7559187976269812
        },
        "cost": 0.0,
        "time": 12.55484914779663,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (0.00019807 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (0.00019807 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 93,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6082039900657978,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 886,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.001315726729278199,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 747
        },
        "cost": 0.0,
        "time": 6.929214000701904,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 94,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8815716317107485,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 944,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.06419355478508736,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1125,
            "feature_preprocessor:kernel_pca:gamma": 0.14722712196947862
        },
        "cost": 0.0,
        "time": 9.10028600692749,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 95,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21693249953565155,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 487,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.045764181340014906,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 873,
            "feature_preprocessor:kernel_pca:gamma": 1.9119817442634195
        },
        "cost": 0.0,
        "time": 7.260130167007446,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 96,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.630428966999421,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 919,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 849,
            "feature_preprocessor:kernel_pca:gamma": 0.00014092289646646966
        },
        "cost": 0.0,
        "time": 7.5018579959869385,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 97,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.54212365321447,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 156,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.029984117437774415,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1743,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 502,
            "feature_preprocessor:kernel_pca:gamma": 0.00010906471092510294
        },
        "cost": 0.0,
        "time": 8.87506103515625,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 98,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3325907346793323,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 110,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.17793289755262706,
            "feature_preprocessor:select_percentile_classification:percentile": 36.539424344506294,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2484211595696257,
        "time": 0.6948337554931641,
        "additional_info": {
            "duration": 0.6850001811981201,
            "num_run": 99,
            "train_loss": 1.2001794361241465,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 99,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7648329227891257,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 264,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 328,
            "feature_preprocessor:kernel_pca:gamma": 0.0003676105553756472
        },
        "cost": 0.0,
        "time": 5.668497323989868,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 100,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5169269522906357,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 899,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00025714511990943077,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8071765098754183,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.14274371644483522,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1875,
            "feature_preprocessor:kernel_pca:gamma": 0.0007246403955071801
        },
        "cost": 0.0,
        "time": 13.29626989364624,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 101,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3363262905212729,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 269,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.001723610300705218,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1445,
            "feature_preprocessor:kernel_pca:gamma": 8.029521505154216e-05
        },
        "cost": 0.0,
        "time": 10.316253185272217,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 102,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.45313047134109025,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 705,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0022061169190840087,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 375,
            "feature_preprocessor:kernel_pca:coef0": -0.16471713199782068,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 3.747544784751469e-05
        },
        "cost": 0.0,
        "time": 5.882550001144409,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 103,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.517930640771421,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 320,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 768,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 233,
            "feature_preprocessor:kernel_pca:coef0": 0.556885690552211
        },
        "cost": 0.0,
        "time": 8.760873317718506,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 104,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.30025774788005105,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 973,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.013000314675296732,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8000124125803464,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.21711221196580222,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1284,
            "feature_preprocessor:kernel_pca:coef0": 0.9739779317175523,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.009368742182075339
        },
        "cost": 0.0,
        "time": 9.339076280593872,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 105,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.20794496365722076,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 459,
            "feature_preprocessor:select_percentile_classification:percentile": 45.073508553951704,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2273331712916993,
        "time": 1.56089186668396,
        "additional_info": {
            "duration": 1.547071933746338,
            "num_run": 106,
            "train_loss": 1.22706585280232,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 106,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.37769748954358695,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 942,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0005937438767125808,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 246,
            "feature_preprocessor:kernel_pca:gamma": 4.49196813302984e-05
        },
        "cost": 0.0,
        "time": 5.641941070556641,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 107,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.369170042399812,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 628,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1820,
            "feature_preprocessor:kernel_pca:gamma": 0.0004145921921884055
        },
        "cost": 0.0,
        "time": 13.130223035812378,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 108,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3464262748593956,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 953,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00023267375465436789,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 275,
            "feature_preprocessor:kernel_pca:coef0": 0.6301991583536706
        },
        "cost": 0.0,
        "time": 6.562782049179077,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 109,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2573267803071202,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 900,
            "feature_preprocessor:select_percentile_classification:percentile": 59.5912726750341,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.226777024369891,
        "time": 1.255094051361084,
        "additional_info": {
            "duration": 1.236525058746338,
            "num_run": 110,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 110,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7048886453497993,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 433,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0019790666673641126,
            "feature_preprocessor:select_percentile_classification:percentile": 71.1459446372242,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2383897421287506,
        "time": 1.6695060729980469,
        "additional_info": {
            "duration": 1.6549389362335205,
            "num_run": 111,
            "train_loss": 1.1415668652407498,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 111,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7319494072939747,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 982,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.29893623717636875,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 513,
            "feature_preprocessor:kernel_pca:coef0": -0.10418130278465232
        },
        "cost": 0.0,
        "time": 6.2958149909973145,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 112,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.635298572181612,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 445,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04755219287336382,
            "feature_preprocessor:select_rates_classification:alpha": 0.2941614339141956,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.6359539031982422,
        "additional_info": {
            "duration": 1.6219587326049805,
            "num_run": 113,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 113,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.23784289731737396,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 857,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00017568104773495844,
            "feature_preprocessor:select_rates_classification:alpha": 0.1804548035918752,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.226777024369891,
        "time": 1.3441882133483887,
        "additional_info": {
            "duration": 1.3260610103607178,
            "num_run": 114,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 114,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5212101604576214,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 622,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 964,
            "feature_preprocessor:kernel_pca:coef0": 0.5576247328842057
        },
        "cost": 0.0,
        "time": 7.044112205505371,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 115,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2184071361385345,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 622,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 810,
            "feature_preprocessor:kernel_pca:coef0": -0.5749167589193125,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0004236603762159974
        },
        "cost": 0.0,
        "time": 7.119086265563965,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 116,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5268431681979561,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 972,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 874,
            "feature_preprocessor:kernel_pca:coef0": -0.5253852785248916,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0010627469007738319
        },
        "cost": 0.0,
        "time": 7.147378921508789,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 117,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5878825123890843,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 609,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 505,
            "feature_preprocessor:kernel_pca:gamma": 2.4139014129760286
        },
        "cost": 0.0,
        "time": 6.392959833145142,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 118,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7559071215230637,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 377,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 59
        },
        "cost": 0.0,
        "time": 5.470678091049194,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 119,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6667623237960871,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 397,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 369
        },
        "cost": 0.0,
        "time": 5.876209735870361,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 120,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5549230189822234,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 973,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 116,
            "feature_preprocessor:kernel_pca:coef0": -0.6438137246440361
        },
        "cost": 0.0,
        "time": 5.825516939163208,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 121,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7964702718154479,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 747,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006393276934162736,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8881042340618548,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.15546125821724796,
            "feature_preprocessor:select_percentile_classification:percentile": 97.9901894854055,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2358602605682654,
        "time": 1.2462589740753174,
        "additional_info": {
            "duration": 1.228024959564209,
            "num_run": 122,
            "train_loss": 1.1505819476659265,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 122,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5123745851811344,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 900,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.013616403540788259,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 221,
            "feature_preprocessor:kernel_pca:coef0": -0.10162785597094293
        },
        "cost": 0.0,
        "time": 6.942713022232056,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 123,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6221480732244098,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 969,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1888,
            "feature_preprocessor:kernel_pca:coef0": 0.72312374099776
        },
        "cost": 0.0,
        "time": 13.143001079559326,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (0.000306006 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (0.000306006 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 124,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.42367743313542816,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 541,
            "feature_preprocessor:select_percentile_classification:percentile": 64.66900919097137,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2510177407404437,
        "time": 1.1135742664337158,
        "additional_info": {
            "duration": 1.0990550518035889,
            "num_run": 125,
            "train_loss": 1.1986251885883672,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 125,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4822119153581387,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 397,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.42973886988623905,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1878,
            "feature_preprocessor:kernel_pca:coef0": 0.06679991950226727
        },
        "cost": 0.0,
        "time": 13.373909950256348,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (0.000519704 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (0.000519704 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 126,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.33330450518454485,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 354,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.045851352808970625,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1444,
            "feature_preprocessor:kernel_pca:gamma": 0.023314202975655864
        },
        "cost": 0.0,
        "time": 10.157608985900879,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 127,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.31749645884144784,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 256,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0027531244091789347,
            "feature_preprocessor:select_rates_classification:alpha": 0.03508296597682799,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2406896607140967,
        "time": 1.2539308071136475,
        "additional_info": {
            "duration": 1.2423019409179688,
            "num_run": 128,
            "train_loss": 1.2187754083292277,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 128,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8173703498902376,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 424,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 407,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1376
        },
        "cost": 0.0,
        "time": 9.764699935913086,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 129,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.34501920787803586,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 809,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 166,
            "feature_preprocessor:kernel_pca:coef0": -0.12017313462015622,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.00996189161280192
        },
        "cost": 0.0,
        "time": 6.242793083190918,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 130,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4102285203681927,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 552,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 91,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 263
        },
        "cost": 0.0,
        "time": 5.72172737121582,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 131,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8077597087037574,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 403,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00981211017298902,
            "feature_preprocessor:select_rates_classification:alpha": 0.4189828716217144,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.1926596203546067,
        "time": 1.6238470077514648,
        "additional_info": {
            "duration": 1.6086199283599854,
            "num_run": 132,
            "train_loss": 1.153390493320382,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 132,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3630999098252174,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 221,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.018066466488410215,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 486,
            "feature_preprocessor:kernel_pca:gamma": 0.0005670429709198123
        },
        "cost": 0.0,
        "time": 6.943211078643799,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 133,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2400077207126789,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 291,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1772,
            "feature_preprocessor:kernel_pca:gamma": 0.3005703076031784
        },
        "cost": 0.0,
        "time": 12.253602981567383,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 134,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3060426050419695,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 416,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 512,
            "feature_preprocessor:kernel_pca:gamma": 0.12934294673574157
        },
        "cost": 0.0,
        "time": 6.897335052490234,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 135,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43990593818149837,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 560,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.08152627901844216,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8572535137525039,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.14423266007884586,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 301,
            "feature_preprocessor:kernel_pca:coef0": 0.11106605296828254,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.11448818655575453
        },
        "cost": 0.0,
        "time": 6.435606002807617,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 136,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7432848683005346,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 338,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3039487050814983,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9050498899513559,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.19265611023800683,
            "feature_preprocessor:select_percentile_classification:percentile": 98.28034584646063,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2502060494430953,
        "time": 0.7732648849487305,
        "additional_info": {
            "duration": 0.7597899436950684,
            "num_run": 137,
            "train_loss": 1.1502819967118603,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 137,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21460315371886768,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 385,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1902,
            "feature_preprocessor:kernel_pca:coef0": -0.8677520247216932,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.0003550072719699977
        },
        "cost": 0.0,
        "time": 13.985263109207153,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (6.35353e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (6.35353e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 138,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8877958292178161,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 409,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.013852466614849564,
            "feature_preprocessor:select_percentile_classification:percentile": 80.35231996381395,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2426686850305007,
        "time": 0.8246982097625732,
        "additional_info": {
            "duration": 0.8088490962982178,
            "num_run": 139,
            "train_loss": 1.1502067487657823,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 139,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3169256444311566,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 152,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010723545818709561,
            "feature_preprocessor:select_rates_classification:alpha": 0.017080001825344013,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2500514976103974,
        "time": 0.568061113357544,
        "additional_info": {
            "duration": 0.5568928718566895,
            "num_run": 140,
            "train_loss": 1.1609388552414561,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 140,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4190107092365155,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 431,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1674,
            "feature_preprocessor:kernel_pca:coef0": 0.5410148991405261
        },
        "cost": 0.0,
        "time": 11.28866195678711,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (1.86447e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (1.86447e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 141,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.830229247448899,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 511,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 947,
            "feature_preprocessor:kernel_pca:coef0": 0.8092957533688261,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.4223458396747096
        },
        "cost": 0.0,
        "time": 7.645540237426758,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 142,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7916233808988382,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 777,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9943366188330327,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.27302807676797897,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1460
        },
        "cost": 0.0,
        "time": 9.872199058532715,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 143,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6827446832477975,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 422,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0016877732866394607,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1856,
            "feature_preprocessor:kernel_pca:gamma": 0.30435627314955355
        },
        "cost": 0.0,
        "time": 11.927814960479736,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 144,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8028130993527964,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 887,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0004857427222411981,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 189,
            "feature_preprocessor:kernel_pca:coef0": 0.7231840368044375,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.126481337548084
        },
        "cost": 0.0,
        "time": 6.253549098968506,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 145,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3097759570710979,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 813,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0003368722306276485,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1549
        },
        "cost": 0.0,
        "time": 9.569769859313965,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 146,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8284835112446505,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 695,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005572215130507732,
            "feature_preprocessor:select_rates_classification:alpha": 0.3267181508289783,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2311108305762453,
        "time": 1.1956298351287842,
        "additional_info": {
            "duration": 1.142029047012329,
            "num_run": 147,
            "train_loss": 1.1494379342807701,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 147,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2080692000928346,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 873,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.14848569328087788,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1319
        },
        "cost": 0.0,
        "time": 8.728575944900513,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 148,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5446861102365841,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 505,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 199,
            "feature_preprocessor:kernel_pca:coef0": -0.9402560049277857
        },
        "cost": 0.0,
        "time": 5.3081889152526855,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 149,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.20079337169749562,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 151,
            "feature_preprocessor:select_percentile_classification:percentile": 61.90461766983925,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.226777024369891,
        "time": 0.9381771087646484,
        "additional_info": {
            "duration": 0.9278690814971924,
            "num_run": 150,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 150,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.20314708466232853,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 450,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.07570852124040674,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 956
        },
        "cost": 0.0,
        "time": 7.196619987487793,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 151,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29899259159464225,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 289,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0007282169480594289,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1272,
            "feature_preprocessor:kernel_pca:coef0": -0.8633239764515619
        },
        "cost": 0.0,
        "time": 6.405992031097412,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 152,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2359481528949603,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 142,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.08764784544890347,
            "feature_preprocessor:select_percentile_classification:percentile": 46.06854393061655,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2518997099640214,
        "time": 0.7561657428741455,
        "additional_info": {
            "duration": 0.7456576824188232,
            "num_run": 153,
            "train_loss": 1.1838405847037907,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 153,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2912140786332986,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 726,
            "feature_preprocessor:select_rates_classification:alpha": 0.23335118413774447,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2514206501773644,
        "time": 1.1858999729156494,
        "additional_info": {
            "duration": 1.1678080558776855,
            "num_run": 154,
            "train_loss": 1.1531994203995248,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 154,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.20954650378271206,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 321,
            "feature_preprocessor:select_percentile_classification:percentile": 16.573417246927207,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2284373054247943,
        "time": 0.8056797981262207,
        "additional_info": {
            "duration": 0.7929179668426514,
            "num_run": 155,
            "train_loss": 1.1787928700659338,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 155,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3014757061218716,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 249,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7726096403798238,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.0499718519794798,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1581,
            "feature_preprocessor:kernel_pca:coef0": 0.41365726778002077,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 4.746782449348671
        },
        "cost": 0.0,
        "time": 11.837780952453613,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 156,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.40554725723969454,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 942,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.47206972932853664,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1056,
            "feature_preprocessor:kernel_pca:coef0": 0.782548863400814
        },
        "cost": 0.0,
        "time": 8.46814513206482,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 157,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.694245398880831,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 864,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0008806822147111096,
            "feature_preprocessor:select_percentile_classification:percentile": 75.92920564172061,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2428989380732802,
        "time": 1.3112916946411133,
        "additional_info": {
            "duration": 1.2920899391174316,
            "num_run": 158,
            "train_loss": 1.1524395432518335,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 158,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7530130931332448,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 505,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1463,
            "feature_preprocessor:kernel_pca:coef0": -0.23898858674122514,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 7.093812514561516e-05
        },
        "cost": 0.0,
        "time": 9.140651941299438,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 159,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4266658509897543,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 676,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1355,
            "feature_preprocessor:kernel_pca:coef0": -0.09471774663897548
        },
        "cost": 0.0,
        "time": 9.182969808578491,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 160,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6120070660658916,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 289,
            "feature_preprocessor:select_rates_classification:alpha": 0.2833849449091005,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2196412188926171,
        "time": 0.8738853931427002,
        "additional_info": {
            "duration": 0.8608970642089844,
            "num_run": 161,
            "train_loss": 1.1689232548900417,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 161,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6092905940714979,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 820,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 486,
            "feature_preprocessor:kernel_pca:coef0": -0.8721751807702585
        },
        "cost": 0.0,
        "time": 6.4829230308532715,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 162,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6556228570303525,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 121,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0002095638582025303,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 455,
            "feature_preprocessor:kernel_pca:coef0": -0.5581083224256962
        },
        "cost": 0.0,
        "time": 6.726835250854492,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 163,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5862339576805362,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 343,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0014960186483301333,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1412,
            "feature_preprocessor:kernel_pca:coef0": -0.563520907586861
        },
        "cost": 0.0,
        "time": 10.840888977050781,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 164,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8351187711000292,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 951,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.1919964970762911,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1182,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1599,
            "feature_preprocessor:kernel_pca:coef0": 0.9679621756362802,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.00031556272541431615
        },
        "cost": 0.0,
        "time": 14.458881855010986,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 165,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.34830640697814885,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 269,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.18739436570191975,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 582,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1609
        },
        "cost": 0.0,
        "time": 13.959716081619263,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 166,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6132513384278937,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 504,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9574263288132366,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2736334026218002,
            "feature_preprocessor:select_rates_classification:alpha": 0.39549710694538015,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2341807292245157,
        "time": 0.932671070098877,
        "additional_info": {
            "duration": 0.9166021347045898,
            "num_run": 167,
            "train_loss": 1.1419845495369172,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 167,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.44285436668780614,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 719,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0011398810075051394,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 27,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1924
        },
        "cost": 0.0,
        "time": 13.153702974319458,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 168,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.24173317873387776,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 531,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03711969263809417,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1408,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1336
        },
        "cost": 0.0,
        "time": 11.747570753097534,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 169,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8055502203423939,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 116,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006975759700988541,
            "feature_preprocessor:select_percentile_classification:percentile": 96.13394652221572,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2427605552566796,
        "time": 0.7317769527435303,
        "additional_info": {
            "duration": 0.7198188304901123,
            "num_run": 170,
            "train_loss": 1.1552156582634334,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 170,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8888739167425685,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 887,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.016667142582567365,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9391262501924736,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24954489222843948,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 205,
            "feature_preprocessor:kernel_pca:gamma": 0.7497646540239741
        },
        "cost": 0.0,
        "time": 5.224979877471924,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 171,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.45727196093672623,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 454,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 560
        },
        "cost": 0.0,
        "time": 6.522317171096802,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 172,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27464964166147626,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 317,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.008031378477117983,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 14,
            "feature_preprocessor:kernel_pca:gamma": 0.29256741925473856
        },
        "cost": 0.0,
        "time": 5.00960898399353,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 173,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4717095726564316,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 971,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.012474040551755878,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 915,
            "feature_preprocessor:kernel_pca:coef0": -0.04589196280439811,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.0071760601584957345
        },
        "cost": 0.0,
        "time": 8.177420139312744,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 174,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7475341807166596,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 685,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1019,
            "feature_preprocessor:kernel_pca:coef0": 0.7369756017308864
        },
        "cost": 0.0,
        "time": 7.337399005889893,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 175,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2093033059104117,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 819,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.001511903574644451,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1632
        },
        "cost": 0.0,
        "time": 9.626341104507446,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 176,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8318915050636444,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 101,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0005894078048447556,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1398,
            "feature_preprocessor:kernel_pca:coef0": -0.4118820346843406,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.06117162758361032
        },
        "cost": 0.0,
        "time": 9.265636205673218,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 177,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7121195786669126,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 262,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 125
        },
        "cost": 0.0,
        "time": 5.4577789306640625,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 178,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5707289919473182,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 466,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 71,
            "feature_preprocessor:kernel_pca:coef0": 0.27749902395001125,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.00029094883848147476
        },
        "cost": 0.0,
        "time": 6.071621894836426,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 179,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5503724110098951,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 772,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0001921217136135902,
            "feature_preprocessor:select_percentile_classification:percentile": 11.374870619136978,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2273825982722357,
        "time": 1.2800531387329102,
        "additional_info": {
            "duration": 1.2612762451171875,
            "num_run": 180,
            "train_loss": 1.152231338436808,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 180,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.46676735141302633,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 554,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00033951080791182707,
            "feature_preprocessor:select_percentile_classification:percentile": 76.22112713940624,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2616987759861527,
        "time": 1.4545891284942627,
        "additional_info": {
            "duration": 1.4397177696228027,
            "num_run": 181,
            "train_loss": 1.1908884663974548,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 181,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3109892766661961,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 126,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010465138189306049,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1058,
            "feature_preprocessor:kernel_pca:coef0": -0.4144756417920421,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.0022017770340925133
        },
        "cost": 0.0,
        "time": 8.26830005645752,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 182,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5483652890164917,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 826,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005375206043639881,
            "feature_preprocessor:select_percentile_classification:percentile": 9.43650547388131,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2557901554775905,
        "time": 2.076793909072876,
        "additional_info": {
            "duration": 2.05867600440979,
            "num_run": 183,
            "train_loss": 1.1731047776110386,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 183,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8054214491287941,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 449,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 159,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.029519370960250126,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2351344373141244,
        "time": 0.9335310459136963,
        "additional_info": {
            "duration": 0.9159708023071289,
            "num_run": 184,
            "train_loss": 1.1621064308160869,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 184,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4670985121335106,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 121,
            "feature_preprocessor:select_rates_classification:alpha": 0.20664976275753408,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2383536662028023,
        "time": 0.7028076648712158,
        "additional_info": {
            "duration": 0.6911611557006836,
            "num_run": 185,
            "train_loss": 1.1628273662555093,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 185,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.52037785690221,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 698,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1012,
            "feature_preprocessor:kernel_pca:coef0": 0.3720290068654446
        },
        "cost": 0.0,
        "time": 6.901703834533691,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 186,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.39997484289857893,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 446,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 441,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1978,
            "feature_preprocessor:kernel_pca:coef0": -0.9584359657996551,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.0003518762380508607
        },
        "cost": 0.0,
        "time": 13.592274904251099,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 187,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.682968658337703,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 951,
            "feature_preprocessor:select_rates_classification:alpha": 0.1376740675206117,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2344132303178856,
        "time": 1.3518447875976562,
        "additional_info": {
            "duration": 1.3256628513336182,
            "num_run": 188,
            "train_loss": 1.142481714804448,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 188,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29412918536739086,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 358,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0014062520393287616,
            "feature_preprocessor:select_percentile_classification:percentile": 68.06013880499731,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.226916061100343,
        "time": 1.9405419826507568,
        "additional_info": {
            "duration": 1.9281299114227295,
            "num_run": 189,
            "train_loss": 1.2274926433405369,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 189,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4695218236471708,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 810,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1433,
            "feature_preprocessor:kernel_pca:coef0": -0.3332976757849224,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 3.920152782234186
        },
        "cost": 0.0,
        "time": 9.486648082733154,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 190,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6588492227733979,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 158,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1512,
            "feature_preprocessor:kernel_pca:gamma": 0.014411267809321308
        },
        "cost": 0.0,
        "time": 10.752288103103638,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 191,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7101372350970561,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 455,
            "feature_preprocessor:select_percentile_classification:percentile": 46.60793227397166,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2572799342284302,
        "time": 0.826930046081543,
        "additional_info": {
            "duration": 0.8124449253082275,
            "num_run": 192,
            "train_loss": 1.1444741581098965,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 192,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6872035453503929,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 950,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 11,
            "feature_preprocessor:kernel_pca:coef0": 0.19736257510024702,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.010000000000000005
        },
        "cost": 0.0,
        "time": 3.552190065383911,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 193,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7392523175626187,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 751,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0003191539965253432,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 212,
            "feature_preprocessor:kernel_pca:coef0": -0.8735889059951991
        },
        "cost": 0.0,
        "time": 6.727807998657227,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 194,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5585677015199081,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 365,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0005528821317527529,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1073,
            "feature_preprocessor:kernel_pca:gamma": 8.016369684349529e-05
        },
        "cost": 0.0,
        "time": 7.399571895599365,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 195,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5103391084242701,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 778,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1425,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 35.94358937545067,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2385751482951064,
        "time": 4.586410999298096,
        "additional_info": {
            "duration": 4.530935049057007,
            "num_run": 196,
            "train_loss": 1.1425381214200347,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 196,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5079725098523655,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 809,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1241,
            "feature_preprocessor:kernel_pca:coef0": 0.555588723246643
        },
        "cost": 0.0,
        "time": 8.981482028961182,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 197,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.30902271962286604,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 456,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.016164525974934355,
            "feature_preprocessor:select_rates_classification:alpha": 0.13068950497067425,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.6711218357086182,
        "additional_info": {
            "duration": 1.6567068099975586,
            "num_run": 198,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 198,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27896199319282333,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 363,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.07524649324841022,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 178,
            "feature_preprocessor:kernel_pca:coef0": 0.8898432206816804
        },
        "cost": 0.0,
        "time": 5.1535890102386475,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 199,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5747678438834735,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 144,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00013735914936612115,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9097409784558104,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.11939382616710653,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 486
        },
        "cost": 0.0,
        "time": 5.3146071434021,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 200,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.35122779578260044,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 684,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1050,
            "feature_preprocessor:kernel_pca:coef0": 0.9417314618031363
        },
        "cost": 0.0,
        "time": 8.056302070617676,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 201,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5123044318403283,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 180,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9346632261364086,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.11299882216271874,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1204,
            "feature_preprocessor:kernel_pca:gamma": 0.022584997485353416
        },
        "cost": 0.0,
        "time": 9.314961910247803,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 202,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5386447119962998,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 177,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1600,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 373,
            "feature_preprocessor:kernel_pca:coef0": -0.19460941488875538,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.004052648087471771
        },
        "cost": 0.0,
        "time": 8.1647367477417,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 203,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7170324336068443,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 192,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03358731286022463,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 606,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1327,
            "feature_preprocessor:kernel_pca:coef0": -0.8340530396470047
        },
        "cost": 0.0,
        "time": 11.99631118774414,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 204,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3046664353371335,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 362,
            "feature_preprocessor:select_percentile_classification:percentile": 33.3161998709445,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2199385715457294,
        "time": 0.8949060440063477,
        "additional_info": {
            "duration": 0.8822000026702881,
            "num_run": 205,
            "train_loss": 1.187754453279979,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 205,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6359430524964981,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 299,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0003909717384323308,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 435
        },
        "cost": 0.0,
        "time": 6.028882026672363,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 206,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5008117284383256,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 768,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 875,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 248,
            "feature_preprocessor:kernel_pca:coef0": 0.02591241658207366,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.00044983111193985434
        },
        "cost": 0.0,
        "time": 8.760236024856567,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 207,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6220790125455156,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 869,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.2415216285658093,
            "feature_preprocessor:select_percentile_classification:percentile": 35.091353091447345,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2520372306551018,
        "time": 1.3812930583953857,
        "additional_info": {
            "duration": 1.3597602844238281,
            "num_run": 208,
            "train_loss": 1.1540630794372346,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 208,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.35577078201207696,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 492,
            "feature_preprocessor:select_rates_classification:alpha": 0.37186130921353655,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.9958791732788086,
        "additional_info": {
            "duration": 1.980170726776123,
            "num_run": 209,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 209,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21775833494838948,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 164,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 79,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 1.7653227087999592,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2269226910009574,
        "time": 1.3815960884094238,
        "additional_info": {
            "duration": 1.369248867034912,
            "num_run": 210,
            "train_loss": 1.19572565850971,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 210,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8774772176223911,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 558,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.011981668877867982,
            "feature_preprocessor:select_percentile_classification:percentile": 90.42065105482581,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.24553283142049,
        "time": 1.4168219566345215,
        "additional_info": {
            "duration": 1.3989880084991455,
            "num_run": 211,
            "train_loss": 1.14915021684191,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 211,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3640625212156636,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 244,
            "feature_preprocessor:select_percentile_classification:percentile": 57.98144039126282,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.23463692503731,
        "time": 0.6503438949584961,
        "additional_info": {
            "duration": 0.6368508338928223,
            "num_run": 212,
            "train_loss": 1.2280306463849935,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 212,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6129546713714777,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 539,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006499799118717716,
            "feature_preprocessor:select_rates_classification:alpha": 0.36340766317966045,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2130023991854555,
        "time": 1.0599300861358643,
        "additional_info": {
            "duration": 1.0435149669647217,
            "num_run": 213,
            "train_loss": 1.1516542302036654,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 213,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7007434022398216,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 811,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01560154848722875,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1490,
            "feature_preprocessor:kernel_pca:gamma": 0.021602693029395367
        },
        "cost": 0.0,
        "time": 9.65577507019043,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 214,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3919898517052426,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 433,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0008182261969670933,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 895,
            "feature_preprocessor:kernel_pca:coef0": -0.9556541741537168,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.000572274522340186
        },
        "cost": 0.0,
        "time": 7.715590953826904,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 215,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6300194483492534,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 314,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 887,
            "feature_preprocessor:kernel_pca:coef0": 0.05212937562250897
        },
        "cost": 0.0,
        "time": 7.5386388301849365,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 216,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3821875626167004,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 372,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9657488092161093,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.010219837705863169,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1829
        },
        "cost": 0.0,
        "time": 12.840755939483643,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 217,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.261733579598122,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 195,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0022260134114528113,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 115,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 528
        },
        "cost": 0.0,
        "time": 5.397875070571899,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 218,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4182218294580656,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 962,
            "feature_preprocessor:select_percentile_classification:percentile": 56.673377320050704,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2137573624797935,
        "time": 1.2117350101470947,
        "additional_info": {
            "duration": 1.1905322074890137,
            "num_run": 219,
            "train_loss": 1.1651524037397314,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 219,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.681090451911952,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 278,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00022353759079518607,
            "feature_preprocessor:select_rates_classification:alpha": 0.38284905369309846,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2492224988199754,
        "time": 0.7373960018157959,
        "additional_info": {
            "duration": 0.723320722579956,
            "num_run": 220,
            "train_loss": 1.1436861724982843,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 220,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7456769434281691,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 797,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.053120025762556436,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1041,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 143
        },
        "cost": 0.0,
        "time": 8.523000717163086,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 221,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29991925663103725,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 566,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00023890295031469132,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1191
        },
        "cost": 0.0,
        "time": 8.401214838027954,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 222,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4639632939633403,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 979,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0010159824510213773,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 737,
            "feature_preprocessor:kernel_pca:gamma": 0.038363993657067386
        },
        "cost": 0.0,
        "time": 6.777478933334351,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 223,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5636814398424916,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 260,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.007811312072439585,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 354,
            "feature_preprocessor:kernel_pca:coef0": 0.7197321530558636,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.18892788911873984
        },
        "cost": 0.0,
        "time": 6.159008026123047,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 224,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8975727312482127,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 807,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.003253422694116436,
            "feature_preprocessor:select_percentile_classification:percentile": 51.77429935708627,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2476309955150757,
        "time": 2.1247968673706055,
        "additional_info": {
            "duration": 2.1045780181884766,
            "num_run": 225,
            "train_loss": 1.1603680164214976,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 225,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.38941795991747435,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 933,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.017971883855725217,
            "feature_preprocessor:select_percentile_classification:percentile": 43.73938140056446,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.247472858900723,
        "time": 1.4460277557373047,
        "additional_info": {
            "duration": 1.425475835800171,
            "num_run": 226,
            "train_loss": 1.2241162119510383,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 226,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7404056670434271,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 264,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.23887451892233946,
            "feature_preprocessor:select_rates_classification:alpha": 0.4685205474594021,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.2269226910009574,
        "time": 1.84218168258667,
        "additional_info": {
            "duration": 1.8285887241363525,
            "num_run": 227,
            "train_loss": 1.19572565850971,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 227,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8033544819691427,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 296,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00019138477324964138,
            "feature_preprocessor:select_percentile_classification:percentile": 36.445132550617856,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2509122750942179,
        "time": 0.9160408973693848,
        "additional_info": {
            "duration": 0.8991291522979736,
            "num_run": 228,
            "train_loss": 1.0991257435068484,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 228,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2854661365329549,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 491,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1238,
            "feature_preprocessor:kernel_pca:coef0": -0.034315327695249476,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.014888984556958569
        },
        "cost": 0.0,
        "time": 9.230902910232544,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 229,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2128942230887977,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 236,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04627771426150219,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1626,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 18.020364027469892,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.226777024369891,
        "time": 4.332399845123291,
        "additional_info": {
            "duration": 4.319534063339233,
            "num_run": 230,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 230,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7050845865898205,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 969,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.12960997724776527,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1597
        },
        "cost": 0.0,
        "time": 9.872566223144531,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 231,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8739654368192735,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 262,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 908,
            "feature_preprocessor:kernel_pca:coef0": -0.46116259765572454,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0002897729039211323
        },
        "cost": 0.0,
        "time": 7.3864758014678955,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 232,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6989054139146529,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 717,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 146,
            "feature_preprocessor:kernel_pca:gamma": 0.00036182503006261903
        },
        "cost": 0.0,
        "time": 4.782981872558594,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 233,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5963094292142573,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 981,
            "feature_preprocessor:select_rates_classification:alpha": 0.19518132900991023,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.2168240242751236,
        "time": 2.2550230026245117,
        "additional_info": {
            "duration": 2.231800079345703,
            "num_run": 234,
            "train_loss": 1.1633939104299467,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 234,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6491263924129249,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 587,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.18387088572183316,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1637,
            "feature_preprocessor:kernel_pca:coef0": 0.9181524117243733
        },
        "cost": 0.0,
        "time": 11.14120602607727,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 235,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7653695190269647,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 383,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0018189860295042236,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 945,
            "feature_preprocessor:kernel_pca:coef0": -0.8662024735063589,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.37640246531306976
        },
        "cost": 0.0,
        "time": 7.687005996704102,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 236,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4940256537307627,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 792,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03354348963017919,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1794
        },
        "cost": 0.0,
        "time": 12.06374192237854,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 237,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5863843386930772,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 140,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 36,
            "feature_preprocessor:kernel_pca:gamma": 0.3238638818881105
        },
        "cost": 0.0,
        "time": 5.4645891189575195,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 238,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3363980623256047,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 830,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7175539399513389,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.16996602171515626,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 765,
            "feature_preprocessor:kernel_pca:coef0": 0.401477834999278,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.02011353254204821
        },
        "cost": 0.0,
        "time": 7.314287900924683,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 239,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7964681984796735,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 574,
            "feature_preprocessor:select_percentile_classification:percentile": 97.08524036770332,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2416372424119972,
        "time": 1.1279833316802979,
        "additional_info": {
            "duration": 1.1102628707885742,
            "num_run": 240,
            "train_loss": 1.1387476133620118,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 240,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43986812192388547,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 901,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00014016665790423828,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1455
        },
        "cost": 0.0,
        "time": 7.498705148696899,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 241,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6666866467344317,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 276,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03574548008877062,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 991,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 718
        },
        "cost": 0.0,
        "time": 8.634093046188354,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 242,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6915912228563966,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 630,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 488,
            "feature_preprocessor:kernel_pca:gamma": 4.559770836623894
        },
        "cost": 0.0,
        "time": 6.166939973831177,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 243,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8701226993349038,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 266,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 716
        },
        "cost": 0.0,
        "time": 6.9652440547943115,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 244,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7669347284907531,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 271,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 763,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 48.318357438803844,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2502178655125304,
        "time": 4.070257902145386,
        "additional_info": {
            "duration": 4.056024074554443,
            "num_run": 245,
            "train_loss": 1.169763588793503,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 245,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.34897319008840866,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 590,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 836
        },
        "cost": 0.0,
        "time": 6.764761924743652,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 246,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6180130496774825,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 363,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 376,
            "feature_preprocessor:kernel_pca:coef0": -0.7144462092727304,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.012628715180412038
        },
        "cost": 0.0,
        "time": 6.172724962234497,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 247,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3167140618470498,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 853,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 691,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 963
        },
        "cost": 0.0,
        "time": 10.613133907318115,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 248,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8626962130641109,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 674,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03738687457152576,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1895
        },
        "cost": 0.0,
        "time": 13.30601191520691,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 249,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.22729783831538736,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 671,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 493,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 951
        },
        "cost": 0.0,
        "time": 7.535956859588623,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 250,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6713556119772064,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 301,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 339,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1138,
            "feature_preprocessor:kernel_pca:coef0": -0.7396127866165245,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.00703087625217179
        },
        "cost": 0.0,
        "time": 9.164901971817017,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 251,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3951992619879604,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 143,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0011963124508159947,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7828254323777976,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.10987612682448082,
            "feature_preprocessor:select_percentile_classification:percentile": 11.354328870057053,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2382933758013914,
        "time": 0.8177578449249268,
        "additional_info": {
            "duration": 0.8064548969268799,
            "num_run": 252,
            "train_loss": 1.1609883934036012,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 252,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5271557340287917,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 227,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0004000460861433164,
            "feature_preprocessor:select_rates_classification:alpha": 0.20557334625367538,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.403170108795166,
        "additional_info": {
            "duration": 1.391021966934204,
            "num_run": 253,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 253,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7644267715378572,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 568,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00010888281017632084,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 853,
            "feature_preprocessor:kernel_pca:coef0": 0.030718248290899197,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.412375952471134
        },
        "cost": 0.0,
        "time": 7.851823806762695,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 254,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5935919839955854,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 653,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0018025827147292843,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 100,
            "feature_preprocessor:kernel_pca:coef0": -0.3369416401562244
        },
        "cost": 0.0,
        "time": 5.132274150848389,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 255,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5247996808190063,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 956,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010232466122198013,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1413
        },
        "cost": 0.0,
        "time": 8.861429929733276,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 256,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.30253926796606573,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 359,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.002835832123895906,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.815220398345842,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.08794433307789679,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 788,
            "feature_preprocessor:kernel_pca:gamma": 0.05113341117775007
        },
        "cost": 0.0,
        "time": 6.700277090072632,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 257,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.31173322301965956,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 617,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.009505059329280781,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1444
        },
        "cost": 0.0,
        "time": 10.381683111190796,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 258,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21579743363850937,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 939,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0009216700521906382,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9071392461321036,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.12680673583285634,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 462,
            "feature_preprocessor:kernel_pca:coef0": -0.17830813637590182,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.11630241064538056
        },
        "cost": 0.0,
        "time": 6.409666061401367,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 259,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5969140241584345,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 889,
            "feature_preprocessor:select_percentile_classification:percentile": 19.631217380782033,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2449274846755956,
        "time": 2.000153064727783,
        "additional_info": {
            "duration": 1.9814379215240479,
            "num_run": 260,
            "train_loss": 1.1720396505993051,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 260,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4748439478955914,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 547,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.008055734349108508,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1342,
            "feature_preprocessor:kernel_pca:coef0": -0.037185106843118154,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 1.5320221787593078
        },
        "cost": 0.0,
        "time": 9.809531927108765,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 261,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6750849162306954,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 107,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.025291490636831452,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1928,
            "feature_preprocessor:kernel_pca:coef0": -0.5000854560711436
        },
        "cost": 0.0,
        "time": 12.817018985748291,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 262,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5098888377693263,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 687,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00010513696185951524,
            "feature_preprocessor:select_percentile_classification:percentile": 78.33949715905344,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2396163736642318,
        "time": 1.4077329635620117,
        "additional_info": {
            "duration": 1.3905489444732666,
            "num_run": 263,
            "train_loss": 1.1721731591340858,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 263,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6385135058044434,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 894,
            "feature_preprocessor:select_percentile_classification:percentile": 44.75994912861791,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.239338810962661,
        "time": 1.3696131706237793,
        "additional_info": {
            "duration": 1.3489460945129395,
            "num_run": 264,
            "train_loss": 1.1601586189687854,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 264,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8446240740930873,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 720,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0014732902470034207,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 629
        },
        "cost": 0.0,
        "time": 6.57469367980957,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 265,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6633447291249102,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 704,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.009187890465844926,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 482
        },
        "cost": 0.0,
        "time": 6.845152139663696,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 266,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5672194313978287,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 297,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 635,
            "feature_preprocessor:kernel_pca:coef0": 0.46887662898711935,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.7969221204087203
        },
        "cost": 0.0,
        "time": 7.6829609870910645,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 267,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.341976402696712,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 926,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 707,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 407,
            "feature_preprocessor:kernel_pca:coef0": -0.9616011697803146,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.10653862505132648
        },
        "cost": 0.0,
        "time": 8.756852149963379,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 268,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7130503581488403,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 243,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.020764931137999345,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 242,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 610,
            "feature_preprocessor:kernel_pca:coef0": -0.24604873878184486
        },
        "cost": 0.0,
        "time": 6.3820719718933105,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 269,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5233330482534735,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 438,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0008318531093897424,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1219
        },
        "cost": 0.0,
        "time": 7.787400245666504,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 270,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.815065430341896,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 143,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 399,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 753
        },
        "cost": 0.0,
        "time": 6.074268341064453,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 271,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.35754732230327424,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 848,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.09642221087875243,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8952999522997351,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2349607845398101,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1909
        },
        "cost": 0.0,
        "time": 13.837696075439453,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 272,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4502896199374341,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 729,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0020667313224452875,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1770,
            "feature_preprocessor:kernel_pca:coef0": -0.9373452120125034
        },
        "cost": 0.0,
        "time": 12.401741027832031,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (0.000663531 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (0.000663531 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 273,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43717667393724036,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 188,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3680765592498922,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7652972670152858,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23673860694211923,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 724,
            "feature_preprocessor:kernel_pca:coef0": 0.9155867147423362,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 4.797648866875244e-05
        },
        "cost": 0.0,
        "time": 7.339380979537964,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 274,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7752287896467531,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 166,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 55,
            "feature_preprocessor:kernel_pca:coef0": -0.9453940118642983
        },
        "cost": 0.0,
        "time": 3.945919990539551,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 275,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4922026797046022,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 950,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1462,
            "feature_preprocessor:kernel_pca:gamma": 0.05047264890123044
        },
        "cost": 0.0,
        "time": 10.79585886001587,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 276,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.26006588345224024,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 413,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 252,
            "feature_preprocessor:kernel_pca:coef0": 0.8640237141400449
        },
        "cost": 0.0,
        "time": 5.936586141586304,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 277,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7541626850562162,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 775,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1415,
            "feature_preprocessor:kernel_pca:coef0": -0.21961244486221032
        },
        "cost": 0.0,
        "time": 10.522385835647583,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 278,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.35629615645261714,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 635,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.031041025542954986,
            "feature_preprocessor:select_rates_classification:alpha": 0.0655029451218434,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.759958028793335,
        "additional_info": {
            "duration": 1.7439110279083252,
            "num_run": 279,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 279,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27908903941321794,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 835,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.023460205689325643,
            "feature_preprocessor:select_rates_classification:alpha": 0.01046848329865255,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2503884820677507,
        "time": 1.3551290035247803,
        "additional_info": {
            "duration": 1.3350400924682617,
            "num_run": 280,
            "train_loss": 1.1632588492311666,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 280,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.892824211424845,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 495,
            "feature_preprocessor:select_percentile_classification:percentile": 48.81120599128278,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2449737825342404,
        "time": 1.1845710277557373,
        "additional_info": {
            "duration": 1.1665289402008057,
            "num_run": 281,
            "train_loss": 1.1803613803326647,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 281,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4181963502143208,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 536,
            "feature_preprocessor:select_percentile_classification:percentile": 20.69548491756607,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2143933653042571,
        "time": 1.033972978591919,
        "additional_info": {
            "duration": 1.0186741352081299,
            "num_run": 282,
            "train_loss": 1.2005883267762756,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 282,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8226185373629844,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 683,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 962,
            "feature_preprocessor:kernel_pca:coef0": -0.04863540928341292
        },
        "cost": 0.0,
        "time": 7.769835948944092,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 283,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.550774238509232,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 855,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005506535036619405,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1101
        },
        "cost": 0.0,
        "time": 8.193712949752808,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 284,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5758803699476188,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 225,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1060,
            "feature_preprocessor:kernel_pca:coef0": -0.025759108609751946,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.0031864170195017127
        },
        "cost": 0.0,
        "time": 8.775565147399902,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 285,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8503296495817805,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 643,
            "feature_preprocessor:select_percentile_classification:percentile": 84.87619221067936,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2412216547801207,
        "time": 1.3055219650268555,
        "additional_info": {
            "duration": 1.2871637344360352,
            "num_run": 286,
            "train_loss": 1.1463463859918077,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 286,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6618510881537392,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 325,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1942,
            "feature_preprocessor:kernel_pca:gamma": 6.057828628242391
        },
        "cost": 0.0,
        "time": 13.554873943328857,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 287,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3144329920403256,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 724,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8621611487501892,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.21497020437961106,
            "feature_preprocessor:select_rates_classification:alpha": 0.411988480196147,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.228476140160666,
        "time": 1.3529868125915527,
        "additional_info": {
            "duration": 1.3330130577087402,
            "num_run": 288,
            "train_loss": 1.148480478999819,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 288,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7117344812642603,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 516,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.18715770764784906,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1472
        },
        "cost": 0.0,
        "time": 9.97746992111206,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 289,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5902985276995261,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 668,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1792
        },
        "cost": 0.0,
        "time": 11.32276725769043,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 290,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.34755703994748044,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 383,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1492,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 45.631922253738374,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2327923336191298,
        "time": 3.8747618198394775,
        "additional_info": {
            "duration": 3.8612220287323,
            "num_run": 291,
            "train_loss": 1.2165172990043156,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 291,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3040552938973726,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 447,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1113,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.48582993748786635,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2359221385863073,
        "time": 4.0610740184783936,
        "additional_info": {
            "duration": 4.046025037765503,
            "num_run": 292,
            "train_loss": 1.1822157342849493,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 292,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.36776097842227917,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 258,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0057546356409747534,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 184,
            "feature_preprocessor:kernel_pca:coef0": 0.2947960088699475
        },
        "cost": 0.0,
        "time": 6.288395166397095,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 293,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3472186646407316,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 446,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00016635216872227824,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 555,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1796,
            "feature_preprocessor:kernel_pca:coef0": -0.4311435528736651
        },
        "cost": 0.0,
        "time": 6.431025743484497,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 294,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8321961124702517,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 692,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.013154652316673161,
            "feature_preprocessor:select_rates_classification:alpha": 0.40886028686527914,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2235076192814502,
        "time": 1.3306822776794434,
        "additional_info": {
            "duration": 1.2786979675292969,
            "num_run": 295,
            "train_loss": 1.1585984253164001,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 295,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2666871038117307,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 913,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.038004351136677716,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1996,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 43.16287976545395,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2276112447526033,
        "time": 4.57492995262146,
        "additional_info": {
            "duration": 4.554468870162964,
            "num_run": 296,
            "train_loss": 1.2280628087419079,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 296,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.37933836082363415,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 161,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 896,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 489,
            "feature_preprocessor:kernel_pca:coef0": 0.8462553714960075
        },
        "cost": 0.0,
        "time": 9.05757999420166,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 297,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.37026251683417716,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 132,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0009017221114032689,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 398,
            "feature_preprocessor:kernel_pca:coef0": 0.04476348834081456
        },
        "cost": 0.0,
        "time": 6.064242839813232,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 298,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7095810626448689,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 246,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.012089206914599995,
            "feature_preprocessor:select_rates_classification:alpha": 0.3325637596833641,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.247832857006565,
        "time": 0.7320339679718018,
        "additional_info": {
            "duration": 0.7182207107543945,
            "num_run": 299,
            "train_loss": 1.137297526147421,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 299,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.37307493880579706,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 502,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005258694556375406,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1060,
            "feature_preprocessor:kernel_pca:gamma": 3.140570242476953e-05
        },
        "cost": 0.0,
        "time": 7.245030164718628,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 300,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29431593295161007,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 588,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0626977013128727,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7526447800207565,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.15831461813391717,
            "feature_preprocessor:select_percentile_classification:percentile": 1.640854864079824,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.1839737168217206,
        "time": 1.0934460163116455,
        "additional_info": {
            "duration": 1.0746827125549316,
            "num_run": 301,
            "train_loss": 1.1632768218601255,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 301,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6740224330241951,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 302,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1917,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1353,
            "feature_preprocessor:kernel_pca:coef0": 0.664002374343921
        },
        "cost": 0.0,
        "time": 10.974301815032959,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 302,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.810215573099426,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 267,
            "feature_preprocessor:select_rates_classification:alpha": 0.4532330944939091,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2430512418553883,
        "time": 0.7077651023864746,
        "additional_info": {
            "duration": 0.6953768730163574,
            "num_run": 303,
            "train_loss": 1.1534065984192383,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 303,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5343609865192263,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 882,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00014138411539214353,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.743854195534657,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.18865595824443282,
            "feature_preprocessor:select_rates_classification:alpha": 0.24468376047128335,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2458446611794933,
        "time": 1.2536842823028564,
        "additional_info": {
            "duration": 1.2331488132476807,
            "num_run": 304,
            "train_loss": 1.1612492550479365,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 304,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21120724061408874,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 325,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1890,
            "feature_preprocessor:kernel_pca:coef0": 0.10338436791569938
        },
        "cost": 0.0,
        "time": 5.908312082290649,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 305,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.42598456160833553,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 922,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.771967464066145,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2113060116898764,
            "feature_preprocessor:select_percentile_classification:percentile": 62.60587901131353,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2435293778968464,
        "time": 1.4277260303497314,
        "additional_info": {
            "duration": 1.4079289436340332,
            "num_run": 306,
            "train_loss": 1.2188953342504796,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 306,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4931875418537203,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 932,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1117,
            "feature_preprocessor:kernel_pca:gamma": 4.330374137852613
        },
        "cost": 0.0,
        "time": 8.372546911239624,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 307,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.45616936231751254,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 876,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0328612094079765,
            "feature_preprocessor:select_rates_classification:alpha": 0.27437692008771564,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2376128386057486,
        "time": 1.3852870464324951,
        "additional_info": {
            "duration": 1.3620688915252686,
            "num_run": 308,
            "train_loss": 1.1397781217910459,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 308,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2639576280165558,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 285,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1614
        },
        "cost": 0.0,
        "time": 10.249681949615479,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 309,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2456207159814478,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 174,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1646,
            "feature_preprocessor:kernel_pca:gamma": 0.00040146531319870286
        },
        "cost": 0.0,
        "time": 12.389372110366821,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 310,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.24218550749171816,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 526,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 717,
            "feature_preprocessor:kernel_pca:gamma": 0.14621696843505053
        },
        "cost": 0.0,
        "time": 6.1616551876068115,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 311,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27871764728777904,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 222,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.02064037865583032,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 628,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1892,
            "feature_preprocessor:kernel_pca:gamma": 0.0019289811273259098
        },
        "cost": 0.0,
        "time": 15.91342806816101,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 312,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3331159037109124,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 216,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1810,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1698,
            "feature_preprocessor:kernel_pca:coef0": 0.9997892236557167
        },
        "cost": 0.0,
        "time": 13.833985090255737,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 313,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6392906332673804,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 403,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010960460476832596,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1750
        },
        "cost": 0.0,
        "time": 11.90961217880249,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 314,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3728156545083171,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 936,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9354041062326186,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.14970476692200818,
            "feature_preprocessor:select_rates_classification:alpha": 0.04579200513206867,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.24663040723023,
        "time": 1.4142048358917236,
        "additional_info": {
            "duration": 1.3946990966796875,
            "num_run": 315,
            "train_loss": 1.1646835424276294,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 315,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6544314896740415,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 851,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1256,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 30,
            "feature_preprocessor:kernel_pca:gamma": 0.00016883441014749851
        },
        "cost": 0.0,
        "time": 7.446558952331543,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 316,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3120498195474062,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 237,
            "feature_preprocessor:select_rates_classification:alpha": 0.14917580369971728,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2405894160456192,
        "time": 0.5993359088897705,
        "additional_info": {
            "duration": 0.5867152214050293,
            "num_run": 317,
            "train_loss": 1.153683381065256,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 317,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8945962928049473,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 759,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 123,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 2.111252240204552,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.186426914835532,
        "time": 1.4673621654510498,
        "additional_info": {
            "duration": 1.446185827255249,
            "num_run": 318,
            "train_loss": 1.1707940151941076,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 318,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5353880315666999,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 887,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.871803410168716,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.18696496339048577,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 471,
            "feature_preprocessor:kernel_pca:coef0": 0.10833630632553404
        },
        "cost": 0.0,
        "time": 6.264430999755859,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 319,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.44188659152295473,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 908,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0003836209794390695,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1293,
            "feature_preprocessor:kernel_pca:coef0": -0.3119482189235996
        },
        "cost": 0.0,
        "time": 8.82318902015686,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 320,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5374578183878608,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 984,
            "feature_preprocessor:select_percentile_classification:percentile": 33.1012739604566,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2378747430505554,
        "time": 2.2243738174438477,
        "additional_info": {
            "duration": 2.169464111328125,
            "num_run": 321,
            "train_loss": 1.1733335148865165,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 321,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6800272689715208,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 297,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 372,
            "feature_preprocessor:kernel_pca:coef0": 0.7201687376586314,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.05168199849148074
        },
        "cost": 0.0,
        "time": 6.086854934692383,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 322,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.44074831552909344,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 609,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7920758798570606,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25443196271545987,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 848,
            "feature_preprocessor:kernel_pca:coef0": 0.4997747695446091
        },
        "cost": 0.0,
        "time": 7.788096904754639,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 323,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7100816510732904,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 860,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9504930588281684,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.016640666580984186,
            "feature_preprocessor:select_rates_classification:alpha": 0.1677127788518596,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 2.035928964614868,
        "additional_info": {
            "duration": 2.0148589611053467,
            "num_run": 324,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 324,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5625422230589351,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 321,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 158,
            "feature_preprocessor:kernel_pca:gamma": 0.002417641976647961
        },
        "cost": 0.0,
        "time": 5.84363579750061,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 325,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3694984845114553,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 580,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 592,
            "feature_preprocessor:kernel_pca:coef0": -0.032031430943726846,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.00839689642526161
        },
        "cost": 0.0,
        "time": 6.06532096862793,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 326,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6032957738611711,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 879,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0003106481020902271,
            "feature_preprocessor:select_percentile_classification:percentile": 43.557328431205306,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2441039707887043,
        "time": 1.7426931858062744,
        "additional_info": {
            "duration": 1.722041130065918,
            "num_run": 327,
            "train_loss": 1.1597071717616583,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 327,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5155682495367795,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 581,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0014906489417425507,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1125,
            "feature_preprocessor:kernel_pca:gamma": 1.2006837592550588
        },
        "cost": 0.0,
        "time": 8.61073088645935,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 328,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.766513813924657,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 203,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8631663299204985,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2869595968718415,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 706,
            "feature_preprocessor:kernel_pca:gamma": 7.0417435878048025
        },
        "cost": 0.0,
        "time": 7.287999868392944,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 329,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4214642779360251,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 302,
            "feature_preprocessor:select_rates_classification:alpha": 0.16900766053093202,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.5744690895080566,
        "additional_info": {
            "duration": 1.5620841979980469,
            "num_run": 330,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 330,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4581696046856372,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 476,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1293
        },
        "cost": 0.0,
        "time": 9.221341133117676,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 331,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7278194711367103,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 783,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.052155355001928055,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 352,
            "feature_preprocessor:kernel_pca:coef0": 0.32023898385351535
        },
        "cost": 0.0,
        "time": 5.790434122085571,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 332,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5622707303241556,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 799,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.24656351266216486,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 558,
            "feature_preprocessor:kernel_pca:coef0": -0.8941555634608025,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.8544149010719656
        },
        "cost": 0.0,
        "time": 6.796334981918335,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 333,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5804009783364628,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 704,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1856,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1333,
            "feature_preprocessor:kernel_pca:coef0": -0.5430383975334494
        },
        "cost": 0.0,
        "time": 11.844434976577759,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 334,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5291930389806461,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 892,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0046072197488508035,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7114728855825514,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.18894677910464108,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 749,
            "feature_preprocessor:kernel_pca:coef0": -0.40533184887690754,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.3682692332429632
        },
        "cost": 0.0,
        "time": 7.378954172134399,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 335,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6679133502144814,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 109,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00025594687608413986,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.925219115984447,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1959514421040944,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1175
        },
        "cost": 0.0,
        "time": 8.819803953170776,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 336,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8560217434058335,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 433,
            "feature_preprocessor:select_percentile_classification:percentile": 55.926477062485674,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.250254738506848,
        "time": 0.9807000160217285,
        "additional_info": {
            "duration": 0.96543288230896,
            "num_run": 337,
            "train_loss": 1.1462854214519445,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 337,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.48670921850979143,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 563,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1268,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.20866200866712867,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2586344403387797,
        "time": 4.2702929973602295,
        "additional_info": {
            "duration": 4.253777980804443,
            "num_run": 338,
            "train_loss": 1.166739384181061,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 338,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7503919430241925,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 746,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.48815582206804015,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8171686943645073,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1069524497242026,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1707,
            "feature_preprocessor:kernel_pca:gamma": 4.483451686480403
        },
        "cost": 0.0,
        "time": 11.044979095458984,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 339,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2774051985297151,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 871,
            "feature_preprocessor:select_rates_classification:alpha": 0.1476067505957284,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2321289345658337,
        "time": 1.2833819389343262,
        "additional_info": {
            "duration": 1.2595667839050293,
            "num_run": 340,
            "train_loss": 1.140031440145715,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 340,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6139176579749774,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 612,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010749158131840646,
            "feature_preprocessor:select_rates_classification:alpha": 0.21297661635999354,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2403151131947852,
        "time": 1.030026912689209,
        "additional_info": {
            "duration": 1.011803150177002,
            "num_run": 341,
            "train_loss": 1.149277766136426,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 341,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.25402220050778673,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 355,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 883,
            "feature_preprocessor:kernel_pca:coef0": 0.9243709318164888
        },
        "cost": 0.0,
        "time": 8.313536167144775,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 342,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.30862123852819007,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 439,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.09360605291668357,
            "feature_preprocessor:select_percentile_classification:percentile": 43.084371045223044,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2427633240241835,
        "time": 0.9682769775390625,
        "additional_info": {
            "duration": 0.9537549018859863,
            "num_run": 343,
            "train_loss": 1.2055137046289248,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 343,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7180695154359311,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 185,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 937,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 792
        },
        "cost": 0.0,
        "time": 9.26938009262085,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 344,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2528479800638751,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 572,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.06462503684113886,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 196
        },
        "cost": 0.0,
        "time": 5.964430093765259,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 345,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2861960507743122,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 349,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8066651802708315,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.0891968425379549,
            "feature_preprocessor:select_percentile_classification:percentile": 76.65108286313716,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.226777024369891,
        "time": 1.5776660442352295,
        "additional_info": {
            "duration": 1.5646378993988037,
            "num_run": 346,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 346,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7072105948052483,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 385,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00012986274807000908,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 959
        },
        "cost": 0.0,
        "time": 7.490715980529785,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 347,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7544008578739412,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 354,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0008878942464213281,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1194,
            "feature_preprocessor:kernel_pca:coef0": -0.5542946073127839,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.15029452405829227
        },
        "cost": 0.0,
        "time": 8.417343854904175,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 348,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5589300850048331,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 960,
            "feature_preprocessor:select_rates_classification:alpha": 0.3514793660345822,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 2.3002870082855225,
        "additional_info": {
            "duration": 2.279266119003296,
            "num_run": 349,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 349,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29493546336996473,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 593,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0011106400092241618,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 167,
            "feature_preprocessor:kernel_pca:coef0": -0.09116911366223301
        },
        "cost": 0.0,
        "time": 5.998136281967163,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 350,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.20863871519267574,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 448,
            "feature_preprocessor:select_percentile_classification:percentile": 58.073611273365394,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.226777024369891,
        "time": 0.8052349090576172,
        "additional_info": {
            "duration": 0.791780948638916,
            "num_run": 351,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 351,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43095717850850546,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 989,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 915,
            "feature_preprocessor:kernel_pca:gamma": 0.16780884348136454
        },
        "cost": 0.0,
        "time": 7.523364782333374,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 352,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.382025795890879,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 616,
            "feature_preprocessor:select_percentile_classification:percentile": 86.82047601605849,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2485851527443395,
        "time": 2.2271170616149902,
        "additional_info": {
            "duration": 2.179025888442993,
            "num_run": 353,
            "train_loss": 1.2133271786355382,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 353,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4016993962659962,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 507,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1040,
            "feature_preprocessor:kernel_pca:coef0": 0.08529385962113278
        },
        "cost": 0.0,
        "time": 7.792870998382568,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 354,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.34828643006526744,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 394,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.000684537572725056,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1808,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1800,
            "feature_preprocessor:kernel_pca:gamma": 0.048826666761661426
        },
        "cost": 0.0,
        "time": 15.419628858566284,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 355,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8479784252733491,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 351,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.05632869670722148,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 635,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1710
        },
        "cost": 0.0,
        "time": 14.718979120254517,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 356,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6208097076620267,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 529,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0020297991854277097,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1616,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 384,
            "feature_preprocessor:kernel_pca:coef0": -0.9151941247370605,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.011398912458664184
        },
        "cost": 0.0,
        "time": 9.384756088256836,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 357,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7243238976013442,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 512,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.024160339115926393,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1951,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 502,
            "feature_preprocessor:kernel_pca:coef0": -0.9959496965000358,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 1.9746622963713234
        },
        "cost": 0.0,
        "time": 9.198355913162231,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 358,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7415824135100946,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 903,
            "feature_preprocessor:select_rates_classification:alpha": 0.0291913070649941,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2333457117734339,
        "time": 1.3907949924468994,
        "additional_info": {
            "duration": 1.368384838104248,
            "num_run": 359,
            "train_loss": 1.1561572573776633,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 359,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5899899176770453,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 596,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.008840098482829436,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1447
        },
        "cost": 0.0,
        "time": 9.904757976531982,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 360,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.25426767077066004,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 886,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.022733948574334546,
            "feature_preprocessor:select_rates_classification:alpha": 0.28564174292200273,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.227024542231847,
        "time": 1.5292448997497559,
        "additional_info": {
            "duration": 1.5085749626159668,
            "num_run": 361,
            "train_loss": 1.1585928648193184,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 361,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2903741677260952,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 255,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 806,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1103,
            "feature_preprocessor:kernel_pca:coef0": -0.4021078569508325,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.005733855784447082
        },
        "cost": 0.0,
        "time": 11.568099975585938,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 362,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.81213446149264,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 101,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.011362373239062825,
            "feature_preprocessor:select_percentile_classification:percentile": 81.67680173288723,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.250671051629835,
        "time": 0.5243611335754395,
        "additional_info": {
            "duration": 0.5137169361114502,
            "num_run": 363,
            "train_loss": 1.14280488650205,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 363,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5484046797572388,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 684,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.2334438816665282,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 120,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1069
        },
        "cost": 0.0,
        "time": 8.527157068252563,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 364,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.46644984373229015,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 417,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1939,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 991,
            "feature_preprocessor:kernel_pca:coef0": -0.8262454631112235
        },
        "cost": 0.0,
        "time": 11.010416984558105,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 365,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2225632789633829,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 509,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04556666062916981,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 856,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 156,
            "feature_preprocessor:kernel_pca:coef0": 0.2932199619952496,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.2977533078750403
        },
        "cost": 0.0,
        "time": 8.225229024887085,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 366,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4173707785640356,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 712,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.021657939412890004,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8328773528410941,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.15819082275432106,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 470,
            "feature_preprocessor:kernel_pca:coef0": -0.818311030573228,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.04292302325346155
        },
        "cost": 0.0,
        "time": 6.468804836273193,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 367,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.655889589303402,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 858,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00021147552627020136,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1314,
            "feature_preprocessor:kernel_pca:gamma": 0.02133224741848024
        },
        "cost": 0.0,
        "time": 9.512702226638794,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 368,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6349513475632373,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 921,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0064858771744765575,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 559
        },
        "cost": 0.0,
        "time": 6.381940841674805,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 369,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5632738197138789,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 274,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0628663885164506,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 181,
            "feature_preprocessor:kernel_pca:gamma": 0.17648020109875664
        },
        "cost": 0.0,
        "time": 5.908888101577759,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 370,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6125352744819913,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 312,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1710,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1041,
            "feature_preprocessor:kernel_pca:gamma": 0.000234141189569268
        },
        "cost": 0.0,
        "time": 11.388544082641602,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 371,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43670470410219825,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 969,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1396,
            "feature_preprocessor:kernel_pca:gamma": 0.07203357544854544
        },
        "cost": 0.0,
        "time": 9.615433931350708,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 372,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27031450820353436,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 715,
            "feature_preprocessor:select_rates_classification:alpha": 0.04371374497239334,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.226152746361503,
        "time": 1.265369176864624,
        "additional_info": {
            "duration": 1.242967128753662,
            "num_run": 373,
            "train_loss": 1.152826897380675,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 373,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.38238795313496077,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 438,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0008133161124600326,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1503,
            "feature_preprocessor:kernel_pca:coef0": 0.5950612861447719,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.5086172745311185
        },
        "cost": 0.0,
        "time": 10.788750171661377,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 374,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5888882303384747,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 953,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7236922205137802,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.29258652591940687,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 654,
            "feature_preprocessor:kernel_pca:coef0": -0.13181867335360464
        },
        "cost": 0.0,
        "time": 6.836085081100464,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 375,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6865564793708037,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 506,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1354,
            "feature_preprocessor:kernel_pca:coef0": -0.7686707946209319
        },
        "cost": 0.0,
        "time": 10.334014177322388,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 376,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6242590504257886,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 258,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.815021662712098,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1318659717268326,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 144,
            "feature_preprocessor:kernel_pca:gamma": 8.667159561313023e-05
        },
        "cost": 0.0,
        "time": 5.585622072219849,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 377,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7359163676698164,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 526,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.1992323015084562,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 769,
            "feature_preprocessor:kernel_pca:coef0": -0.18449857939159586
        },
        "cost": 0.0,
        "time": 7.226313829421997,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 378,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7043823553737774,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 437,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006102119547006499,
            "feature_preprocessor:select_rates_classification:alpha": 0.14679430431964194,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2275139736258265,
        "time": 1.0846750736236572,
        "additional_info": {
            "duration": 1.0705628395080566,
            "num_run": 379,
            "train_loss": 1.1710262439889219,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 379,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7232198269873698,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 962,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01488797548948957,
            "feature_preprocessor:select_percentile_classification:percentile": 41.96382389674976,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2355374118081963,
        "time": 2.2870547771453857,
        "additional_info": {
            "duration": 2.2643980979919434,
            "num_run": 380,
            "train_loss": 1.1471686259399398,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 380,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3242022559050008,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 496,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.14241315604243174,
            "feature_preprocessor:select_percentile_classification:percentile": 58.318274105665765,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2332450351733095,
        "time": 1.2330272197723389,
        "additional_info": {
            "duration": 1.2178282737731934,
            "num_run": 381,
            "train_loss": 1.2208647837970557,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 381,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7245518616705529,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 964,
            "feature_preprocessor:select_percentile_classification:percentile": 48.21031487498694,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2490811424616741,
        "time": 1.5150480270385742,
        "additional_info": {
            "duration": 1.4916400909423828,
            "num_run": 382,
            "train_loss": 1.1500386851618067,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 382,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2864983748906449,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 385,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005597509191677129,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7020578942228404,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23216654162897962,
            "feature_preprocessor:select_percentile_classification:percentile": 19.52042274363523,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2622107299453884,
        "time": 0.965717077255249,
        "additional_info": {
            "duration": 0.9522991180419922,
            "num_run": 383,
            "train_loss": 1.1900960304739487,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 383,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.43348738922574065,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 414,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1536,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.10460173446151988,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.239653685840624,
        "time": 3.973815679550171,
        "additional_info": {
            "duration": 3.958348035812378,
            "num_run": 384,
            "train_loss": 1.146637095661152,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 384,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6758895086079825,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 627,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0029474606192632802,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1188,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 13,
            "feature_preprocessor:kernel_pca:coef0": -0.06908715120140285
        },
        "cost": 0.0,
        "time": 7.989870071411133,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 385,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7433978745120786,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 381,
            "feature_preprocessor:select_percentile_classification:percentile": 52.737151354892376,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2375224909390494,
        "time": 0.7748100757598877,
        "additional_info": {
            "duration": 0.7600078582763672,
            "num_run": 386,
            "train_loss": 1.1485159311990327,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 386,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6633967495536104,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 283,
            "feature_preprocessor:select_percentile_classification:percentile": 43.08569896024024,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.248095272210705,
        "time": 0.7641968727111816,
        "additional_info": {
            "duration": 0.7507197856903076,
            "num_run": 387,
            "train_loss": 1.148889074563721,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 387,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7663654509545297,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 180,
            "feature_preprocessor:select_percentile_classification:percentile": 1.3438909746267822,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2185303274517587,
        "time": 1.4167802333831787,
        "additional_info": {
            "duration": 1.4034337997436523,
            "num_run": 388,
            "train_loss": 1.1302422016466243,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 388,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.25088462201273964,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 941,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.027018444297522915,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 181
        },
        "cost": 0.0,
        "time": 4.248154878616333,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 389,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5734253068198205,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 887,
            "feature_preprocessor:select_percentile_classification:percentile": 19.966076687557827,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2464192902251403,
        "time": 2.511509895324707,
        "additional_info": {
            "duration": 2.493187189102173,
            "num_run": 390,
            "train_loss": 1.1770450774952996,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 390,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.31686974469203594,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 220,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9065572555622983,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2559445737074746,
            "feature_preprocessor:select_rates_classification:alpha": 0.3673072413484617,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.410203218460083,
        "additional_info": {
            "duration": 1.3987467288970947,
            "num_run": 391,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 391,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.47540152611650033,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 490,
            "feature_preprocessor:select_percentile_classification:percentile": 48.96043282235803,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2419455162927078,
        "time": 1.0747809410095215,
        "additional_info": {
            "duration": 1.0605559349060059,
            "num_run": 392,
            "train_loss": 1.1748436108476323,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 392,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3970158138643828,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 287,
            "feature_preprocessor:select_percentile_classification:percentile": 74.08614502138121,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2456527682670413,
        "time": 1.280958890914917,
        "additional_info": {
            "duration": 1.26904296875,
            "num_run": 393,
            "train_loss": 1.2115707261467106,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 393,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6740947202675343,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 938,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1894,
            "feature_preprocessor:kernel_pca:coef0": 0.29301367852111637
        },
        "cost": 0.0,
        "time": 12.353602886199951,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (1.5642e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (1.5642e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 394,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.44411151241977964,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 235,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.19319036517569144,
            "feature_preprocessor:select_rates_classification:alpha": 0.36747968911868634,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.4453201293945312,
        "additional_info": {
            "duration": 1.4323878288269043,
            "num_run": 395,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 395,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.336828739826311,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 356,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.08994018534390108,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1537,
            "feature_preprocessor:kernel_pca:coef0": -0.06931657292104898,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.00019568421072941374
        },
        "cost": 0.0,
        "time": 9.787564992904663,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 396,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6998843245362842,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 352,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.008735013645192738,
            "feature_preprocessor:select_rates_classification:alpha": 0.07050546023885018,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2407425884733558,
        "time": 1.3245189189910889,
        "additional_info": {
            "duration": 1.310297966003418,
            "num_run": 397,
            "train_loss": 1.1574753820741996,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 397,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5285658776041421,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 230,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0010142007267407932,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7666714699692074,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.15319165790108308,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 188,
            "feature_preprocessor:kernel_pca:coef0": 0.8245789130029408
        },
        "cost": 0.0,
        "time": 4.734791994094849,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 398,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4828379176222466,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 999,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0036341311062157112,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1156,
            "feature_preprocessor:kernel_pca:coef0": 0.2198684373449955
        },
        "cost": 0.0,
        "time": 4.670619964599609,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 399,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6558592206774192,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 512,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9321033691548479,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.057917215866641295,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 635
        },
        "cost": 0.0,
        "time": 6.663949728012085,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 400,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.248072972524669,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 886,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9972000518151904,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2354399908466817,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 111,
            "feature_preprocessor:kernel_pca:gamma": 0.21453055298548976
        },
        "cost": 0.0,
        "time": 5.541199207305908,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 401,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.852030287286015,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 196,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 37,
            "feature_preprocessor:kernel_pca:coef0": -0.36066059475807033
        },
        "cost": 0.0,
        "time": 5.511610984802246,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 402,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5453081750125364,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 712,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 777,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 77.00235724255631,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2487882793896343,
        "time": 4.384821176528931,
        "additional_info": {
            "duration": 4.365770101547241,
            "num_run": 403,
            "train_loss": 1.1553729108283437,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 403,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7909261660715952,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 548,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 53,
            "feature_preprocessor:kernel_pca:coef0": -0.8965780404378243,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.013864479168250258
        },
        "cost": 0.0,
        "time": 6.047838926315308,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 404,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7514251420487612,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 391,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1333,
            "feature_preprocessor:kernel_pca:coef0": 0.7849070755416798
        },
        "cost": 0.0,
        "time": 9.504210948944092,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 405,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.760622896054554,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 785,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 592,
            "feature_preprocessor:kernel_pca:gamma": 0.0002541442180102682
        },
        "cost": 0.0,
        "time": 6.161330938339233,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 406,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7870463643036092,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 431,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.4537378403616122,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 243,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1642,
            "feature_preprocessor:kernel_pca:gamma": 0.01441996857714775
        },
        "cost": 0.0,
        "time": 11.65475606918335,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 407,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5828814293528646,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 715,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0003473845047464361,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1061
        },
        "cost": 0.0,
        "time": 7.4575419425964355,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 408,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.39751970182523744,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 367,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.07001868628191499,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 531,
            "feature_preprocessor:kernel_pca:gamma": 0.23130431815854982
        },
        "cost": 0.0,
        "time": 6.360112190246582,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 409,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7129433530522673,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 287,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1132,
            "feature_preprocessor:kernel_pca:gamma": 0.004714194517401643
        },
        "cost": 0.0,
        "time": 8.916159868240356,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 410,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.34586818606199543,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 755,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.4865651427146507,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1973,
            "feature_preprocessor:kernel_pca:coef0": -0.5925068865758367,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 4.5062814243198063e-05
        },
        "cost": 0.0,
        "time": 12.513154983520508,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (5.83953e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (5.83953e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 411,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7525880205043465,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 909,
            "feature_preprocessor:select_percentile_classification:percentile": 38.08649285376065,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2375539276092993,
        "time": 1.6261940002441406,
        "additional_info": {
            "duration": 1.5701360702514648,
            "num_run": 412,
            "train_loss": 1.1445516151982749,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 412,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6997385372956892,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 747,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8618788888991246,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.04830887780524819,
            "feature_preprocessor:select_rates_classification:alpha": 0.3570762083826568,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2273512331792449,
        "time": 1.3810551166534424,
        "additional_info": {
            "duration": 1.359105110168457,
            "num_run": 413,
            "train_loss": 1.1536862307599696,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 413,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8058453821269014,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 980,
            "feature_preprocessor:select_percentile_classification:percentile": 95.70024681636207,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2459523328169546,
        "time": 1.6819970607757568,
        "additional_info": {
            "duration": 1.6212410926818848,
            "num_run": 414,
            "train_loss": 1.1344167721471674,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 414,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.35273237994836537,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 975,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1286
        },
        "cost": 0.0,
        "time": 9.087454080581665,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 415,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7416779969050225,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 231,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00013770296707827395,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1265
        },
        "cost": 0.0,
        "time": 9.094123125076294,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 416,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3149263817529685,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 255,
            "feature_preprocessor:select_rates_classification:alpha": 0.4763184620392615,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2485551243824131,
        "time": 0.717555046081543,
        "additional_info": {
            "duration": 0.7035927772521973,
            "num_run": 417,
            "train_loss": 1.1704428540462453,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 417,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8092516698904899,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 294,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 169,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 49,
            "feature_preprocessor:kernel_pca:gamma": 0.04070875850545641
        },
        "cost": 0.0,
        "time": 4.894351005554199,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 418,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.628206401115643,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 276,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.23430645093170296,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1668,
            "feature_preprocessor:kernel_pca:coef0": -0.9453563378977647,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.3940767556217344
        },
        "cost": 0.0,
        "time": 11.752294778823853,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 419,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6980813639913552,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 683,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7672078326484139,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24207252155003825,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1184,
            "feature_preprocessor:kernel_pca:coef0": -0.7974050850022212
        },
        "cost": 0.0,
        "time": 8.464669942855835,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 420,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6027727211675407,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 567,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0811850568650654,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1613,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 223,
            "feature_preprocessor:kernel_pca:coef0": 0.12952769253247554,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 9.315257963824076e-05
        },
        "cost": 0.0,
        "time": 9.264928102493286,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 421,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7224668899599282,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 862,
            "feature_preprocessor:select_percentile_classification:percentile": 42.63607241245526,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.253151047058198,
        "time": 1.2640151977539062,
        "additional_info": {
            "duration": 1.2418451309204102,
            "num_run": 422,
            "train_loss": 1.1430241664268448,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 422,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7777813039628434,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 666,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1271,
            "feature_preprocessor:kernel_pca:gamma": 0.025767970770874327
        },
        "cost": 0.0,
        "time": 9.297282934188843,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 423,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.39181653910626013,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 315,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1076
        },
        "cost": 0.0,
        "time": 7.801993131637573,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 424,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8445165574808808,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 134,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0038484090224767025,
            "feature_preprocessor:select_percentile_classification:percentile": 28.688064050047323,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2458139500003538,
        "time": 1.4318490028381348,
        "additional_info": {
            "duration": 1.421370029449463,
            "num_run": 425,
            "train_loss": 1.151076597624912,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 425,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7827433419893164,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 612,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0034511875718497816,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1724,
            "feature_preprocessor:kernel_pca:coef0": -0.5332988228352251,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 1.112569762371131
        },
        "cost": 0.0,
        "time": 11.515650987625122,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 426,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.22571688882137822,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 527,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9541228258380585,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23388873890789122,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1026
        },
        "cost": 0.0,
        "time": 7.347368955612183,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 427,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7493535998986423,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 694,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.35888667345956804,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 551,
            "feature_preprocessor:kernel_pca:gamma": 0.0005307319817291779
        },
        "cost": 0.0,
        "time": 6.454248905181885,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 428,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.38801414535866297,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 939,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0009723561582123866,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 109
        },
        "cost": 0.0,
        "time": 6.377330780029297,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 429,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2710202661669594,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 474,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 737,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1645,
            "feature_preprocessor:kernel_pca:coef0": 0.8240773011571685
        },
        "cost": 0.0,
        "time": 14.46127200126648,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 430,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8975570385390661,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 218,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1823
        },
        "cost": 0.0,
        "time": 12.621585845947266,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 431,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5266842328983357,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 749,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00021203743769198443,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1274,
            "feature_preprocessor:kernel_pca:coef0": -0.5157562599314598
        },
        "cost": 0.0,
        "time": 9.257983922958374,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 432,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.383135686209098,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 741,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1218,
            "feature_preprocessor:kernel_pca:coef0": 0.11116444122925895,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.08319539230569487
        },
        "cost": 0.0,
        "time": 9.08577299118042,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 433,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3765736477821821,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 142,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1470,
            "feature_preprocessor:kernel_pca:gamma": 2.744313168503332
        },
        "cost": 0.0,
        "time": 9.62446904182434,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 434,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4494725748764097,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 352,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 542,
            "feature_preprocessor:kernel_pca:coef0": -0.34181316148557106,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.16064355445283127
        },
        "cost": 0.0,
        "time": 6.43839693069458,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 435,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.46461752674326573,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 628,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0004347378415235158,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 970
        },
        "cost": 0.0,
        "time": 6.0033416748046875,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 436,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4466544434391573,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 887,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1250
        },
        "cost": 0.0,
        "time": 9.369231939315796,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 437,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6342825325790327,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 270,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1134,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1322,
            "feature_preprocessor:kernel_pca:coef0": -0.7719850760042501
        },
        "cost": 0.0,
        "time": 9.155096054077148,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 438,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7784980318768473,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 351,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 688,
            "feature_preprocessor:kernel_pca:coef0": 0.32120728349049976
        },
        "cost": 0.0,
        "time": 7.437414169311523,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 439,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2698547988305741,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 494,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.323003223505403,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 831,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 7.096394318510554,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.24544579218399,
        "time": 4.142248153686523,
        "additional_info": {
            "duration": 4.127013921737671,
            "num_run": 440,
            "train_loss": 1.1702255977443103,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 440,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8573683684341091,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 105,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 820
        },
        "cost": 0.0,
        "time": 7.224609851837158,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 441,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7266638999473274,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 653,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1511,
            "feature_preprocessor:kernel_pca:gamma": 0.017233461237192875
        },
        "cost": 0.0,
        "time": 11.201841115951538,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 442,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.519460976573456,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 254,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.02233407785610525,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 977
        },
        "cost": 0.0,
        "time": 7.5945820808410645,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 443,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.32149221895444857,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 612,
            "feature_preprocessor:select_percentile_classification:percentile": 4.064525415596383,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.30739168987748,
        "time": 1.7073240280151367,
        "additional_info": {
            "duration": 1.691235065460205,
            "num_run": 444,
            "train_loss": 1.1903493631236761,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 444,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5744349051290933,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 646,
            "feature_preprocessor:select_rates_classification:alpha": 0.29054687611601393,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.2102285518827025,
        "time": 1.8769068717956543,
        "additional_info": {
            "duration": 1.8585290908813477,
            "num_run": 445,
            "train_loss": 1.1548137253753956,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 445,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6361446877845964,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 6,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 176,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1753,
            "feature_preprocessor:kernel_pca:gamma": 5.8070178014372745e-05
        },
        "cost": 0.0,
        "time": 9.356661796569824,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 446,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27838478090384094,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 115,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8314824503774729,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.21090763069779886,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 983,
            "feature_preprocessor:kernel_pca:gamma": 0.0008773425709268396
        },
        "cost": 0.0,
        "time": 8.415776014328003,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 447,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8947443509956083,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 723,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.002397079694111706,
            "feature_preprocessor:select_percentile_classification:percentile": 78.47238719141873,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2738306901896783,
        "time": 1.4020516872406006,
        "additional_info": {
            "duration": 1.382720947265625,
            "num_run": 448,
            "train_loss": 1.1678632040234873,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 448,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4694961558026214,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 288,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 68
        },
        "cost": 0.0,
        "time": 5.798804998397827,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 449,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29609441438896045,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 975,
            "feature_preprocessor:select_percentile_classification:percentile": 61.63615707561928,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.226777024369891,
        "time": 1.688966989517212,
        "additional_info": {
            "duration": 1.6684648990631104,
            "num_run": 450,
            "train_loss": 1.2268386697724236,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 450,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8210771813036282,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 494,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 539,
            "feature_preprocessor:kernel_pca:coef0": 0.6071456360396974,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 1.6646445508850598
        },
        "cost": 0.0,
        "time": 6.028488874435425,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 451,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8608425024432969,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 815,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.05106571265511205,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1171,
            "feature_preprocessor:kernel_pca:coef0": 0.9371112583321508
        },
        "cost": 0.0,
        "time": 8.423936128616333,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 452,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6051939918672646,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 134,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1328,
            "feature_preprocessor:kernel_pca:coef0": 0.7075135819770786
        },
        "cost": 0.0,
        "time": 9.603225946426392,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 453,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.35080441452250344,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 752,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0009880782652133219,
            "feature_preprocessor:select_percentile_classification:percentile": 15.481063553864402,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2793931908840084,
        "time": 1.8525912761688232,
        "additional_info": {
            "duration": 1.8352818489074707,
            "num_run": 454,
            "train_loss": 1.1955776973430405,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 454,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7119583140891539,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 260,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1750,
            "feature_preprocessor:kernel_pca:coef0": 0.7357272501531369,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.004032076189797253
        },
        "cost": 0.0,
        "time": 11.427533864974976,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 455,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.21042990775598114,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 350,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.003296691338628067,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 435,
            "feature_preprocessor:kernel_pca:gamma": 0.0004079642756242898
        },
        "cost": 0.0,
        "time": 5.681053876876831,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 456,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.841547246507478,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 194,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.035660976881862254,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.765852564231618,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.22171121935568322,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1391
        },
        "cost": 0.0,
        "time": 9.454004049301147,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 457,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5460870955741759,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 715,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03158717195910034,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9587464932518184,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.014668033514129614,
            "feature_preprocessor:select_percentile_classification:percentile": 40.983430926966236,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2389414645266377,
        "time": 1.143531084060669,
        "additional_info": {
            "duration": 1.1265759468078613,
            "num_run": 458,
            "train_loss": 1.1660684276932605,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 458,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6030369227090646,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 542,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1621,
            "feature_preprocessor:kernel_pca:coef0": 0.5117686614790398,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 2.1979478357143796
        },
        "cost": 0.0,
        "time": 11.29425311088562,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 459,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.806854669645678,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 322,
            "feature_preprocessor:select_rates_classification:alpha": 0.46085112378635695,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.241018293726948,
        "time": 0.7817690372467041,
        "additional_info": {
            "duration": 0.7658641338348389,
            "num_run": 460,
            "train_loss": 1.1284676472899282,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 460,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.29082829531304044,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 295,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7626184633516158,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.27722417011709966,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 816,
            "feature_preprocessor:kernel_pca:gamma": 0.005663152048564417
        },
        "cost": 0.0,
        "time": 6.19760799407959,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 461,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3361870300706491,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 576,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3189761827648223,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1021,
            "feature_preprocessor:kernel_pca:coef0": 0.7041022175870579,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.23251351388753722
        },
        "cost": 0.0,
        "time": 7.981332063674927,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 462,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5575734736821196,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 463,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00028205722796005486,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 102,
            "feature_preprocessor:kernel_pca:coef0": -0.05647030434520084
        },
        "cost": 0.0,
        "time": 5.871025800704956,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 463,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2797412889884707,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 825,
            "feature_preprocessor:select_rates_classification:alpha": 0.044285512115956244,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 0.0,
        "time": 1.566154956817627,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/compas/compas_RF_AOD_sex.py\", line 368, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 464,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.630428966999421,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 919,
            "feature_preprocessor:select_rates_classification:alpha": 0.15707429487303382,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2363041195947104,
        "time": 1.6949009895324707,
        "additional_info": {
            "duration": 1.670910120010376,
            "num_run": 465,
            "train_loss": 1.1436324364381756,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 465,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.781792834172534,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 465,
            "feature_preprocessor:select_rates_classification:alpha": 0.30476114261735043,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.7251429557800293,
        "additional_info": {
            "duration": 1.710068941116333,
            "num_run": 466,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 466,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.28228980943573373,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 811,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "feature_preprocessor:select_rates_classification:alpha": 0.4899180665187251,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.226777024369891,
        "time": 2.1226842403411865,
        "additional_info": {
            "duration": 2.1004421710968018,
            "num_run": 467,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 467,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6351536080112945,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 299,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1498,
            "feature_preprocessor:kernel_pca:coef0": -0.5180973283631534,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.770657659949735
        },
        "cost": 0.0,
        "time": 4.679948806762695,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 468,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.23231432486993336,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 857,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.05466236409712543,
            "feature_preprocessor:select_rates_classification:alpha": 0.15271667582565132,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2633320159913657,
        "time": 1.582571029663086,
        "additional_info": {
            "duration": 1.530026912689209,
            "num_run": 469,
            "train_loss": 1.1741304238520787,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 469,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2708142641579599,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 766,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.17222736932131244,
            "feature_preprocessor:select_rates_classification:alpha": 0.10991407476706237,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2559666475389526,
        "time": 1.6445879936218262,
        "additional_info": {
            "duration": 1.6233940124511719,
            "num_run": 470,
            "train_loss": 1.1564264210881046,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 470,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.25542497790771984,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 373,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.06667737020592278,
            "feature_preprocessor:select_rates_classification:alpha": 0.010102198466527558,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.248466810034527,
        "time": 0.884864091873169,
        "additional_info": {
            "duration": 0.8659143447875977,
            "num_run": 471,
            "train_loss": 1.149616700315546,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 471,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.49211221640254277,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 529,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3610757496253912,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1256,
            "feature_preprocessor:kernel_pca:coef0": 0.0795780243052393,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 0.0019651129714887213
        },
        "cost": 0.0,
        "time": 3.928870916366577,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 472,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.45237962547303845,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 882,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1416
        },
        "cost": 0.0,
        "time": 4.734933137893677,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 473,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4455904760939331,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 226,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0006592194576393189,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9908354204064982,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.29319791611557794,
            "feature_preprocessor:select_rates_classification:alpha": 0.27734241167108153,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.421431064605713,
        "additional_info": {
            "duration": 1.4095568656921387,
            "num_run": 474,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 474,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5030156765273497,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 624,
            "feature_preprocessor:select_rates_classification:alpha": 0.03280824117770029,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.7404909133911133,
        "additional_info": {
            "duration": 1.7240047454833984,
            "num_run": 475,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 475,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27908903941321794,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 835,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.020540468623867054,
            "feature_preprocessor:select_rates_classification:alpha": 0.03420963978816648,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2496161462231878,
        "time": 1.4775829315185547,
        "additional_info": {
            "duration": 1.4571220874786377,
            "num_run": 476,
            "train_loss": 1.1645249442977537,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 476,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.364088767139669,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 280,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1918
        },
        "cost": 0.0,
        "time": 7.439532041549683,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 477,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7116928865160332,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 582,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0010167865951571885,
            "feature_preprocessor:select_rates_classification:alpha": 0.4705677732224456,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.231065258208711,
        "time": 1.0882470607757568,
        "additional_info": {
            "duration": 1.0684070587158203,
            "num_run": 478,
            "train_loss": 1.1422267268901531,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 478,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.289573032807263,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 410,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8308586935886372,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.06008078907101405,
            "feature_preprocessor:select_rates_classification:alpha": 0.011509231737104376,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.24289821258217,
        "time": 1.0032861232757568,
        "additional_info": {
            "duration": 0.9876070022583008,
            "num_run": 479,
            "train_loss": 1.1567701788953493,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 479,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2815436613098625,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 825,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.004084673148640668,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.75,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25290551060913585,
            "feature_preprocessor:select_rates_classification:alpha": 0.044285512115956244,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2397426541023613,
        "time": 1.4213740825653076,
        "additional_info": {
            "duration": 1.4023408889770508,
            "num_run": 480,
            "train_loss": 1.16408008659955,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 480,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7902214967753358,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 2,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 187,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 415
        },
        "cost": 0.0,
        "time": 1.2174968719482422,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 481,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.22382321978352115,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 904,
            "feature_preprocessor:select_rates_classification:alpha": 0.12406974835183246,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2252529975074002,
        "time": 1.8233609199523926,
        "additional_info": {
            "duration": 1.798285961151123,
            "num_run": 482,
            "train_loss": 1.1426872726938597,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 482,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6443765834445823,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 317,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 221,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.2829809292203427,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.904865026473999,
        "additional_info": {
            "duration": 1.8919763565063477,
            "num_run": 483,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 483,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7777658652374404,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 912,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 874
        },
        "cost": 0.0,
        "time": 2.9716060161590576,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 484,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3831038351421938,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 256,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.025484665268846154,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1414,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 13.093051353416366,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2521073688642859,
        "time": 4.700939893722534,
        "additional_info": {
            "duration": 4.687633037567139,
            "num_run": 485,
            "train_loss": 1.2054530408217365,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 485,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5139465060213234,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 795,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0055589007992332615,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.768003027345432,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.0656232843903778,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 335,
            "feature_preprocessor:kernel_pca:coef0": 0.7183189802742218
        },
        "cost": 0.0,
        "time": 1.32818603515625,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 486,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5307146009161088,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 808,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.040044631662197294,
            "feature_preprocessor:select_percentile_classification:percentile": 62.85194846234834,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2491119967953317,
        "time": 1.9781639575958252,
        "additional_info": {
            "duration": 1.958634853363037,
            "num_run": 487,
            "train_loss": 1.1665308206119318,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 487,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4054531671929403,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 860,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1812,
            "feature_preprocessor:kernel_pca:coef0": 0.20208167860677362,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 0.007631907267181912
        },
        "cost": 0.0,
        "time": 8.359106063842773,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 488,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.45808654485335487,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 347,
            "feature_preprocessor:select_percentile_classification:percentile": 94.58357282523006,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2679714061386127,
        "time": 0.9315612316131592,
        "additional_info": {
            "duration": 0.9170386791229248,
            "num_run": 489,
            "train_loss": 1.1459723045613863,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 489,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4141846083266445,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 283,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.004920734601017388,
            "feature_preprocessor:select_percentile_classification:percentile": 2.1124286715867235,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2034154395853063,
        "time": 0.7311520576477051,
        "additional_info": {
            "duration": 0.7148959636688232,
            "num_run": 490,
            "train_loss": 1.152917112428366,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 490,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8243190884972829,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 762,
            "feature_preprocessor:select_percentile_classification:percentile": 86.85520797553912,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2468933561914997,
        "time": 2.179560899734497,
        "additional_info": {
            "duration": 2.1563689708709717,
            "num_run": 491,
            "train_loss": 1.1303676689782203,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 491,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2855261132647847,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 845,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 890,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 36.83257212853758,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.2448772179527925,
        "time": 5.028648853302002,
        "additional_info": {
            "duration": 5.00958514213562,
            "num_run": 492,
            "train_loss": 1.2154077638849317,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 492,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.25285736332054215,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 471,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "feature_preprocessor:select_rates_classification:alpha": 0.22920172623693724,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.226777024369891,
        "time": 1.3398499488830566,
        "additional_info": {
            "duration": 1.289212942123413,
            "num_run": 493,
            "train_loss": 1.2270520650415322,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 493,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4423632956074094,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 18,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 140,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.09749255898844941,
            "feature_preprocessor:select_rates_classification:alpha": 0.37044101809322605,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.343501091003418,
        "additional_info": {
            "duration": 1.3321731090545654,
            "num_run": 494,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 494,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7215768894668717,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 719,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9934456111764609,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.0016725146993690461,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1252,
            "feature_preprocessor:kernel_pca:coef0": 0.28942858358432444
        },
        "cost": 0.0,
        "time": 4.444569826126099,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 495,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5196578292520057,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 494,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1815,
            "feature_preprocessor:kernel_pca:coef0": 0.38954413549486167,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.02722758571580428
        },
        "cost": 0.0,
        "time": 6.766361951828003,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 496,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4357942978090882,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 361,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 972,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 20.0693977967208,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2416847864786662,
        "time": 4.914288282394409,
        "additional_info": {
            "duration": 4.8996570110321045,
            "num_run": 497,
            "train_loss": 1.2123720981868904,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 497,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.22394230786298921,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 837,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.09505252325072348,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 608,
            "feature_preprocessor:kernel_pca:coef0": 0.49699087701665023,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.0024863011335425024
        },
        "cost": 0.0,
        "time": 1.8055670261383057,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 498,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8929686259684557,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 627,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.013070500269562652,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 352,
            "feature_preprocessor:kernel_pca:coef0": -0.5232025000247409
        },
        "cost": 0.0,
        "time": 1.2949321269989014,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 499,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4391679809010184,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 194,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.06789438559381293,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9742712661944597,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.19026978514320014,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1630
        },
        "cost": 0.0,
        "time": 6.020843029022217,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 500,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6500399471612075,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 586,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.003448664032575193,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8339668148986568,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.07215461549574044,
            "feature_preprocessor:select_percentile_classification:percentile": 75.11501201721845,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2450434716037697,
        "time": 1.1198921203613281,
        "additional_info": {
            "duration": 1.1022379398345947,
            "num_run": 501,
            "train_loss": 1.1580627652432127,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 501,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2440806791812059,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 744,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.24347192178527227,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7353638310428265,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.21757258789016018,
            "feature_preprocessor:select_rates_classification:alpha": 0.472354591431496,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.2269226910009574,
        "time": 1.8250432014465332,
        "additional_info": {
            "duration": 1.8072090148925781,
            "num_run": 502,
            "train_loss": 1.19572565850971,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 502,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6260693832350747,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 815,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0077043921497229875,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1601,
            "feature_preprocessor:kernel_pca:gamma": 0.50634640353203
        },
        "cost": 0.0,
        "time": 6.35492205619812,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 503,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3076206237233715,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 14,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 702,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.14282843698098122,
            "feature_preprocessor:select_rates_classification:alpha": 0.21792768927593661,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2508518901177514,
        "time": 1.1325597763061523,
        "additional_info": {
            "duration": 1.114495038986206,
            "num_run": 504,
            "train_loss": 1.157528282458266,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 504,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5804789158102404,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 286,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010546151284241398,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1962,
            "feature_preprocessor:kernel_pca:coef0": -0.7043081596816136,
            "feature_preprocessor:kernel_pca:degree": 3,
            "feature_preprocessor:kernel_pca:gamma": 0.006756051636745838
        },
        "cost": 0.0,
        "time": 7.072068691253662,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 505,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3306675426740659,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 10,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 667,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.000724382434562471,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 337,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.3039721299686295,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.9037020206451416,
        "additional_info": {
            "duration": 1.8853728771209717,
            "num_run": 506,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 506,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7684528759930136,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 109,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7820016560529363,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.28421206554104317,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 837,
            "feature_preprocessor:kernel_pca:coef0": 0.16820622292822152
        },
        "cost": 0.0,
        "time": 2.560228109359741,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 507,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.27908903941321794,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 788,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.05673367402320158,
            "feature_preprocessor:select_rates_classification:alpha": 0.05143684425311219,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.270604502417453,
        "time": 1.2445876598358154,
        "additional_info": {
            "duration": 1.2246930599212646,
            "num_run": 508,
            "train_loss": 1.1592452790784733,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 508,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7714129503550082,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 726,
            "feature_preprocessor:select_rates_classification:alpha": 0.21395085838646094,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2363984526032568,
        "time": 1.8067610263824463,
        "additional_info": {
            "duration": 1.7829501628875732,
            "num_run": 509,
            "train_loss": 1.138848318835093,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 509,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.295396345054009,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 527,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 302
        },
        "cost": 0.0,
        "time": 1.8961799144744873,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 510,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4935303946079848,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 567,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.981488569057117,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.09694868875353296,
            "feature_preprocessor:select_rates_classification:alpha": 0.39438789786080125,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2303949102294482,
        "time": 1.4080300331115723,
        "additional_info": {
            "duration": 1.388502836227417,
            "num_run": 511,
            "train_loss": 1.178791445218577,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 511,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7500207685598248,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 252,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0009826796714095395,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8169706466493963,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.0577973915773219,
            "feature_preprocessor:select_percentile_classification:percentile": 20.84907104533876,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.238587689855652,
        "time": 0.726722002029419,
        "additional_info": {
            "duration": 0.7134778499603271,
            "num_run": 512,
            "train_loss": 1.1501551571277095,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 512,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.42680008609150255,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 12,
            "classifier:CustomRandomForest:min_samples_split": 4,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 688,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7905200996265873,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.29317471958746716,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1919,
            "feature_preprocessor:kernel_pca:gamma": 0.021500764306576065
        },
        "cost": 0.0,
        "time": 14.167762041091919,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 513,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2797412889884707,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 870,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "feature_preprocessor:select_rates_classification:alpha": 0.023724166332632232,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2329324799231958,
        "time": 1.4095458984375,
        "additional_info": {
            "duration": 1.3536951541900635,
            "num_run": 514,
            "train_loss": 1.2254307643720186,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 514,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5858955805640647,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 10,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 494,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 693,
            "feature_preprocessor:kernel_pca:coef0": -0.5604085803301406,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.8871332481567055
        },
        "cost": 0.0,
        "time": 4.227537155151367,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 515,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6521777758677769,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 651,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1195
        },
        "cost": 0.0,
        "time": 4.609519720077515,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 516,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2797412889884707,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 759,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.014050806548200847,
            "feature_preprocessor:select_rates_classification:alpha": 0.044285512115956244,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.226916061100343,
        "time": 1.7056710720062256,
        "additional_info": {
            "duration": 1.6869537830352783,
            "num_run": 517,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 517,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.20101637796166788,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 5,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 535,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.039348679839393205,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.821189513224106,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.19888058362209762,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 229,
            "feature_preprocessor:kernel_pca:gamma": 0.013474434370805173
        },
        "cost": 0.0,
        "time": 1.032768964767456,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 518,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8827635577448116,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 978,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010880055431636271,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1295
        },
        "cost": 0.0,
        "time": 3.887652635574341,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 519,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6522290171163332,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 945,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01061123314110778,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7684867009530155,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.17789158297771124,
            "feature_preprocessor:select_rates_classification:alpha": 0.4595030224563053,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2392349815125288,
        "time": 1.3872959613800049,
        "additional_info": {
            "duration": 1.361701250076294,
            "num_run": 520,
            "train_loss": 1.140771979103785,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 520,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8283815894600448,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 113,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00021630803356325712,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.839245347723576,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.11542940668103623,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1063,
            "feature_preprocessor:kernel_pca:coef0": 0.45167025393801596
        },
        "cost": 0.0,
        "time": 3.239590883255005,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 521,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.673731797018329,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 11,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 980,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.09261627748400127,
            "feature_preprocessor:select_rates_classification:alpha": 0.050250307667262184,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 2.5113770961761475,
        "additional_info": {
            "duration": 2.4887678623199463,
            "num_run": 522,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 522,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.40660631251630425,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 329,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 609,
            "feature_preprocessor:kernel_pca:coef0": 0.9478091244650961,
            "feature_preprocessor:kernel_pca:degree": 4,
            "feature_preprocessor:kernel_pca:gamma": 7.286180646318754e-05
        },
        "cost": 0.0,
        "time": 1.6853771209716797,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 523,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4719720260730862,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 996,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0002020131174941582,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 708,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 61,
            "feature_preprocessor:kernel_pca:coef0": -0.6306195682724032
        },
        "cost": 0.0,
        "time": 3.7220427989959717,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 524,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2958275136274947,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 3,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 161,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 788,
            "feature_preprocessor:kernel_pca:gamma": 0.001277630648319259
        },
        "cost": 0.0,
        "time": 2.295703887939453,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 525,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6483350963156316,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 12,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 262,
            "feature_preprocessor:select_rates_classification:alpha": 0.45306322265059246,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2344109106900363,
        "time": 0.6934359073638916,
        "additional_info": {
            "duration": 0.6800370216369629,
            "num_run": 526,
            "train_loss": 1.1564922642713582,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 526,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5595100186320672,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 2,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 959,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.004124712267882615,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 345,
            "feature_preprocessor:kernel_pca:gamma": 9.011936563439582e-05
        },
        "cost": 0.0,
        "time": 3.723411798477173,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 527,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.3577736501474448,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 13,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 812,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1506,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 48.98506024178066,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.2350069403016521,
        "time": 4.883361101150513,
        "additional_info": {
            "duration": 4.8644938468933105,
            "num_run": 528,
            "train_loss": 1.2240853985400748,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 528,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7509697427580064,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 17,
            "classifier:CustomRandomForest:min_samples_split": 16,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 531,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9070483147324521,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.18314480555480492,
            "feature_preprocessor:select_rates_classification:alpha": 0.020182489397693626,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2324651935320767,
        "time": 1.085939884185791,
        "additional_info": {
            "duration": 1.0696980953216553,
            "num_run": 529,
            "train_loss": 1.1638274067377656,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 529,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2797412889884707,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 789,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 904,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.053225936953808665,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2632841955732412,
        "time": 4.3672497272491455,
        "additional_info": {
            "duration": 4.34782600402832,
            "num_run": 530,
            "train_loss": 1.1664110899736249,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 530,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5353878553747984,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 4,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 859,
            "feature_preprocessor:kernel_pca:kernel": "sigmoid",
            "feature_preprocessor:kernel_pca:n_components": 1893,
            "feature_preprocessor:kernel_pca:coef0": -0.3644578721254028
        },
        "cost": 0.0,
        "time": 8.7244291305542,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 50, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 437, in fit\n    self._fit_transform(K)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_kernel_pca.py\", line 361, in _fit_transform\n    self.eigenvalues_ = _check_psd_eigenvalues(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1753, in _check_psd_eigenvalues\n    raise ValueError(\nValueError: There are significant negative eigenvalues (4.33238e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.\n",
            "error": "ValueError('There are significant negative eigenvalues (4.33238e-05 of the maximum positive). Either the matrix is not PSD, or there was an issue while computing the eigendecomposition of the matrix.')",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 531,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2700665839848687,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 9,
            "classifier:CustomRandomForest:min_samples_split": 17,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 648,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00013936709011966813,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1623,
            "feature_preprocessor:kernel_pca:coef0": -0.47818374248679363,
            "feature_preprocessor:kernel_pca:degree": 5,
            "feature_preprocessor:kernel_pca:gamma": 0.00014280886907837504
        },
        "cost": 0.0,
        "time": 6.473422050476074,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 532,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7397409280540941,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 20,
            "classifier:CustomRandomForest:min_samples_split": 14,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 317,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005158938359428241,
            "feature_preprocessor:select_percentile_classification:percentile": 6.8402076584282705,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2411737627847372,
        "time": 0.7391817569732666,
        "additional_info": {
            "duration": 0.6910502910614014,
            "num_run": 533,
            "train_loss": 1.1526430405400978,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 533,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2819407709830414,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 8,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 788,
            "feature_preprocessor:select_rates_classification:alpha": 0.270079487024467,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.226777024369891,
        "time": 1.730332851409912,
        "additional_info": {
            "duration": 1.710975170135498,
            "num_run": 534,
            "train_loss": 1.2266257757931895,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 534,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2797412889884707,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 759,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005384567294173174,
            "feature_preprocessor:select_rates_classification:alpha": 0.08123407876580765,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2351658739843745,
        "time": 1.6152260303497314,
        "additional_info": {
            "duration": 1.5522513389587402,
            "num_run": 535,
            "train_loss": 1.144117354900582,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 535,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.8824218333091853,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 182,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.006419588795249943,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 403,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.4985467626954002,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.2391242877539046,
        "time": 1.1910059452056885,
        "additional_info": {
            "duration": 1.1790831089019775,
            "num_run": 536,
            "train_loss": 1.1683983715651642,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 536,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.6085629278221021,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 7,
            "classifier:CustomRandomForest:min_samples_split": 8,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 503,
            "feature_preprocessor:select_percentile_classification:percentile": 51.08083163485932,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2506680065108755,
        "time": 1.2880699634552002,
        "additional_info": {
            "duration": 1.2707502841949463,
            "num_run": 537,
            "train_loss": 1.1518052497456648,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 537,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5208995340277967,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 6,
            "classifier:CustomRandomForest:min_samples_split": 20,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 623,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1375,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.13283732449720778,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.2458446611794933,
        "time": 4.312079906463623,
        "additional_info": {
            "duration": 4.25925087928772,
            "num_run": 538,
            "train_loss": 1.1565035455827744,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 538,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7511333205458459,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 11,
            "classifier:CustomRandomForest:min_samples_split": 19,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 434,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.004772275038607115,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 228,
            "feature_preprocessor:kernel_pca:gamma": 0.0005655309409001621
        },
        "cost": 0.0,
        "time": 2.922093152999878,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 539,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.2548432220975912,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 13,
            "classifier:CustomRandomForest:min_samples_split": 9,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 345,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03824896336477739,
            "feature_preprocessor:select_rates_classification:alpha": 0.04433865759758375,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.2535181603580987,
        "time": 1.2838869094848633,
        "additional_info": {
            "duration": 1.266012191772461,
            "num_run": 540,
            "train_loss": 1.1603693553953809,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 540,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5947479957168189,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 16,
            "classifier:CustomRandomForest:min_samples_split": 15,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 594,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.832943837781188,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.049152521574635316,
            "feature_preprocessor:kernel_pca:kernel": "poly",
            "feature_preprocessor:kernel_pca:n_components": 1217,
            "feature_preprocessor:kernel_pca:coef0": 0.545855736032101,
            "feature_preprocessor:kernel_pca:degree": 2,
            "feature_preprocessor:kernel_pca:gamma": 5.583360612429087
        },
        "cost": 0.0,
        "time": 4.28358793258667,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 541,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.5879046278324049,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 15,
            "classifier:CustomRandomForest:min_samples_split": 7,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 796,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01155187253504667,
            "feature_preprocessor:kernel_pca:kernel": "rbf",
            "feature_preprocessor:kernel_pca:n_components": 1096,
            "feature_preprocessor:kernel_pca:gamma": 0.00031922803399506405
        },
        "cost": 0.0,
        "time": 4.807484865188599,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/kernel_pca.py\", line 53, in fit\n    if len(self.preprocessor.alphas_ / self.preprocessor.lambdas_) == 0:\nAttributeError: 'KernelPCA' object has no attribute 'alphas_'\n",
            "error": "AttributeError(\"'KernelPCA' object has no attribute 'alphas_'\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 542,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomRandomForest:bootstrap": "False",
            "classifier:CustomRandomForest:criterion": "gini",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.4337157584751846,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 19,
            "classifier:CustomRandomForest:min_samples_split": 3,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 588,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04441190884968471,
            "feature_preprocessor:select_rates_classification:alpha": 0.10959100245925496,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.221846911470146,
        "time": 1.765044927597046,
        "additional_info": {
            "duration": 1.74861478805542,
            "num_run": 543,
            "train_loss": 1.1934111539658596,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 543,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomRandomForest",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "kernel_pca",
            "classifier:CustomRandomForest:bootstrap": "True",
            "classifier:CustomRandomForest:criterion": "entropy",
            "classifier:CustomRandomForest:max_depth": "None",
            "classifier:CustomRandomForest:max_features": 0.7840198746892828,
            "classifier:CustomRandomForest:max_leaf_nodes": "None",
            "classifier:CustomRandomForest:min_impurity_decrease": 0.0,
            "classifier:CustomRandomForest:min_samples_leaf": 18,
            "classifier:CustomRandomForest:min_samples_split": 5,
            "classifier:CustomRandomForest:min_weight_fraction_leaf": 0.0,
            "classifier:CustomRandomForest:n_estimators": 576,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.007635298488372887,
            "feature_preprocessor:kernel_pca:kernel": "cosine",
            "feature_preprocessor:kernel_pca:n_components": 1975
        },
        "cost": 0.0,
        "time": 0.0,
        "additional_info": {}
    }
]