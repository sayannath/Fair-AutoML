[
    {
        "config_id": 1,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0001,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.001,
            "classifier:CustomMLPClassifier:max_iter": 300,
            "classifier:CustomMLPClassifier:num_units": 100,
            "classifier:CustomMLPClassifier:tol": 0.0001,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 359.9979929924011,
        "additional_info": {
            "error": "Timeout",
            "configuration_origin": "Default"
        }
    },
    {
        "config_id": 2,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0007782452955049458,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00023029303167799008,
            "classifier:CustomMLPClassifier:max_iter": 415,
            "classifier:CustomMLPClassifier:num_units": 153,
            "classifier:CustomMLPClassifier:tol": 0.0002773499284991185,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.11261733284308063,
            "feature_preprocessor:select_percentile_classification:percentile": 56.074850336540614,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0936176999876859,
        "time": 17.880831956863403,
        "additional_info": {
            "duration": 17.871180057525635,
            "num_run": 3,
            "train_loss": 1.0948903114429702,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 3,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0003169053195647087,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.010766934685767615,
            "classifier:CustomMLPClassifier:max_iter": 388,
            "classifier:CustomMLPClassifier:num_units": 394,
            "classifier:CustomMLPClassifier:tol": 0.00023575326593418722,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1893,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_rates_classification:alpha": 0.15288412443628016,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.0985773139914086,
        "time": 27.184464931488037,
        "additional_info": {
            "duration": 27.173256158828735,
            "num_run": 4,
            "train_loss": 1.053228815472898,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 4,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 1.7375262220576296e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.30967016111796086,
            "classifier:CustomMLPClassifier:max_iter": 151,
            "classifier:CustomMLPClassifier:num_units": 302,
            "classifier:CustomMLPClassifier:tol": 2.116206938447537e-05,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1729,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 30.04649540155197,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.1082511206725316,
        "time": 5.766288995742798,
        "additional_info": {
            "duration": 5.754954099655151,
            "num_run": 5,
            "train_loss": 1.1005449544896806,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 5,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.01720257303638645,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0019883274287727697,
            "classifier:CustomMLPClassifier:max_iter": 414,
            "classifier:CustomMLPClassifier:num_units": 70,
            "classifier:CustomMLPClassifier:tol": 0.008909643206827106,
            "feature_preprocessor:select_percentile_classification:percentile": 2.8647710849727215,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0984424446589833,
        "time": 2.243865728378296,
        "additional_info": {
            "duration": 2.235276937484741,
            "num_run": 6,
            "train_loss": 1.1063751709603835,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 6,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.00011669087513594735,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.006705025454141513,
            "classifier:CustomMLPClassifier:max_iter": 260,
            "classifier:CustomMLPClassifier:num_units": 339,
            "classifier:CustomMLPClassifier:tol": 0.00014624805374758651,
            "feature_preprocessor:select_rates_classification:alpha": 0.06001024280424905,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.0835452848488925,
        "time": 2.420503854751587,
        "additional_info": {
            "duration": 2.4103140830993652,
            "num_run": 7,
            "train_loss": 1.0948514511950904,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 7,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.03874404931272443,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.22629373472951278,
            "classifier:CustomMLPClassifier:max_iter": 265,
            "classifier:CustomMLPClassifier:num_units": 167,
            "classifier:CustomMLPClassifier:tol": 0.00022357313562542452,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9855789024763042,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24353664469239517,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1773
        },
        "cost": 0.0,
        "time": 0.1533346176147461,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 8,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 1.992653517432758e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00033604868994477225,
            "classifier:CustomMLPClassifier:max_iter": 252,
            "classifier:CustomMLPClassifier:num_units": 365,
            "classifier:CustomMLPClassifier:tol": 0.0001870417625321293,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 879
        },
        "cost": 0.0,
        "time": 0.13283085823059082,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 9,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0018052124677394809,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0006273191154366666,
            "classifier:CustomMLPClassifier:max_iter": 484,
            "classifier:CustomMLPClassifier:num_units": 165,
            "classifier:CustomMLPClassifier:tol": 0.001235119743758402,
            "feature_preprocessor:select_percentile_classification:percentile": 82.61027480542838,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0939540826263294,
        "time": 3.626801013946533,
        "additional_info": {
            "duration": 3.6179723739624023,
            "num_run": 10,
            "train_loss": 1.0869003461009212,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 10,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.007062522235324752,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.1269490987215536,
            "classifier:CustomMLPClassifier:max_iter": 271,
            "classifier:CustomMLPClassifier:num_units": 127,
            "classifier:CustomMLPClassifier:tol": 0.003485019443146009,
            "feature_preprocessor:select_percentile_classification:percentile": 12.240941488854592,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0785001306667157,
        "time": 3.1807539463043213,
        "additional_info": {
            "duration": 3.171337127685547,
            "num_run": 11,
            "train_loss": 1.0806537008380555,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 11,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 5.248504023155052e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.21725611456537683,
            "classifier:CustomMLPClassifier:max_iter": 281,
            "classifier:CustomMLPClassifier:num_units": 284,
            "classifier:CustomMLPClassifier:tol": 3.7369293110288375e-05,
            "feature_preprocessor:select_percentile_classification:percentile": 37.361028439640826,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0898790872670232,
        "time": 2.773362874984741,
        "additional_info": {
            "duration": 2.7642219066619873,
            "num_run": 12,
            "train_loss": 1.095367154018206,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 12,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 9.535891041294294e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.099522360888191,
            "classifier:CustomMLPClassifier:max_iter": 186,
            "classifier:CustomMLPClassifier:num_units": 294,
            "classifier:CustomMLPClassifier:tol": 0.00021481732389565334,
            "feature_preprocessor:select_rates_classification:alpha": 0.3275453637804481,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.094381589604797,
        "time": 5.3513970375061035,
        "additional_info": {
            "duration": 5.341933250427246,
            "num_run": 13,
            "train_loss": 1.088529243585609,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 13,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.004980130850453366,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.26898394998281444,
            "classifier:CustomMLPClassifier:max_iter": 359,
            "classifier:CustomMLPClassifier:num_units": 152,
            "classifier:CustomMLPClassifier:tol": 8.486923229931936e-05,
            "feature_preprocessor:select_rates_classification:alpha": 0.4905345575612472,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.0955948633379409,
        "time": 17.472312688827515,
        "additional_info": {
            "duration": 17.46377921104431,
            "num_run": 14,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 14,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0055785273324142695,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0005266472275962696,
            "classifier:CustomMLPClassifier:max_iter": 264,
            "classifier:CustomMLPClassifier:num_units": 226,
            "classifier:CustomMLPClassifier:tol": 4.366068835235956e-05,
            "feature_preprocessor:select_rates_classification:alpha": 0.2348408865416625,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.0879505395137001,
        "time": 85.97798204421997,
        "additional_info": {
            "duration": 85.95766019821167,
            "num_run": 15,
            "train_loss": 1.0785584564785566,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 15,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.00010501819402405675,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00046491779656978135,
            "classifier:CustomMLPClassifier:max_iter": 245,
            "classifier:CustomMLPClassifier:num_units": 126,
            "classifier:CustomMLPClassifier:tol": 1.557916478870904e-05,
            "feature_preprocessor:select_percentile_classification:percentile": 71.97406556788282,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.1017819336201504,
        "time": 123.43154978752136,
        "additional_info": {
            "duration": 123.42142105102539,
            "num_run": 16,
            "train_loss": 1.0313186745186644,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 16,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.05460009622248213,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5161927689006666,
            "classifier:CustomMLPClassifier:max_iter": 350,
            "classifier:CustomMLPClassifier:num_units": 195,
            "classifier:CustomMLPClassifier:tol": 0.0007511883937609763,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1431
        },
        "cost": 0.0,
        "time": 0.1485459804534912,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 17,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.01834914652656262,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.003582438464280511,
            "classifier:CustomMLPClassifier:max_iter": 186,
            "classifier:CustomMLPClassifier:num_units": 228,
            "classifier:CustomMLPClassifier:tol": 1.769220572662918e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8542255506724583,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.01419709504440838,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 466
        },
        "cost": 0.0,
        "time": 0.14304208755493164,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 18,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.000738336690780324,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0024857046216432087,
            "classifier:CustomMLPClassifier:max_iter": 404,
            "classifier:CustomMLPClassifier:num_units": 279,
            "classifier:CustomMLPClassifier:tol": 1.2640262250752865e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8913389319543987,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.07949007034718948,
            "feature_preprocessor:select_rates_classification:alpha": 0.39537825420771044,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.1028578074339896,
        "time": 27.118022203445435,
        "additional_info": {
            "duration": 27.10831379890442,
            "num_run": 19,
            "train_loss": 1.086795094286222,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 19,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 1.708552935360731e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.28378811741471166,
            "classifier:CustomMLPClassifier:max_iter": 430,
            "classifier:CustomMLPClassifier:num_units": 94,
            "classifier:CustomMLPClassifier:tol": 0.003486105218293831,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0024052285339518247,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1914
        },
        "cost": 0.0,
        "time": 0.1441490650177002,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 20,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.08074203349986817,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.016484217741043673,
            "classifier:CustomMLPClassifier:max_iter": 312,
            "classifier:CustomMLPClassifier:num_units": 499,
            "classifier:CustomMLPClassifier:tol": 2.087555225024651e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0708234650239972,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 373
        },
        "cost": 0.0,
        "time": 0.13716411590576172,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 21,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 1.5758519852787437e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.006832347076225496,
            "classifier:CustomMLPClassifier:max_iter": 244,
            "classifier:CustomMLPClassifier:num_units": 290,
            "classifier:CustomMLPClassifier:tol": 0.002058608331779715,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1552
        },
        "cost": 0.0,
        "time": 0.10873699188232422,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 22,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 6.524098159179136e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.007440996827475411,
            "classifier:CustomMLPClassifier:max_iter": 479,
            "classifier:CustomMLPClassifier:num_units": 175,
            "classifier:CustomMLPClassifier:tol": 0.00015113797127191215,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.35761004895083587,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7293053838495185,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.09655640350032449,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 187
        },
        "cost": 0.0,
        "time": 0.12006187438964844,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 23,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.000738336690780324,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.006065173514027272,
            "classifier:CustomMLPClassifier:max_iter": 429,
            "classifier:CustomMLPClassifier:num_units": 279,
            "classifier:CustomMLPClassifier:tol": 2.099794552593747e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9007765694150982,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.07940646853199688,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 24
        },
        "cost": 0.0,
        "time": 0.16406488418579102,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 24,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 6.998251528860182e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00558942753629031,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 235,
            "classifier:CustomMLPClassifier:tol": 7.543309926340722e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00029995319336611765,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1876,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 237
        },
        "cost": 0.0,
        "time": 0.25104379653930664,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 25,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0003870212409185535,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0004338250332034688,
            "classifier:CustomMLPClassifier:max_iter": 437,
            "classifier:CustomMLPClassifier:num_units": 241,
            "classifier:CustomMLPClassifier:tol": 0.00015181911646592727,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8817295963922687,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.29597251105785194,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 25
        },
        "cost": 0.0,
        "time": 0.17015624046325684,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 26,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 4.249050754938254e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.24021002181563567,
            "classifier:CustomMLPClassifier:max_iter": 171,
            "classifier:CustomMLPClassifier:num_units": 435,
            "classifier:CustomMLPClassifier:tol": 0.001338204723327261,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0738389101314114,
            "feature_preprocessor:select_rates_classification:alpha": 0.23918717582958204,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.0910569488955646,
        "time": 9.075615167617798,
        "additional_info": {
            "duration": 9.06604790687561,
            "num_run": 27,
            "train_loss": 1.0839806382032853,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 27,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0001703781254306893,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.05322788831717494,
            "classifier:CustomMLPClassifier:max_iter": 329,
            "classifier:CustomMLPClassifier:num_units": 303,
            "classifier:CustomMLPClassifier:tol": 3.098505612500997e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.41325760504962367,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 988,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.15894749884667572,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.1018514986418897,
        "time": 2.8778159618377686,
        "additional_info": {
            "duration": 2.868507146835327,
            "num_run": 28,
            "train_loss": 1.0819501300479721,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 28,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 1.0367134140027288e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.06732853286183203,
            "classifier:CustomMLPClassifier:max_iter": 109,
            "classifier:CustomMLPClassifier:num_units": 466,
            "classifier:CustomMLPClassifier:tol": 2.429307071635408e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0001303402219039969,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0956818799565302,
        "time": 12.497975826263428,
        "additional_info": {
            "duration": 12.488176107406616,
            "num_run": 29,
            "train_loss": 1.0197296100619813,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 29,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 8.592299997483855e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.006866339547223231,
            "classifier:CustomMLPClassifier:max_iter": 123,
            "classifier:CustomMLPClassifier:num_units": 372,
            "classifier:CustomMLPClassifier:tol": 1.9341577749125474e-05,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.095067275993445,
        "time": 4.3273398876190186,
        "additional_info": {
            "duration": 4.317670106887817,
            "num_run": 30,
            "train_loss": 1.0796816870357353,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 30,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00027868075118678417,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0018401898114352863,
            "classifier:CustomMLPClassifier:max_iter": 385,
            "classifier:CustomMLPClassifier:num_units": 289,
            "classifier:CustomMLPClassifier:tol": 0.0004921162655632399,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.22692315727002724,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1418
        },
        "cost": 0.0,
        "time": 0.1538991928100586,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 31,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.018648028141234296,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00013071868068177876,
            "classifier:CustomMLPClassifier:max_iter": 490,
            "classifier:CustomMLPClassifier:num_units": 461,
            "classifier:CustomMLPClassifier:tol": 0.0009393534973620335,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0034784138056052345,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1934,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:select_percentile_classification:percentile": 49.96915598503093,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0990298885356131,
        "time": 8.97000765800476,
        "additional_info": {
            "duration": 8.960304975509644,
            "num_run": 32,
            "train_loss": 1.0975691930843203,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 32,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 2.4865236951237755e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.002593006732979111,
            "classifier:CustomMLPClassifier:max_iter": 193,
            "classifier:CustomMLPClassifier:num_units": 274,
            "classifier:CustomMLPClassifier:tol": 0.00021901647457432707,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005075563975584329,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9092803389195542,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.28434654108179563,
            "feature_preprocessor:select_rates_classification:alpha": 0.11082478301001333,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.1354630148559222,
        "time": 3.8078091144561768,
        "additional_info": {
            "duration": 3.798614025115967,
            "num_run": 33,
            "train_loss": 1.134048157123686,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 33,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.03131207716192985,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0013958062107340533,
            "classifier:CustomMLPClassifier:max_iter": 332,
            "classifier:CustomMLPClassifier:num_units": 231,
            "classifier:CustomMLPClassifier:tol": 0.0003785045743857369,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.032594291108327636,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 775
        },
        "cost": 0.0,
        "time": 0.43683624267578125,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 34,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 2.075236217678447e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.6759490554296084,
            "classifier:CustomMLPClassifier:max_iter": 181,
            "classifier:CustomMLPClassifier:num_units": 95,
            "classifier:CustomMLPClassifier:tol": 0.0011045520923449149,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00507893235172329,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1012
        },
        "cost": 0.0,
        "time": 0.1494889259338379,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 35,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.001176622010074356,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.027410913539700595,
            "classifier:CustomMLPClassifier:max_iter": 367,
            "classifier:CustomMLPClassifier:num_units": 54,
            "classifier:CustomMLPClassifier:tol": 0.0015336674215828399,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03680489366283541,
            "feature_preprocessor:select_percentile_classification:percentile": 89.66693119338264,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.1129207998493718,
        "time": 4.661996126174927,
        "additional_info": {
            "duration": 4.652559995651245,
            "num_run": 36,
            "train_loss": 1.02822543154085,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 36,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 2.2221566148688822e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.03773125438058042,
            "classifier:CustomMLPClassifier:max_iter": 143,
            "classifier:CustomMLPClassifier:num_units": 305,
            "classifier:CustomMLPClassifier:tol": 3.178174296568634e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.013325693995558415,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 950,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.1025315420551656,
        "time": 6.740265846252441,
        "additional_info": {
            "duration": 6.730820894241333,
            "num_run": 37,
            "train_loss": 1.0903769220167685,
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 37,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 8.544224287549325e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.058136678814602466,
            "classifier:CustomMLPClassifier:max_iter": 128,
            "classifier:CustomMLPClassifier:num_units": 458,
            "classifier:CustomMLPClassifier:tol": 0.00039608523872839443,
            "feature_preprocessor:select_rates_classification:alpha": 0.45005152173604634,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.0997126345124855,
        "time": 7.457986116409302,
        "additional_info": {
            "duration": 7.4490931034088135,
            "num_run": 38,
            "train_loss": 1.1045752823570019,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 38,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.048543992395753216,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.021196978119255538,
            "classifier:CustomMLPClassifier:max_iter": 162,
            "classifier:CustomMLPClassifier:num_units": 451,
            "classifier:CustomMLPClassifier:tol": 4.154596438447529e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.011951759934890912,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7247608468101056,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.27262585586814975,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.1016339186111823,
        "time": 12.001061916351318,
        "additional_info": {
            "duration": 11.991956949234009,
            "num_run": 39,
            "train_loss": 1.1029426687265291,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 39,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0005281281597450433,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.09785884277987701,
            "classifier:CustomMLPClassifier:max_iter": 331,
            "classifier:CustomMLPClassifier:num_units": 195,
            "classifier:CustomMLPClassifier:tol": 9.63264701437115e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.018464209045129906,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 55
        },
        "cost": 0.0,
        "time": 0.1345369815826416,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 40,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0012151420940279445,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.1138343270337629,
            "classifier:CustomMLPClassifier:max_iter": 389,
            "classifier:CustomMLPClassifier:num_units": 200,
            "classifier:CustomMLPClassifier:tol": 2.5145571170523764e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04237079384729624,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 267,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 81.44330478545396,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0913074036301613,
        "time": 3.122030735015869,
        "additional_info": {
            "duration": 3.1131157875061035,
            "num_run": 41,
            "train_loss": 1.0749996669844661,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 41,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0860980713905881,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.006179344504823172,
            "classifier:CustomMLPClassifier:max_iter": 266,
            "classifier:CustomMLPClassifier:num_units": 222,
            "classifier:CustomMLPClassifier:tol": 0.0003929876965522041,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0007119657624442844,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1894,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.097172721325109,
        "time": 85.5121660232544,
        "additional_info": {
            "duration": 85.50003600120544,
            "num_run": 42,
            "train_loss": 1.0867321487335897,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 42,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.00021394576398030006,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.028278168233303664,
            "classifier:CustomMLPClassifier:max_iter": 163,
            "classifier:CustomMLPClassifier:num_units": 360,
            "classifier:CustomMLPClassifier:tol": 0.0023003074053336773,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.10581326917562364,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 145,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 531
        },
        "cost": 0.0,
        "time": 0.217756986618042,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 43,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0009629621948215595,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00024623550620287094,
            "classifier:CustomMLPClassifier:max_iter": 396,
            "classifier:CustomMLPClassifier:num_units": 296,
            "classifier:CustomMLPClassifier:tol": 7.113785453980501e-05,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1233
        },
        "cost": 0.0,
        "time": 0.12462115287780762,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 44,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00023633098124049615,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5543467644667022,
            "classifier:CustomMLPClassifier:max_iter": 468,
            "classifier:CustomMLPClassifier:num_units": 484,
            "classifier:CustomMLPClassifier:tol": 4.745400132102262e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005248675740050648,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 389
        },
        "cost": 0.0,
        "time": 0.4483158588409424,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 45,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 1.235646082050621e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0005704616381377377,
            "classifier:CustomMLPClassifier:max_iter": 244,
            "classifier:CustomMLPClassifier:num_units": 458,
            "classifier:CustomMLPClassifier:tol": 0.003158945413441746,
            "feature_preprocessor:select_percentile_classification:percentile": 84.97425367866413,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.100825398285239,
        "time": 2.7633681297302246,
        "additional_info": {
            "duration": 2.7544541358947754,
            "num_run": 46,
            "train_loss": 1.0917820464780226,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 46,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.007356604147195697,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.08332690277708234,
            "classifier:CustomMLPClassifier:max_iter": 233,
            "classifier:CustomMLPClassifier:num_units": 58,
            "classifier:CustomMLPClassifier:tol": 2.3583633996921562e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.06694584078289964,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 949
        },
        "cost": 0.0,
        "time": 0.1231229305267334,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 47,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.00027625722677573867,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.08396040727562666,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 144,
            "classifier:CustomMLPClassifier:tol": 0.00014282510541136474,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3332621746208879,
            "feature_preprocessor:select_percentile_classification:percentile": 51.78262230518645,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.1230136281969625,
        "time": 3.602289915084839,
        "additional_info": {
            "duration": 3.5931382179260254,
            "num_run": 48,
            "train_loss": 1.0800060206048443,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 48,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 8.11564213963237e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00019791569921325458,
            "classifier:CustomMLPClassifier:max_iter": 349,
            "classifier:CustomMLPClassifier:num_units": 376,
            "classifier:CustomMLPClassifier:tol": 3.87195927718707e-05,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1769
        },
        "cost": 0.0,
        "time": 0.4621119499206543,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 49,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0013098010592833534,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0007028257314580763,
            "classifier:CustomMLPClassifier:max_iter": 145,
            "classifier:CustomMLPClassifier:num_units": 385,
            "classifier:CustomMLPClassifier:tol": 1.3993859603305452e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.012176414940509573,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0888676345613302,
        "time": 9.33290410041809,
        "additional_info": {
            "duration": 9.323708057403564,
            "num_run": 50,
            "train_loss": 1.0875580313223703,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 50,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.002469108922743238,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.016742406041984497,
            "classifier:CustomMLPClassifier:max_iter": 433,
            "classifier:CustomMLPClassifier:num_units": 93,
            "classifier:CustomMLPClassifier:tol": 0.0003956259391511012,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1504,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 3.4548670533731194,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0999966309111788,
        "time": 2.4529991149902344,
        "additional_info": {
            "duration": 2.4439828395843506,
            "num_run": 51,
            "train_loss": 1.0966572391588096,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 51,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0016285640335632486,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.08066467975178365,
            "classifier:CustomMLPClassifier:max_iter": 424,
            "classifier:CustomMLPClassifier:num_units": 461,
            "classifier:CustomMLPClassifier:tol": 6.32769452298795e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00013289641618675013,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1947
        },
        "cost": 0.0,
        "time": 0.12909483909606934,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 52,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.003346911194493434,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.32790376458952253,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 218,
            "classifier:CustomMLPClassifier:tol": 3.2749233398433556e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8804207857716133,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23987156201587617,
            "feature_preprocessor:select_percentile_classification:percentile": 39.295262261446865,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 0.0,
        "time": 5.771507024765015,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 53,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0006459894843530074,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.2515706567610195,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 257,
            "classifier:CustomMLPClassifier:tol": 3.2749233398433556e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.007477621281725503,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8804207857716133,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23220463194478647,
            "feature_preprocessor:select_percentile_classification:percentile": 36.074881581057014,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.1848499699603876,
        "time": 3.201429843902588,
        "additional_info": {
            "duration": 3.191362142562866,
            "num_run": 54,
            "train_loss": 1.171632718882719,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 54,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.07555056377793726,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.2080060312290928,
            "classifier:CustomMLPClassifier:max_iter": 486,
            "classifier:CustomMLPClassifier:num_units": 98,
            "classifier:CustomMLPClassifier:tol": 0.004735871933484496,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 911
        },
        "cost": 0.0,
        "time": 0.15228796005249023,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 55,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 5.003877514858095e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.14906778987603897,
            "classifier:CustomMLPClassifier:max_iter": 144,
            "classifier:CustomMLPClassifier:num_units": 72,
            "classifier:CustomMLPClassifier:tol": 0.0006466274423966319,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03070448395253325,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.982490335849602,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.17448125904284775,
            "feature_preprocessor:select_rates_classification:alpha": 0.028770572155323727,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.1113714821425678,
        "time": 2.3043980598449707,
        "additional_info": {
            "duration": 2.2954790592193604,
            "num_run": 56,
            "train_loss": 1.0921285400437006,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 56,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0003108627042661528,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.6686060747714949,
            "classifier:CustomMLPClassifier:max_iter": 121,
            "classifier:CustomMLPClassifier:num_units": 75,
            "classifier:CustomMLPClassifier:tol": 0.004686440477635098,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7477882002326386,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25989618385970753,
            "feature_preprocessor:select_percentile_classification:percentile": 74.89249481260302,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.2188170229144337,
        "time": 2.691577911376953,
        "additional_info": {
            "duration": 2.6819820404052734,
            "num_run": 57,
            "train_loss": 1.2281299767971947,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 57,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0027057384740979745,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00011566634215280151,
            "classifier:CustomMLPClassifier:max_iter": 139,
            "classifier:CustomMLPClassifier:num_units": 145,
            "classifier:CustomMLPClassifier:tol": 0.00012117974771184245,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.006108220628897216,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9348914102830121,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2846378375748411,
            "feature_preprocessor:select_percentile_classification:percentile": 78.05142539973319,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0845646795605681,
        "time": 13.33144497871399,
        "additional_info": {
            "duration": 13.3214750289917,
            "num_run": 58,
            "train_loss": 1.0801231483355802,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 58,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.023093572218401012,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00011944874206615101,
            "classifier:CustomMLPClassifier:max_iter": 279,
            "classifier:CustomMLPClassifier:num_units": 97,
            "classifier:CustomMLPClassifier:tol": 0.007334400282155168,
            "feature_preprocessor:select_percentile_classification:percentile": 15.956439424658464,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.097382940158383,
        "time": 2.9531121253967285,
        "additional_info": {
            "duration": 2.9434938430786133,
            "num_run": 59,
            "train_loss": 1.096724774308572,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 59,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 1.588802358799198e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.000501496927593178,
            "classifier:CustomMLPClassifier:max_iter": 408,
            "classifier:CustomMLPClassifier:num_units": 69,
            "classifier:CustomMLPClassifier:tol": 0.0011167322125498211,
            "feature_preprocessor:select_rates_classification:alpha": 0.22603082865233592,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.1013972812462942,
        "time": 4.525138854980469,
        "additional_info": {
            "duration": 4.51560378074646,
            "num_run": 60,
            "train_loss": 1.0780259759501643,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 60,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0009927967322227481,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.6221804935676056,
            "classifier:CustomMLPClassifier:max_iter": 107,
            "classifier:CustomMLPClassifier:num_units": 136,
            "classifier:CustomMLPClassifier:tol": 0.00017194438022209696,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7316641287209661,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23682472808592056,
            "feature_preprocessor:select_percentile_classification:percentile": 97.93041779394085,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.1000628676678144,
        "time": 2.10041880607605,
        "additional_info": {
            "duration": 2.0907416343688965,
            "num_run": 61,
            "train_loss": 1.0969592006997348,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 61,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.006195811375431949,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.02126556488756181,
            "classifier:CustomMLPClassifier:max_iter": 472,
            "classifier:CustomMLPClassifier:num_units": 271,
            "classifier:CustomMLPClassifier:tol": 0.006703997995793263,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0009325975808235357,
            "feature_preprocessor:select_percentile_classification:percentile": 76.29134926518331,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0914304706939628,
        "time": 2.1466310024261475,
        "additional_info": {
            "duration": 2.137770891189575,
            "num_run": 62,
            "train_loss": 1.0890473797890374,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 62,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.00010691535074565334,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.6221804935676056,
            "classifier:CustomMLPClassifier:max_iter": 125,
            "classifier:CustomMLPClassifier:num_units": 85,
            "classifier:CustomMLPClassifier:tol": 0.00011530876280381622,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.012577473718531447,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7560106299191417,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23682472808592056,
            "feature_preprocessor:select_percentile_classification:percentile": 97.93041779394085,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0937516340110225,
        "time": 2.120455026626587,
        "additional_info": {
            "duration": 2.1109681129455566,
            "num_run": 63,
            "train_loss": 1.0890475900440888,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 63,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.00035783558005392224,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00265284460855656,
            "classifier:CustomMLPClassifier:max_iter": 104,
            "classifier:CustomMLPClassifier:num_units": 285,
            "classifier:CustomMLPClassifier:tol": 0.0043920067545936215,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1086,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 10
        },
        "cost": 0.0,
        "time": 0.22084784507751465,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 64,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.000749487377729258,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3010321289051644,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 257,
            "classifier:CustomMLPClassifier:tol": 1.816369564033841e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.017368713956549445,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8804207857716133,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.229402952009034,
            "feature_preprocessor:select_percentile_classification:percentile": 36.074881581057014,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.100535529274568,
        "time": 4.201618909835815,
        "additional_info": {
            "duration": 4.191348075866699,
            "num_run": 65,
            "train_loss": 1.1064274381753925,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 65,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00022665581524275165,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3209608913330549,
            "classifier:CustomMLPClassifier:max_iter": 120,
            "classifier:CustomMLPClassifier:num_units": 423,
            "classifier:CustomMLPClassifier:tol": 0.0004481177920079007,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7523271846647767,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:select_percentile_classification:percentile": 47.177090545471906,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 0.0,
        "time": 2.8198318481445312,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 66,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.043056063671310006,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00012028555383858986,
            "classifier:CustomMLPClassifier:max_iter": 131,
            "classifier:CustomMLPClassifier:num_units": 100,
            "classifier:CustomMLPClassifier:tol": 0.00024759519989118594,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3239041524703679,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1135
        },
        "cost": 0.0,
        "time": 0.46305203437805176,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 67,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0009927967322227481,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.319006218369515,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 143,
            "classifier:CustomMLPClassifier:tol": 0.00017194438022209696,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.014900508872184156,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7561369714130776,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.2129058837890625,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 68,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0003448574387351017,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.30585287548878104,
            "classifier:CustomMLPClassifier:max_iter": 396,
            "classifier:CustomMLPClassifier:num_units": 203,
            "classifier:CustomMLPClassifier:tol": 0.000545888577440412,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.47551462164153857,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9264802946194999,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2498110613756337,
            "feature_preprocessor:select_rates_classification:alpha": 0.1,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.0985719062513255,
        "time": 2.8844821453094482,
        "additional_info": {
            "duration": 2.874413013458252,
            "num_run": 69,
            "train_loss": 1.106381669918522,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 69,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 4.613596798760357e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.01912169644728968,
            "classifier:CustomMLPClassifier:max_iter": 482,
            "classifier:CustomMLPClassifier:num_units": 397,
            "classifier:CustomMLPClassifier:tol": 2.2289397409875803e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.001854642291600276,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1927
        },
        "cost": 0.0,
        "time": 0.1448829174041748,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 70,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.002132253355702961,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4008369681909501,
            "classifier:CustomMLPClassifier:max_iter": 110,
            "classifier:CustomMLPClassifier:num_units": 68,
            "classifier:CustomMLPClassifier:tol": 0.00017194438022209696,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01327664556769225,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7164612838737503,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24477499337167766,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 3.3834588527679443,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 71,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0001432259784738962,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.31707710479350076,
            "classifier:CustomMLPClassifier:max_iter": 261,
            "classifier:CustomMLPClassifier:num_units": 195,
            "classifier:CustomMLPClassifier:tol": 0.0021924942898605406,
            "feature_preprocessor:select_percentile_classification:percentile": 34.27490900381116,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.1016883665044497,
        "time": 2.2554872035980225,
        "additional_info": {
            "duration": 2.246645927429199,
            "num_run": 72,
            "train_loss": 1.0869439353191797,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 72,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 9.956224692616692e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0011911924322287753,
            "classifier:CustomMLPClassifier:max_iter": 182,
            "classifier:CustomMLPClassifier:num_units": 106,
            "classifier:CustomMLPClassifier:tol": 0.005085878100570375,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005649537660755479,
            "feature_preprocessor:select_rates_classification:alpha": 0.42222110969388943,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.0879803607657754,
        "time": 2.2142679691314697,
        "additional_info": {
            "duration": 2.2050540447235107,
            "num_run": 73,
            "train_loss": 1.0798675711783217,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 73,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0009927967322227481,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3632578829678268,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 143,
            "classifier:CustomMLPClassifier:tol": 0.00017194438022209696,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.012935645877364581,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.729033392844673,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0964007568986232,
        "time": 5.905563831329346,
        "additional_info": {
            "duration": 5.8950090408325195,
            "num_run": 74,
            "train_loss": 1.0973615893272946,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 74,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0003108627042661528,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.315637364256879,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 85,
            "classifier:CustomMLPClassifier:tol": 0.004686440477635098,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7488054077013111,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25989618385970753,
            "feature_preprocessor:select_percentile_classification:percentile": 71.53071448278635,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 0.0,
        "time": 1.9707190990447998,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 75,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0006178502287292934,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.31702275381369405,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 257,
            "classifier:CustomMLPClassifier:tol": 1.816369564033841e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8804207857716133,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2602544629763059,
            "feature_preprocessor:select_rates_classification:alpha": 0.1,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 0.0,
        "time": 2.675081968307495,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 76,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.09829756458200459,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5146288542703378,
            "classifier:CustomMLPClassifier:max_iter": 107,
            "classifier:CustomMLPClassifier:num_units": 350,
            "classifier:CustomMLPClassifier:tol": 0.0001609639975021942,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.75,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23756226968507974,
            "feature_preprocessor:select_percentile_classification:percentile": 50.0,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.102735941486792,
        "time": 3.3864240646362305,
        "additional_info": {
            "duration": 3.3763461112976074,
            "num_run": 77,
            "train_loss": 1.1050297527296096,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 77,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 9.291779756041791e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.9983241593982473,
            "classifier:CustomMLPClassifier:max_iter": 389,
            "classifier:CustomMLPClassifier:num_units": 314,
            "classifier:CustomMLPClassifier:tol": 0.0008439295711927051,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.009948562753409019,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7311418911567703,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1338489963508241,
            "feature_preprocessor:select_percentile_classification:percentile": 56.24690761324964,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.1638234900244133,
        "time": 4.608391046524048,
        "additional_info": {
            "duration": 4.598453998565674,
            "num_run": 78,
            "train_loss": 1.1276382203057378,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 78,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.00014067527751062886,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3209608913330549,
            "classifier:CustomMLPClassifier:max_iter": 115,
            "classifier:CustomMLPClassifier:num_units": 423,
            "classifier:CustomMLPClassifier:tol": 0.00040712147655856755,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7523271846647767,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24153190778740533,
            "feature_preprocessor:select_percentile_classification:percentile": 60.2236782544326,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.1142931028594147,
        "time": 3.9421780109405518,
        "additional_info": {
            "duration": 3.931968927383423,
            "num_run": 79,
            "train_loss": 1.1405371588737534,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 79,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00035541459717253275,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.315637364256879,
            "classifier:CustomMLPClassifier:max_iter": 115,
            "classifier:CustomMLPClassifier:num_units": 86,
            "classifier:CustomMLPClassifier:tol": 0.004004173579004523,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7488054077013111,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24591807542516195,
            "feature_preprocessor:select_rates_classification:alpha": 0.1,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.1009458206291383,
        "time": 3.278993844985962,
        "additional_info": {
            "duration": 3.2693488597869873,
            "num_run": 80,
            "train_loss": 1.0991649864779403,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 80,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00022132038113260424,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.003897172830013898,
            "classifier:CustomMLPClassifier:max_iter": 332,
            "classifier:CustomMLPClassifier:num_units": 251,
            "classifier:CustomMLPClassifier:tol": 0.0013664741572524631,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.1487562253883513,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 986,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_rates_classification:alpha": 0.28666121922638343,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.1046936423665839,
        "time": 8.631800174713135,
        "additional_info": {
            "duration": 8.62268590927124,
            "num_run": 81,
            "train_loss": 1.0201949159526638,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 81,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.030084155483978626,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5232771451031711,
            "classifier:CustomMLPClassifier:max_iter": 458,
            "classifier:CustomMLPClassifier:num_units": 499,
            "classifier:CustomMLPClassifier:tol": 0.0001499969350822479,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0028525576650270264,
            "feature_preprocessor:select_percentile_classification:percentile": 69.39357339660181,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0955948633379409,
        "time": 3.664503812789917,
        "additional_info": {
            "duration": 3.6555330753326416,
            "num_run": 82,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 82,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.042730238201595105,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00048484445578333567,
            "classifier:CustomMLPClassifier:max_iter": 171,
            "classifier:CustomMLPClassifier:num_units": 164,
            "classifier:CustomMLPClassifier:tol": 1.4197102402318738e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.000578706954152893,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7594620598553359,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1942804463854057,
            "feature_preprocessor:select_percentile_classification:percentile": 83.09705533403006,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.092869986633916,
        "time": 13.309043169021606,
        "additional_info": {
            "duration": 13.298638105392456,
            "num_run": 83,
            "train_loss": 1.0815433902107507,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 83,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0009927967322227481,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.24296007680661544,
            "classifier:CustomMLPClassifier:max_iter": 102,
            "classifier:CustomMLPClassifier:num_units": 152,
            "classifier:CustomMLPClassifier:tol": 0.00017194438022209696,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7801645031714247,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.097543372112613,
        "time": 4.663848876953125,
        "additional_info": {
            "duration": 4.653153896331787,
            "num_run": 84,
            "train_loss": 1.0946035390654434,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 84,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 1.5424031233774204e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.31615553157584064,
            "classifier:CustomMLPClassifier:max_iter": 119,
            "classifier:CustomMLPClassifier:num_units": 424,
            "classifier:CustomMLPClassifier:tol": 2.0360790763586184e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01458848767777134,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.758492917879036,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2703773808942996,
            "feature_preprocessor:select_percentile_classification:percentile": 60.77235437186859,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0955948633379409,
        "time": 2.484578847885132,
        "additional_info": {
            "duration": 2.4748270511627197,
            "num_run": 85,
            "train_loss": 1.0956057973381093,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 85,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.00037036170245272027,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.31168030431352356,
            "classifier:CustomMLPClassifier:max_iter": 329,
            "classifier:CustomMLPClassifier:num_units": 76,
            "classifier:CustomMLPClassifier:tol": 1.076054102572606e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0013303115445927717,
            "feature_preprocessor:select_percentile_classification:percentile": 51.80633022737326,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0858526984048715,
        "time": 2.7231533527374268,
        "additional_info": {
            "duration": 2.713876962661743,
            "num_run": 86,
            "train_loss": 1.0826302718372935,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 86,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 1.994655547241548e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.03851025546254079,
            "classifier:CustomMLPClassifier:max_iter": 422,
            "classifier:CustomMLPClassifier:num_units": 476,
            "classifier:CustomMLPClassifier:tol": 6.16588156804459e-05,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0923330688552213,
        "time": 7.20135760307312,
        "additional_info": {
            "duration": 7.19205904006958,
            "num_run": 87,
            "train_loss": 1.0936933119454317,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 87,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0810244801498237,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.21026365976967804,
            "classifier:CustomMLPClassifier:max_iter": 100,
            "classifier:CustomMLPClassifier:num_units": 340,
            "classifier:CustomMLPClassifier:tol": 0.00018141620205896225,
            "feature_preprocessor:select_rates_classification:alpha": 0.43694705575962217,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.0965775866909204,
        "time": 3.1421077251434326,
        "additional_info": {
            "duration": 3.131842851638794,
            "num_run": 88,
            "train_loss": 1.1148032203637552,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 88,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.00016731104322788927,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3217419655380105,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 108,
            "classifier:CustomMLPClassifier:tol": 0.0030666319728607245,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7579355551006628,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25989618385970753,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.5168619155883789,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 89,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0005898968773488845,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.34546327986017966,
            "classifier:CustomMLPClassifier:max_iter": 405,
            "classifier:CustomMLPClassifier:num_units": 92,
            "classifier:CustomMLPClassifier:tol": 0.00022516709842041775,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9272703214258105,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2637855838292393,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.1009531097402228,
        "time": 5.86518406867981,
        "additional_info": {
            "duration": 5.855810165405273,
            "num_run": 90,
            "train_loss": 1.1019411698504846,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 90,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0002157620414407948,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.1006303654808261,
            "classifier:CustomMLPClassifier:max_iter": 488,
            "classifier:CustomMLPClassifier:num_units": 375,
            "classifier:CustomMLPClassifier:tol": 0.008409456496266964,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 657
        },
        "cost": 0.0,
        "time": 0.17812800407409668,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 91,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.00025632944727116603,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3209608913330549,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 423,
            "classifier:CustomMLPClassifier:tol": 0.0004481177920079007,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.005284571831156461,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7906068241583041,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:select_percentile_classification:percentile": 42.83462930466268,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0981029548144063,
        "time": 4.91729211807251,
        "additional_info": {
            "duration": 4.90791392326355,
            "num_run": 92,
            "train_loss": 1.0962833089622508,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 92,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.00032136796796267516,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3217419655380105,
            "classifier:CustomMLPClassifier:max_iter": 111,
            "classifier:CustomMLPClassifier:num_units": 108,
            "classifier:CustomMLPClassifier:tol": 0.00149012186069019,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7579355551006628,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25859399168373515,
            "feature_preprocessor:select_rates_classification:alpha": 0.11548752420410505,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.1261659387999008,
        "time": 2.3630330562591553,
        "additional_info": {
            "duration": 2.3530421257019043,
            "num_run": 93,
            "train_loss": 1.1169838005010977,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 93,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.030720231458392686,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7158498596812982,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 479,
            "classifier:CustomMLPClassifier:tol": 0.003553708888192647,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7460821902042414,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2395504414449611,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 4.749413013458252,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 94,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 9.44209215035516e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.009117788742224105,
            "classifier:CustomMLPClassifier:max_iter": 192,
            "classifier:CustomMLPClassifier:num_units": 83,
            "classifier:CustomMLPClassifier:tol": 4.8872823680299865e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00026715050354505343,
            "feature_preprocessor:select_percentile_classification:percentile": 48.66181035443786,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.0853226446867377,
        "time": 10.581290006637573,
        "additional_info": {
            "duration": 10.572014093399048,
            "num_run": 95,
            "train_loss": 1.065510554951795,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 95,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 6.469653770688996e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3217419655380105,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 115,
            "classifier:CustomMLPClassifier:tol": 0.0014240485331169252,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7579355551006628,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24277278258242976,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 6.157886981964111,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 96,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0008626628438979221,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5127536398443584,
            "classifier:CustomMLPClassifier:max_iter": 115,
            "classifier:CustomMLPClassifier:num_units": 113,
            "classifier:CustomMLPClassifier:tol": 0.0021862463584337555,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7488054077013111,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24591807542516195,
            "feature_preprocessor:select_percentile_classification:percentile": 50.0,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0955948633379409,
        "time": 2.278956890106201,
        "additional_info": {
            "duration": 2.269012928009033,
            "num_run": 97,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 97,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.010459879524718984,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0014734089239007262,
            "classifier:CustomMLPClassifier:max_iter": 127,
            "classifier:CustomMLPClassifier:num_units": 97,
            "classifier:CustomMLPClassifier:tol": 6.093194151393106e-05,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0967508771413228,
        "time": 70.85569930076599,
        "additional_info": {
            "duration": 70.84579491615295,
            "num_run": 98,
            "train_loss": 1.0400874286908222,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 98,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.00023798836425471012,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00069332467496662,
            "classifier:CustomMLPClassifier:max_iter": 315,
            "classifier:CustomMLPClassifier:num_units": 426,
            "classifier:CustomMLPClassifier:tol": 0.0005548515048503756,
            "feature_preprocessor:select_rates_classification:alpha": 0.42167741020264937,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.0935075151570022,
        "time": 3.599821090698242,
        "additional_info": {
            "duration": 3.590446949005127,
            "num_run": 99,
            "train_loss": 1.1022927876622297,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 99,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 5.578927381192765e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.015763687305150927,
            "classifier:CustomMLPClassifier:max_iter": 480,
            "classifier:CustomMLPClassifier:num_units": 274,
            "classifier:CustomMLPClassifier:tol": 7.491567200395701e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.001072786050870654,
            "feature_preprocessor:select_rates_classification:alpha": 0.2898956736781687,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.0966263809391268,
        "time": 6.581935167312622,
        "additional_info": {
            "duration": 6.5727880001068115,
            "num_run": 100,
            "train_loss": 1.098996937741591,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 100,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.005154683423714125,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00015353585735710076,
            "classifier:CustomMLPClassifier:max_iter": 108,
            "classifier:CustomMLPClassifier:num_units": 132,
            "classifier:CustomMLPClassifier:tol": 0.0038647106449651056,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.004779496694715531,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.847590939525908,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.22268289037968084,
            "feature_preprocessor:select_rates_classification:alpha": 0.3915934604069081,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.095162591182484,
        "time": 2.539503812789917,
        "additional_info": {
            "duration": 2.528994083404541,
            "num_run": 101,
            "train_loss": 1.0847088386364316,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 101,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0026167219312543065,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.9486229374842202,
            "classifier:CustomMLPClassifier:max_iter": 205,
            "classifier:CustomMLPClassifier:num_units": 163,
            "classifier:CustomMLPClassifier:tol": 1.628252176651826e-05,
            "feature_preprocessor:select_percentile_classification:percentile": 85.83311754356589,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.1106193599660559,
        "time": 2.9103660583496094,
        "additional_info": {
            "duration": 2.9007339477539062,
            "num_run": 102,
            "train_loss": 1.0975855714988603,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 102,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0008335839508643628,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0015871240401122268,
            "classifier:CustomMLPClassifier:max_iter": 432,
            "classifier:CustomMLPClassifier:num_units": 257,
            "classifier:CustomMLPClassifier:tol": 0.0017024494096960527,
            "feature_preprocessor:select_rates_classification:alpha": 0.4356471576478331,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.1067868088003,
        "time": 3.173398733139038,
        "additional_info": {
            "duration": 3.1643667221069336,
            "num_run": 103,
            "train_loss": 1.1021783742927118,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 103,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0017903456065085064,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.6394601862707308,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 103,
            "classifier:CustomMLPClassifier:tol": 9.844753868569859e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.1297173026010427,
        "time": 6.066883087158203,
        "additional_info": {
            "duration": 6.057564735412598,
            "num_run": 104,
            "train_loss": 1.139478947469257,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 104,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 1.3115184715877018e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00029888791695245804,
            "classifier:CustomMLPClassifier:max_iter": 301,
            "classifier:CustomMLPClassifier:num_units": 250,
            "classifier:CustomMLPClassifier:tol": 9.776164079551763e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0013880089049018499,
            "feature_preprocessor:select_percentile_classification:percentile": 89.52871643902039,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.1087071852991806,
        "time": 3.3353869915008545,
        "additional_info": {
            "duration": 3.326061964035034,
            "num_run": 105,
            "train_loss": 1.0838350201732583,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 105,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.022891713325876886,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5561608512573178,
            "classifier:CustomMLPClassifier:max_iter": 152,
            "classifier:CustomMLPClassifier:num_units": 446,
            "classifier:CustomMLPClassifier:tol": 0.000218350787177781,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.002310702808458064,
            "feature_preprocessor:select_rates_classification:alpha": 0.29735038928165053,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.0884291010253246,
        "time": 2.55798077583313,
        "additional_info": {
            "duration": 2.5490000247955322,
            "num_run": 106,
            "train_loss": 1.0822327174499775,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 106,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.00016189697880298747,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.8253495092806649,
            "classifier:CustomMLPClassifier:max_iter": 356,
            "classifier:CustomMLPClassifier:num_units": 115,
            "classifier:CustomMLPClassifier:tol": 3.421272484854276e-05,
            "feature_preprocessor:select_rates_classification:alpha": 0.2356254939458927,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.1007086380664552,
        "time": 3.7590219974517822,
        "additional_info": {
            "duration": 3.749704122543335,
            "num_run": 107,
            "train_loss": 1.1080296478060387,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 107,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0003108627042661528,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.34640522970459464,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 110,
            "classifier:CustomMLPClassifier:tol": 0.004707339032125074,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7365935226655402,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25989618385970753,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0979235759750097,
        "time": 6.403109788894653,
        "additional_info": {
            "duration": 6.392492055892944,
            "num_run": 108,
            "train_loss": 1.1008242449892838,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 108,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0004871419720990926,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5438189912696814,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 132,
            "classifier:CustomMLPClassifier:tol": 0.008185192110914724,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.02302478165095796,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.976618093187674,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2433620502339987,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 3.6235320568084717,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 109,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 4.0416210946541065e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00199481571649769,
            "classifier:CustomMLPClassifier:max_iter": 242,
            "classifier:CustomMLPClassifier:num_units": 463,
            "classifier:CustomMLPClassifier:tol": 0.0015569551366179245,
            "feature_preprocessor:select_percentile_classification:percentile": 37.19296199018483,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0953918135511491,
        "time": 4.606632947921753,
        "additional_info": {
            "duration": 4.596947193145752,
            "num_run": 110,
            "train_loss": 1.081176655508364,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 110,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.07555056377793726,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4170113744987401,
            "classifier:CustomMLPClassifier:max_iter": 486,
            "classifier:CustomMLPClassifier:num_units": 111,
            "classifier:CustomMLPClassifier:tol": 0.004735871933484496,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.018160018684974667,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.75,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2431924712517235,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.101969418429863,
        "time": 4.710116147994995,
        "additional_info": {
            "duration": 4.700460910797119,
            "num_run": 111,
            "train_loss": 1.1050316818025712,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 111,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0007432078312826064,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.31702275381369405,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 277,
            "classifier:CustomMLPClassifier:tol": 1.963761732634523e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8793261338017788,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24293270269192127,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 5.3299031257629395,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 112,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 1.0868721752299399e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5175897406362227,
            "classifier:CustomMLPClassifier:max_iter": 211,
            "classifier:CustomMLPClassifier:num_units": 433,
            "classifier:CustomMLPClassifier:tol": 1.790991126159541e-05,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.11304684731383,
        "time": 6.07401704788208,
        "additional_info": {
            "duration": 6.064702033996582,
            "num_run": 113,
            "train_loss": 1.1191055036461577,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 113,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00032931926142601306,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.9078374264210647,
            "classifier:CustomMLPClassifier:max_iter": 117,
            "classifier:CustomMLPClassifier:num_units": 423,
            "classifier:CustomMLPClassifier:tol": 0.0004481177920079007,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7429337658713244,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24421191817010002,
            "feature_preprocessor:select_rates_classification:alpha": 0.1,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fpr"
        },
        "cost": 1.0955948633379409,
        "time": 3.470211982727051,
        "additional_info": {
            "duration": 3.4607810974121094,
            "num_run": 114,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 114,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0011781972146900927,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.003360971526779656,
            "classifier:CustomMLPClassifier:max_iter": 330,
            "classifier:CustomMLPClassifier:num_units": 183,
            "classifier:CustomMLPClassifier:tol": 0.00015804048190926783,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.02096243481560644,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.116254297881357,
        "time": 22.471192121505737,
        "additional_info": {
            "duration": 22.460126876831055,
            "num_run": 115,
            "train_loss": 1.0034451121786472,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 115,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0004142621699196809,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.32464067376492617,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 120,
            "classifier:CustomMLPClassifier:tol": 0.006620262767998622,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9749286936134157,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.238793684977138,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 3.4714739322662354,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 116,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0003554540809376259,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4858842753757322,
            "classifier:CustomMLPClassifier:max_iter": 115,
            "classifier:CustomMLPClassifier:num_units": 95,
            "classifier:CustomMLPClassifier:tol": 0.0019062953676682731,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.007366078565470722,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8042608305703377,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23799420392495302,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.3009817600250244,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 117,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 1.8212952063757066e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.006823921232288007,
            "classifier:CustomMLPClassifier:max_iter": 155,
            "classifier:CustomMLPClassifier:num_units": 76,
            "classifier:CustomMLPClassifier:tol": 0.0014005994676046386,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.2544601419870057,
            "feature_preprocessor:select_rates_classification:alpha": 0.05451152514996875,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.0788726882150734,
        "time": 3.431128740310669,
        "additional_info": {
            "duration": 3.419674873352051,
            "num_run": 118,
            "train_loss": 1.0641069943928678,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 118,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.004959744568698064,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.003686151932232205,
            "classifier:CustomMLPClassifier:max_iter": 414,
            "classifier:CustomMLPClassifier:num_units": 306,
            "classifier:CustomMLPClassifier:tol": 0.0018434284974972082,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0026354641001053573,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1829
        },
        "cost": 0.0,
        "time": 0.4345738887786865,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 119,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.000786425301352757,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4858842753757322,
            "classifier:CustomMLPClassifier:max_iter": 100,
            "classifier:CustomMLPClassifier:num_units": 95,
            "classifier:CustomMLPClassifier:tol": 0.0019062953676682731,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8058077040398609,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23799420392495302,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.240678071975708,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 120,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.030783569631676104,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0101612205018546,
            "classifier:CustomMLPClassifier:max_iter": 290,
            "classifier:CustomMLPClassifier:num_units": 460,
            "classifier:CustomMLPClassifier:tol": 0.0021175876036144434,
            "feature_preprocessor:select_percentile_classification:percentile": 4.407914456488527,
            "feature_preprocessor:select_percentile_classification:score_func": "f_classif"
        },
        "cost": 1.092025735246887,
        "time": 2.645117998123169,
        "additional_info": {
            "duration": 2.6358518600463867,
            "num_run": 121,
            "train_loss": 1.0933608020044683,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 121,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0003753953646726645,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.30617404140153703,
            "classifier:CustomMLPClassifier:max_iter": 116,
            "classifier:CustomMLPClassifier:num_units": 473,
            "classifier:CustomMLPClassifier:tol": 0.0004148319260690934,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.009546246519026974,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7523271846647767,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2380567537940251,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 4.938024282455444,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 613, in fit_predict_and_loss\n    optimization_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 122,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00017711820236605028,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.15787261178379666,
            "classifier:CustomMLPClassifier:max_iter": 119,
            "classifier:CustomMLPClassifier:num_units": 132,
            "classifier:CustomMLPClassifier:tol": 0.008185192110914724,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9580751057774127,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2433620502339987,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 7.237567186355591,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 123,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.016409122102244603,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0009309074410484819,
            "classifier:CustomMLPClassifier:max_iter": 180,
            "classifier:CustomMLPClassifier:num_units": 491,
            "classifier:CustomMLPClassifier:tol": 0.0007760341809765213,
            "feature_preprocessor:select_rates_classification:alpha": 0.12825255962572246,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.095317269856685,
        "time": 2.7793898582458496,
        "additional_info": {
            "duration": 2.770015001296997,
            "num_run": 124,
            "train_loss": 1.0880346304430502,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 124,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0004142621699196809,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.5472860675476355,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 120,
            "classifier:CustomMLPClassifier:tol": 0.006692094011342771,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9690764047224882,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.238793684977138,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0850333967055816,
        "time": 4.189987897872925,
        "additional_info": {
            "duration": 4.1805853843688965,
            "num_run": 125,
            "train_loss": 1.0889775805032542,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 125,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00020679558287447464,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4498615600159068,
            "classifier:CustomMLPClassifier:max_iter": 104,
            "classifier:CustomMLPClassifier:num_units": 135,
            "classifier:CustomMLPClassifier:tol": 0.007737957487971103,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9447662500522922,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23902538322862893,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 143.8142490386963,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 126,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 4.625179171905214e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.002292108313766274,
            "classifier:CustomMLPClassifier:max_iter": 258,
            "classifier:CustomMLPClassifier:num_units": 211,
            "classifier:CustomMLPClassifier:tol": 0.00010049969526503111,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 640
        },
        "cost": 0.0,
        "time": 0.12411093711853027,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 127,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 2.8902537032138406e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0003774632519194646,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 335,
            "classifier:CustomMLPClassifier:tol": 1.3224960620015688e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9703845879841055,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.26708127405367965,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.086567913649351,
        "time": 36.66578197479248,
        "additional_info": {
            "duration": 36.65598702430725,
            "num_run": 128,
            "train_loss": 1.081809529303583,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 128,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00022665581524275165,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4817294151387713,
            "classifier:CustomMLPClassifier:max_iter": 120,
            "classifier:CustomMLPClassifier:num_units": 386,
            "classifier:CustomMLPClassifier:tol": 0.0004481177920079007,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7783853100993529,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24305680394721166,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.34349679946899414,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 129,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.08891449371115275,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.01819097566060933,
            "classifier:CustomMLPClassifier:max_iter": 187,
            "classifier:CustomMLPClassifier:num_units": 447,
            "classifier:CustomMLPClassifier:tol": 0.000397688671636664,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0008955134255556454,
            "feature_preprocessor:select_percentile_classification:percentile": 88.11198410424839,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0910898033472356,
        "time": 46.00819683074951,
        "additional_info": {
            "duration": 45.99877715110779,
            "num_run": 130,
            "train_loss": 1.082600523455172,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 130,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.02012643501579757,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.10719437233199691,
            "classifier:CustomMLPClassifier:max_iter": 276,
            "classifier:CustomMLPClassifier:num_units": 381,
            "classifier:CustomMLPClassifier:tol": 0.00014903008598587974,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0007712026070315363,
            "feature_preprocessor:select_rates_classification:alpha": 0.08588361952270165,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.09708415395007,
        "time": 11.929015874862671,
        "additional_info": {
            "duration": 11.918991088867188,
            "num_run": 131,
            "train_loss": 1.1033981964742239,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 131,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 2.4460476662829975e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0007783223050002636,
            "classifier:CustomMLPClassifier:max_iter": 481,
            "classifier:CustomMLPClassifier:num_units": 244,
            "classifier:CustomMLPClassifier:tol": 0.0007670517872926317,
            "feature_preprocessor:select_rates_classification:alpha": 0.48392800615853004,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.105017090987567,
        "time": 10.204683065414429,
        "additional_info": {
            "duration": 10.19465184211731,
            "num_run": 132,
            "train_loss": 1.1045679896196836,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 132,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.00010573731243881845,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.8670865397442858,
            "classifier:CustomMLPClassifier:max_iter": 110,
            "classifier:CustomMLPClassifier:num_units": 448,
            "classifier:CustomMLPClassifier:tol": 0.004088720790756571,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00034175649035356637,
            "feature_preprocessor:select_rates_classification:alpha": 0.31273580672677054,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.0955948633379409,
        "time": 10.95491909980774,
        "additional_info": {
            "duration": 10.944499015808105,
            "num_run": 133,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 133,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0005308199526105975,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.34486928329978245,
            "classifier:CustomMLPClassifier:max_iter": 363,
            "classifier:CustomMLPClassifier:num_units": 347,
            "classifier:CustomMLPClassifier:tol": 0.0014751480157054585,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7773739397676418,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24299255673056236,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 175.66195106506348,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 134,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00023324686447956256,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.09909814092303312,
            "classifier:CustomMLPClassifier:max_iter": 119,
            "classifier:CustomMLPClassifier:num_units": 132,
            "classifier:CustomMLPClassifier:tol": 0.00789392837948232,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9437262948066442,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24357813814642298,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0955948633379409,
        "time": 24.77096128463745,
        "additional_info": {
            "duration": 24.758424043655396,
            "num_run": 135,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 135,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.0002473766291083535,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.2240485226588316,
            "classifier:CustomMLPClassifier:max_iter": 290,
            "classifier:CustomMLPClassifier:num_units": 325,
            "classifier:CustomMLPClassifier:tol": 0.0015726336458841922,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9155128452705221,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2877643780191193,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1069
        },
        "cost": 0.0,
        "time": 0.15694785118103027,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 136,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 9.49159532776564e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.12677894076859117,
            "classifier:CustomMLPClassifier:max_iter": 131,
            "classifier:CustomMLPClassifier:num_units": 110,
            "classifier:CustomMLPClassifier:tol": 0.00016052723998394346,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0024376628340745748,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.126396961175863,
        "time": 18.54363226890564,
        "additional_info": {
            "duration": 18.533282041549683,
            "num_run": 137,
            "train_loss": 1.0902703520001105,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 137,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0003753953646726645,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.40589952835905774,
            "classifier:CustomMLPClassifier:max_iter": 116,
            "classifier:CustomMLPClassifier:num_units": 460,
            "classifier:CustomMLPClassifier:tol": 0.000302973354894142,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.751047556149148,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.20523781159929522,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.41971778869628906,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 138,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.04949382372884233,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7776087739373313,
            "classifier:CustomMLPClassifier:max_iter": 112,
            "classifier:CustomMLPClassifier:num_units": 490,
            "classifier:CustomMLPClassifier:tol": 0.0057129530251350145,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7503929657259805,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2395504414449611,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 20.178858995437622,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 139,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.020758158651227328,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.2170162784856112,
            "classifier:CustomMLPClassifier:max_iter": 442,
            "classifier:CustomMLPClassifier:num_units": 375,
            "classifier:CustomMLPClassifier:tol": 0.0013882008911088608,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.04671970726741514,
            "feature_preprocessor:select_percentile_classification:percentile": 38.05152135052547,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0942110734430477,
        "time": 22.947223901748657,
        "additional_info": {
            "duration": 22.937515020370483,
            "num_run": 140,
            "train_loss": 1.090471194337586,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 140,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 2.5847795873541364e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0024161850025254355,
            "classifier:CustomMLPClassifier:max_iter": 408,
            "classifier:CustomMLPClassifier:num_units": 108,
            "classifier:CustomMLPClassifier:tol": 0.00020449619084779533,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00975967920063511,
            "feature_preprocessor:select_percentile_classification:percentile": 24.605841345434396,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0898401885152085,
        "time": 6.2251482009887695,
        "additional_info": {
            "duration": 6.215231895446777,
            "num_run": 141,
            "train_loss": 1.0940321820027576,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 141,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 5.619598280491774e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0004552239800429503,
            "classifier:CustomMLPClassifier:max_iter": 469,
            "classifier:CustomMLPClassifier:num_units": 320,
            "classifier:CustomMLPClassifier:tol": 0.00011267061666188902,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.455372527936532,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7693563312905025,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.17838305572234872,
            "feature_preprocessor:select_rates_classification:alpha": 0.19588805036981763,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 0.0,
        "time": 8.738436937332153,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 142,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00011051084363586013,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4858842753757322,
            "classifier:CustomMLPClassifier:max_iter": 140,
            "classifier:CustomMLPClassifier:num_units": 128,
            "classifier:CustomMLPClassifier:tol": 0.001610616263063992,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8058077040398609,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2548781414817488,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 17.983081340789795,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 143,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 1.0711923517125621e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00036634403868864224,
            "classifier:CustomMLPClassifier:max_iter": 469,
            "classifier:CustomMLPClassifier:num_units": 347,
            "classifier:CustomMLPClassifier:tol": 6.248989216075595e-05,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 207,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1058
        },
        "cost": 0.0,
        "time": 0.1760861873626709,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 144,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 2.411277304909287e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00044682719960207197,
            "classifier:CustomMLPClassifier:max_iter": 249,
            "classifier:CustomMLPClassifier:num_units": 293,
            "classifier:CustomMLPClassifier:tol": 0.0048739309223756406,
            "feature_preprocessor:select_rates_classification:alpha": 0.23841294099461907,
            "feature_preprocessor:select_rates_classification:score_func": "chi2",
            "feature_preprocessor:select_rates_classification:mode": "fdr"
        },
        "cost": 1.0953677392594698,
        "time": 9.161400079727173,
        "additional_info": {
            "duration": 9.151456832885742,
            "num_run": 145,
            "train_loss": 1.077794438656837,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 145,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0014032213155399217,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.319006218369515,
            "classifier:CustomMLPClassifier:max_iter": 116,
            "classifier:CustomMLPClassifier:num_units": 143,
            "classifier:CustomMLPClassifier:tol": 0.00014861276587676466,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7613156538074917,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25089723991873825,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 119.47663497924805,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 146,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 3.5721328821964754e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.012894620922091678,
            "classifier:CustomMLPClassifier:max_iter": 359,
            "classifier:CustomMLPClassifier:num_units": 105,
            "classifier:CustomMLPClassifier:tol": 1.1010815418973195e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0015174020758627748,
            "feature_preprocessor:select_percentile_classification:percentile": 54.728665617267765,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0964248936942849,
        "time": 22.3033549785614,
        "additional_info": {
            "duration": 22.293216943740845,
            "num_run": 147,
            "train_loss": 1.0141368044387984,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 147,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.02665775871974721,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.004053096376331351,
            "classifier:CustomMLPClassifier:max_iter": 277,
            "classifier:CustomMLPClassifier:num_units": 468,
            "classifier:CustomMLPClassifier:tol": 0.0047802180206633895,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01063745141496632,
            "feature_preprocessor:select_percentile_classification:percentile": 54.0699350462776,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0801818477084442,
        "time": 6.778630971908569,
        "additional_info": {
            "duration": 6.769392728805542,
            "num_run": 148,
            "train_loss": 1.0641840263045432,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 148,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0001813486186518585,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4858842753757322,
            "classifier:CustomMLPClassifier:max_iter": 100,
            "classifier:CustomMLPClassifier:num_units": 95,
            "classifier:CustomMLPClassifier:tol": 0.0017565540311387455,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8174547798477911,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.22359378405670005,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 14.034657955169678,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 149,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 6.776052972307652e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.36833933624816056,
            "classifier:CustomMLPClassifier:max_iter": 164,
            "classifier:CustomMLPClassifier:num_units": 202,
            "classifier:CustomMLPClassifier:tol": 8.174741478572998e-05,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1163
        },
        "cost": 0.0,
        "time": 0.15592503547668457,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 150,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00014269444312470995,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.31028263560919805,
            "classifier:CustomMLPClassifier:max_iter": 116,
            "classifier:CustomMLPClassifier:num_units": 435,
            "classifier:CustomMLPClassifier:tol": 0.0006374022519724797,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010088541944049796,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7819604156997936,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.18384667087341885,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.2595551013946533,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 151,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0008963410204579961,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.43322244017112205,
            "classifier:CustomMLPClassifier:max_iter": 127,
            "classifier:CustomMLPClassifier:num_units": 97,
            "classifier:CustomMLPClassifier:tol": 0.0027832973584073733,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7879079129063697,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23261903822485544,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 16.7935471534729,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 152,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0023304958245815555,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.014652382347400995,
            "classifier:CustomMLPClassifier:max_iter": 171,
            "classifier:CustomMLPClassifier:num_units": 86,
            "classifier:CustomMLPClassifier:tol": 0.007856249304463341,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.3520095328639129,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.0865949678972369,
        "time": 24.220055103302002,
        "additional_info": {
            "duration": 24.20709776878357,
            "num_run": 153,
            "train_loss": 1.0637700640323227,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 153,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0007022670693142532,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7889924517301005,
            "classifier:CustomMLPClassifier:max_iter": 134,
            "classifier:CustomMLPClassifier:num_units": 81,
            "classifier:CustomMLPClassifier:tol": 0.0016196820191507401,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0007611571716410131,
            "feature_preprocessor:select_percentile_classification:percentile": 1.7042992338495313,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.0955948633379409,
        "time": 3.558595895767212,
        "additional_info": {
            "duration": 3.5487561225891113,
            "num_run": 154,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 154,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00046416365843101134,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3346555301316446,
            "classifier:CustomMLPClassifier:max_iter": 138,
            "classifier:CustomMLPClassifier:num_units": 454,
            "classifier:CustomMLPClassifier:tol": 0.00031642516775379816,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7523271846647767,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2380567537940251,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 7.727557897567749,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 155,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0004142621699196809,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7041815241941235,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 131,
            "classifier:CustomMLPClassifier:tol": 0.006620262767998622,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.9282008998054689,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.19939734496403835,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 8.193394184112549,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 156,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 5.950000075554383e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0002558304793341611,
            "classifier:CustomMLPClassifier:max_iter": 361,
            "classifier:CustomMLPClassifier:num_units": 326,
            "classifier:CustomMLPClassifier:tol": 0.003492210848008235,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.016172442405883496,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 933
        },
        "cost": 0.0,
        "time": 0.1405029296875,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 157,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.000374402294871632,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.29667822241753494,
            "classifier:CustomMLPClassifier:max_iter": 167,
            "classifier:CustomMLPClassifier:num_units": 463,
            "classifier:CustomMLPClassifier:tol": 0.00022548538059772368,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7569855917863184,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2380567537940251,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.22429680824279785,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 158,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.005799371926525851,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.13743238566021573,
            "classifier:CustomMLPClassifier:max_iter": 202,
            "classifier:CustomMLPClassifier:num_units": 331,
            "classifier:CustomMLPClassifier:tol": 0.0016638237098751743,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.09207070467706449,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1199,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1066
        },
        "cost": 0.0,
        "time": 0.27088117599487305,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 159,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.00012023506638921582,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.003041573452686005,
            "classifier:CustomMLPClassifier:max_iter": 309,
            "classifier:CustomMLPClassifier:num_units": 225,
            "classifier:CustomMLPClassifier:tol": 0.0005277129385043886,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.015715225244642583,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1473,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:select_percentile_classification:percentile": 45.62988706541767,
            "feature_preprocessor:select_percentile_classification:score_func": "mutual_info"
        },
        "cost": 1.1046562600089993,
        "time": 8.08381700515747,
        "additional_info": {
            "duration": 8.07432508468628,
            "num_run": 160,
            "train_loss": 1.0932314650646915,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 160,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_percentile_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.005983057473396265,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.00017804947634156014,
            "classifier:CustomMLPClassifier:max_iter": 120,
            "classifier:CustomMLPClassifier:num_units": 300,
            "classifier:CustomMLPClassifier:tol": 0.001998124295433648,
            "feature_preprocessor:select_percentile_classification:percentile": 78.98802246338276,
            "feature_preprocessor:select_percentile_classification:score_func": "chi2"
        },
        "cost": 1.0946747127297138,
        "time": 7.7789411544799805,
        "additional_info": {
            "duration": 7.768193960189819,
            "num_run": 161,
            "train_loss": 1.0858808242214215,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 161,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 7.082421372060135e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.591382691901045,
            "classifier:CustomMLPClassifier:max_iter": 149,
            "classifier:CustomMLPClassifier:num_units": 162,
            "classifier:CustomMLPClassifier:tol": 9.562542155901065e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7500985069763965,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.23460125923156738,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 162,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.00018235102404989907,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.2871002654210659,
            "classifier:CustomMLPClassifier:max_iter": 380,
            "classifier:CustomMLPClassifier:num_units": 320,
            "classifier:CustomMLPClassifier:tol": 2.381385767731412e-05,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 775
        },
        "cost": 0.0,
        "time": 0.15714097023010254,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 163,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 7.301557368206652e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.2598929335083033,
            "classifier:CustomMLPClassifier:max_iter": 119,
            "classifier:CustomMLPClassifier:num_units": 385,
            "classifier:CustomMLPClassifier:tol": 0.0006374022519724797,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7506395782736393,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.1698913558146677,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.2897332963265145,
        "time": 10.84476089477539,
        "additional_info": {
            "duration": 10.835124015808105,
            "num_run": 164,
            "train_loss": 1.2798207945789644,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 164,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 0.04949382372884233,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7979698171504895,
            "classifier:CustomMLPClassifier:max_iter": 164,
            "classifier:CustomMLPClassifier:num_units": 495,
            "classifier:CustomMLPClassifier:tol": 0.0057129530251350145,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0051558406198594815,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7503929657259805,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2395504414449611,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.098009833022895,
        "time": 11.527454853057861,
        "additional_info": {
            "duration": 11.516776084899902,
            "num_run": 165,
            "train_loss": 1.1016937886831577,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 165,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 4.548176644609571e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.007069257043352001,
            "classifier:CustomMLPClassifier:max_iter": 249,
            "classifier:CustomMLPClassifier:num_units": 321,
            "classifier:CustomMLPClassifier:tol": 0.00010106528500359194,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.019252939949428276,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.855157539138801,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.17851448281024368,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 269
        },
        "cost": 0.0,
        "time": 0.12807321548461914,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 166,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "tanh",
            "classifier:CustomMLPClassifier:alpha": 4.084561674950116e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.001724951068498008,
            "classifier:CustomMLPClassifier:max_iter": 316,
            "classifier:CustomMLPClassifier:num_units": 118,
            "classifier:CustomMLPClassifier:tol": 4.038573916248188e-05,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7113485658006933,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.13721479864276634,
            "feature_preprocessor:select_rates_classification:alpha": 0.1828006213038315,
            "feature_preprocessor:select_rates_classification:score_func": "f_classif",
            "feature_preprocessor:select_rates_classification:mode": "fwe"
        },
        "cost": 1.082551560295331,
        "time": 20.423285007476807,
        "additional_info": {
            "duration": 20.41334080696106,
            "num_run": 167,
            "train_loss": 1.0834986693706747,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 167,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 7.082421372060135e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4544667309378971,
            "classifier:CustomMLPClassifier:max_iter": 109,
            "classifier:CustomMLPClassifier:num_units": 154,
            "classifier:CustomMLPClassifier:tol": 0.00013432302752804275,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7500985069763965,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 9.865030765533447,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 168,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.019127970650341556,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3520746924941831,
            "classifier:CustomMLPClassifier:max_iter": 360,
            "classifier:CustomMLPClassifier:num_units": 454,
            "classifier:CustomMLPClassifier:tol": 0.003257521966787028,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7500955349232951,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.12275721619853318,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.26373815536499023,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 169,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00022134480325399045,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.4293096733801354,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 120,
            "classifier:CustomMLPClassifier:tol": 0.007981141220076258,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.746354386454363,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2512817541687887,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.2690761089324951,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 170,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "standardize",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.00012652602588936147,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.03442463810892358,
            "classifier:CustomMLPClassifier:max_iter": 283,
            "classifier:CustomMLPClassifier:num_units": 231,
            "classifier:CustomMLPClassifier:tol": 1.3828047596539503e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0018517112323588865,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 954
        },
        "cost": 0.0,
        "time": 0.13385009765625,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 171,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00035529246873269724,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.21470142498290049,
            "classifier:CustomMLPClassifier:max_iter": 121,
            "classifier:CustomMLPClassifier:num_units": 489,
            "classifier:CustomMLPClassifier:tol": 0.0006935527469841032,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.019670224979810982,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7500164262386996,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2380567537940251,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 14.72329592704773,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 172,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "normalize",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0002952123635901531,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.6528809151341871,
            "classifier:CustomMLPClassifier:max_iter": 110,
            "classifier:CustomMLPClassifier:num_units": 461,
            "classifier:CustomMLPClassifier:tol": 0.00010615279567263063,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.0005544711034526561,
            "feature_preprocessor:select_rates_classification:alpha": 0.3458925609444933,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.0955948633379409,
        "time": 6.522150993347168,
        "additional_info": {
            "duration": 6.512476921081543,
            "num_run": 173,
            "train_loss": 1.0956583568748537,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 173,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "minmax",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "identity",
            "classifier:CustomMLPClassifier:alpha": 0.0014576578974498948,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0004058994360095686,
            "classifier:CustomMLPClassifier:max_iter": 204,
            "classifier:CustomMLPClassifier:num_units": 321,
            "classifier:CustomMLPClassifier:tol": 6.723912685169396e-05,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.1007963870455024,
        "time": 28.44798183441162,
        "additional_info": {
            "duration": 28.43683409690857,
            "num_run": 174,
            "train_loss": 1.0777000371357373,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 174,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.04949382372884233,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7776087739373313,
            "classifier:CustomMLPClassifier:max_iter": 112,
            "classifier:CustomMLPClassifier:num_units": 472,
            "classifier:CustomMLPClassifier:tol": 0.003637447767751545,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01109154490522241,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7353557337823755,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.21710005694921036,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 1.1183551502019393,
        "time": 14.564840316772461,
        "additional_info": {
            "duration": 14.55483889579773,
            "num_run": 175,
            "train_loss": 1.1138259782089555,
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 175,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 6.173949240569943e-06,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.7136621539485468,
            "classifier:CustomMLPClassifier:max_iter": 149,
            "classifier:CustomMLPClassifier:num_units": 161,
            "classifier:CustomMLPClassifier:tol": 0.00010705351770794126,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7500985069763965,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.25,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.2561359405517578,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 46, in fit\n    self.preprocessor.fit(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 720, in fit\n    self._fit_transform(X, compute_sources=False)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 647, in _fit_transform\n    W, n_iter = _ica_par(X1, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 118, in _ica_par\n    W1 = _sym_decorrelation(np.dot(gwtx, X.T) / p_ - g_wtx[:, np.newaxis] * W)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 61, in _sym_decorrelation\n    s, u = linalg.eigh(np.dot(W, W.T))\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/linalg/_decomp.py\", line 460, in eigh\n    a1 = _asarray_validated(a, check_finite=check_finite)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/scipy/_lib/_util.py\", line 240, in _asarray_validated\n    a = toarray(a)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/numpy/lib/function_base.py\", line 627, in asarray_chkfinite\n    raise ValueError(\nValueError: array must not contain infs or NaNs\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/base.py\", line 444, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 49, in fit\n    raise ValueError(\nValueError: Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738\n",
            "error": "ValueError('Bug in scikit-learn: https://github.com/scikit-learn/scikit-learn/pull/2738')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 176,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00034505652439176406,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0005958619982179224,
            "classifier:CustomMLPClassifier:max_iter": 245,
            "classifier:CustomMLPClassifier:num_units": 314,
            "classifier:CustomMLPClassifier:tol": 0.00013517368278742622,
            "feature_preprocessor:select_rates_classification:alpha": 0.20801515787372513,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.0964987137337174,
        "time": 5.708160161972046,
        "additional_info": {
            "duration": 5.698082208633423,
            "num_run": 177,
            "train_loss": 1.098996937741591,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 177,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.02204366972493218,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.28238559600834146,
            "classifier:CustomMLPClassifier:max_iter": 453,
            "classifier:CustomMLPClassifier:num_units": 337,
            "classifier:CustomMLPClassifier:tol": 8.679536242245362e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.00021774447167347688,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.757434508043956,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23033439005505185,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 10.508538961410522,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 613, in fit_predict_and_loss\n    optimization_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 178,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0009582764640642339,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.0006363924958866884,
            "classifier:CustomMLPClassifier:max_iter": 109,
            "classifier:CustomMLPClassifier:num_units": 438,
            "classifier:CustomMLPClassifier:tol": 0.008540752649890602,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1791,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "uniform",
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "exp",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1413
        },
        "cost": 0.0,
        "time": 0.22676610946655273,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 179,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "none",
            "feature_preprocessor:__choice__": "select_rates_classification",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.004102863298229502,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3859930789567999,
            "classifier:CustomMLPClassifier:max_iter": 469,
            "classifier:CustomMLPClassifier:num_units": 182,
            "classifier:CustomMLPClassifier:tol": 3.210159723864403e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.01845861487872392,
            "feature_preprocessor:select_rates_classification:alpha": 0.48636098029873615,
            "feature_preprocessor:select_rates_classification:score_func": "mutual_info_classif"
        },
        "cost": 1.107730401811882,
        "time": 5.395678997039795,
        "additional_info": {
            "duration": 5.385299921035767,
            "num_run": 180,
            "train_loss": 1.1112770201846929,
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 180,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "power_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.000898526483985813,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.477508189037362,
            "classifier:CustomMLPClassifier:max_iter": 285,
            "classifier:CustomMLPClassifier:num_units": 403,
            "classifier:CustomMLPClassifier:tol": 0.0018567803424744647,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 1337
        },
        "cost": 0.0,
        "time": 0.4421350955963135,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search"
        }
    },
    {
        "config_id": 181,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.000701682077468262,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.28144499324128325,
            "classifier:CustomMLPClassifier:max_iter": 127,
            "classifier:CustomMLPClassifier:num_units": 80,
            "classifier:CustomMLPClassifier:tol": 0.0027832973584073733,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7924319182243879,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23261903822485544,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 14.024459838867188,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 182,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "median",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.04949382372884233,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.39587984538688964,
            "classifier:CustomMLPClassifier:max_iter": 112,
            "classifier:CustomMLPClassifier:num_units": 490,
            "classifier:CustomMLPClassifier:tol": 0.0053899784612429745,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.009973859309863218,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7569765676910831,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.27518910223663956,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 9.168569803237915,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 183,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.00011224814206469769,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.12596926772775346,
            "classifier:CustomMLPClassifier:max_iter": 151,
            "classifier:CustomMLPClassifier:num_units": 450,
            "classifier:CustomMLPClassifier:tol": 0.0006935527469841032,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7492327462986547,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.2380567537940251,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 15.032263040542603,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 603, in fit_predict_and_loss\n    train_loss = self._loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 344, in _loss\n    return calculate_loss(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 484, in calculate_loss\n    score = calculate_score(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 449, in calculate_score\n    return _compute_scorer(metric, prediction, solution, task_type)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 573, in _compute_scorer\n    score = metric(solution, prediction)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/metrics/__init__.py\", line 104, in __call__\n    return self._sign * self._score_func(y_true, y_pred, **self._kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/evaluation/bank/bank_mlp_AOD_age.py\", line 395, in accuracy\n    disparate_impact(subset_data_orig_train, prediction, protected_attr),\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/upgrade/metric.py\", line 27, in disparate_impact\n    math.log(\nValueError: math domain error\n",
            "error": "ValueError('math domain error')",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 184,
        "configuration": {
            "balancing:strategy": "weighting",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "no_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "quantile_transformer",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "logistic",
            "classifier:CustomMLPClassifier:alpha": 0.0035259310065726703,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.44336002572277833,
            "classifier:CustomMLPClassifier:max_iter": 134,
            "classifier:CustomMLPClassifier:num_units": 258,
            "classifier:CustomMLPClassifier:tol": 3.310168360556854e-05,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.03187391978607113,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles": 1987,
            "data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution": "normal",
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "True",
            "feature_preprocessor:fast_ica:n_components": 13
        },
        "cost": 0.0,
        "time": 0.2705080509185791,
        "additional_info": {
            "traceback": "Traceback (most recent call last):\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/__init__.py\", line 41, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 1283, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 558, in fit_predict_and_loss\n    ) = self._partial_fit_and_predict_standard(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/train_evaluator.py\", line 945, in _partial_fit_and_predict_standard\n    _fit_and_suppress_warnings(\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/evaluation/abstract_evaluator.py\", line 174, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 104, in fit\n    X, fit_params = self.fit_transformer(X, y, **fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/classification.py\", line 116, in fit_transformer\n    X, fit_params = super().fit_transformer(X, y, fit_params=fit_params)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/base.py\", line 116, in fit_transformer\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 370, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/joblib/memory.py\", line 349, in __call__\n    return self.func(*args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/pipeline.py\", line 952, in _fit_transform_one\n    res = transformer.fit(X, y, **fit_params).transform(X)\n  File \"/Users/sayannath/Projects/Fair-AutoML/autosklearn/pipeline/components/feature_preprocessing/fast_ica.py\", line 59, in transform\n    return self.preprocessor.transform(X)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/_set_output.py\", line 140, in wrapped\n    data_to_wrap = f(self, X, *args, **kwargs)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/decomposition/_fastica.py\", line 741, in transform\n    check_is_fitted(self)\n  File \"/Users/sayannath/miniconda3/envs/fairness-autosklearn/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1462, in check_is_fitted\n    raise NotFittedError(msg % {\"name\": type(estimator).__name__})\nsklearn.exceptions.NotFittedError: This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\n",
            "error": "NotFittedError(\"This FastICA instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.\")",
            "configuration_origin": "Random Search (sorted)"
        }
    },
    {
        "config_id": 185,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "minority_coalescer",
            "data_preprocessing:numerical_transformer:imputation:strategy": "most_frequent",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 0.0005262764827826671,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.24098398537145974,
            "classifier:CustomMLPClassifier:max_iter": 118,
            "classifier:CustomMLPClassifier:num_units": 120,
            "classifier:CustomMLPClassifier:tol": 0.002297281345058238,
            "data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction": 0.010000000000000005,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.7488884917029109,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.23406298818944407,
            "feature_preprocessor:fast_ica:algorithm": "deflation",
            "feature_preprocessor:fast_ica:fun": "logcosh",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 184.00641989707947,
        "additional_info": {
            "error": "Timeout",
            "configuration_origin": "Local Search"
        }
    },
    {
        "config_id": 186,
        "configuration": {
            "balancing:strategy": "none",
            "classifier:__choice__": "CustomMLPClassifier",
            "data_preprocessing:categorical_transformer:categorical_encoding:__choice__": "one_hot_encoding",
            "data_preprocessing:categorical_transformer:category_coalescence:__choice__": "no_coalescense",
            "data_preprocessing:numerical_transformer:imputation:strategy": "mean",
            "data_preprocessing:numerical_transformer:rescaling:__choice__": "robust_scaler",
            "feature_preprocessor:__choice__": "fast_ica",
            "classifier:CustomMLPClassifier:activation": "relu",
            "classifier:CustomMLPClassifier:alpha": 5.5774501149198717e-05,
            "classifier:CustomMLPClassifier:learning_rate_init": 0.3018235683688015,
            "classifier:CustomMLPClassifier:max_iter": 119,
            "classifier:CustomMLPClassifier:num_units": 95,
            "classifier:CustomMLPClassifier:tol": 0.00789392837948232,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max": 0.8978245439604444,
            "data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min": 0.24655538403827448,
            "feature_preprocessor:fast_ica:algorithm": "parallel",
            "feature_preprocessor:fast_ica:fun": "cube",
            "feature_preprocessor:fast_ica:whiten": "False"
        },
        "cost": 0.0,
        "time": 0.0,
        "additional_info": {}
    }
]